/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/contrib/inlineCompletions/ghostTextController.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __decorate=this&&this.__decorate||function(t,e,i,o){var n,s=arguments.length,r=s<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,i):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,i,o);else for(var l=t.length-1;l>=0;l--)(n=t[l])&&(r=(s<3?n(r):s>3?n(e,i,r):n(e,i))||r);return s>3&&r&&Object.defineProperty(e,i,r),r},__param=this&&this.__param||function(t,e){return function(i,o){e(i,o,t)}},__awaiter=this&&this.__awaiter||function(t,e,i,o){return new(i||(i=Promise))((function(n,s){function r(t){try{a(o.next(t))}catch(t){s(t)}}function l(t){try{a(o.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,l)}a((o=o.apply(t,e||[])).next())}))};import{Disposable,MutableDisposable,toDisposable}from"../../../base/common/lifecycle.js";import{EditorAction,EditorCommand,registerEditorAction,registerEditorCommand,registerEditorContribution}from"../../browser/editorExtensions.js";import{EditorContextKeys}from"../../common/editorContextKeys.js";import{GhostTextWidget}from"./ghostTextWidget.js";import*as nls from"../../../nls.js";import{ContextKeyExpr,IContextKeyService,RawContextKey}from"../../../platform/contextkey/common/contextkey.js";import{IInstantiationService}from"../../../platform/instantiation/common/instantiation.js";import{GhostTextModel}from"./ghostTextModel.js";let GhostTextController=class t extends Disposable{constructor(t,e){super(),this.editor=t,this.instantiationService=e,this.triggeredExplicitly=!1,this.activeController=this._register(new MutableDisposable),this._register(this.editor.onDidChangeModel((()=>{this.updateModelController()}))),this._register(this.editor.onDidChangeConfiguration((t=>{t.hasChanged(105)&&this.updateModelController(),t.hasChanged(53)&&this.updateModelController()}))),this.updateModelController()}static get(e){return e.getContribution(t.ID)}get activeModel(){var t;return null===(t=this.activeController.value)||void 0===t?void 0:t.model}updateModelController(){const t=this.editor.getOption(105),e=this.editor.getOption(53);this.activeController.value=void 0,this.activeController.value=this.editor.hasModel()&&(t.preview||e.enabled||this.triggeredExplicitly)?this.instantiationService.createInstance(ActiveGhostTextController,this.editor):void 0}shouldShowHoverAt(t){var e;return(null===(e=this.activeModel)||void 0===e?void 0:e.shouldShowHoverAt(t))||!1}shouldShowHoverAtViewZone(t){var e,i;return(null===(i=null===(e=this.activeController.value)||void 0===e?void 0:e.widget)||void 0===i?void 0:i.shouldShowHoverAtViewZone(t))||!1}trigger(){var t;this.triggeredExplicitly=!0,this.activeController.value||this.updateModelController(),null===(t=this.activeModel)||void 0===t||t.triggerInlineCompletion()}commit(){var t;null===(t=this.activeModel)||void 0===t||t.commitInlineCompletion()}hide(){var t;null===(t=this.activeModel)||void 0===t||t.hideInlineCompletion()}showNextInlineCompletion(){var t;null===(t=this.activeModel)||void 0===t||t.showNextInlineCompletion()}showPreviousInlineCompletion(){var t;null===(t=this.activeModel)||void 0===t||t.showPreviousInlineCompletion()}hasMultipleInlineCompletions(){var t;return __awaiter(this,void 0,void 0,(function*(){const e=yield null===(t=this.activeModel)||void 0===t?void 0:t.hasMultipleInlineCompletions();return void 0!==e&&e}))}};GhostTextController.inlineSuggestionVisible=new RawContextKey("inlineSuggestionVisible",!1,nls.localize("inlineSuggestionVisible","Whether an inline suggestion is visible")),GhostTextController.inlineSuggestionHasIndentation=new RawContextKey("inlineSuggestionHasIndentation",!1,nls.localize("inlineSuggestionHasIndentation","Whether the inline suggestion starts with whitespace")),GhostTextController.ID="editor.contrib.ghostTextController",GhostTextController=__decorate([__param(1,IInstantiationService)],GhostTextController);export{GhostTextController};class GhostTextContextKeys{constructor(t){this.contextKeyService=t,this.inlineCompletionVisible=GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService),this.inlineCompletionSuggestsIndentation=GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService)}}let ActiveGhostTextController=class extends Disposable{constructor(t,e,i){super(),this.editor=t,this.instantiationService=e,this.contextKeyService=i,this.contextKeys=new GhostTextContextKeys(this.contextKeyService),this.model=this._register(this.instantiationService.createInstance(GhostTextModel,this.editor)),this.widget=this._register(this.instantiationService.createInstance(GhostTextWidget,this.editor,this.model)),this._register(toDisposable((()=>{this.contextKeys.inlineCompletionVisible.set(!1),this.contextKeys.inlineCompletionSuggestsIndentation.set(!1)}))),this._register(this.model.onDidChange((()=>{this.updateContextKeys()}))),this.updateContextKeys()}updateContextKeys(){var t;this.contextKeys.inlineCompletionVisible.set(void 0!==(null===(t=this.model.activeInlineCompletionsModel)||void 0===t?void 0:t.ghostText));const e=this.model.inlineCompletionsModel.ghostText;if(e&&e.parts.length>0){const{column:t,lines:i}=e.parts[0],o=i[0].startsWith(" ")||i[0].startsWith("\t"),n=t<=this.editor.getModel().getLineIndentColumn(e.lineNumber);this.contextKeys.inlineCompletionSuggestsIndentation.set(!!this.model.activeInlineCompletionsModel&&o&&n)}else this.contextKeys.inlineCompletionSuggestsIndentation.set(!1)}};ActiveGhostTextController=__decorate([__param(1,IInstantiationService),__param(2,IContextKeyService)],ActiveGhostTextController);export{ActiveGhostTextController};const GhostTextCommand=EditorCommand.bindToContribution(GhostTextController.get);export const commitInlineSuggestionAction=new GhostTextCommand({id:"editor.action.inlineSuggest.commit",precondition:ContextKeyExpr.and(GhostTextController.inlineSuggestionVisible,GhostTextController.inlineSuggestionHasIndentation.toNegated(),EditorContextKeys.tabMovesFocus.toNegated()),kbOpts:{weight:200,primary:2},handler(t){t.commit(),t.editor.focus()}});registerEditorCommand(commitInlineSuggestionAction),registerEditorCommand(new GhostTextCommand({id:"editor.action.inlineSuggest.hide",precondition:GhostTextController.inlineSuggestionVisible,kbOpts:{weight:100,primary:9},handler(t){t.hide()}}));export class ShowNextInlineSuggestionAction extends EditorAction{constructor(){super({id:ShowNextInlineSuggestionAction.ID,label:nls.localize("action.inlineSuggest.showNext","Show Next Inline Suggestion"),alias:"Show Next Inline Suggestion",precondition:ContextKeyExpr.and(EditorContextKeys.writable,GhostTextController.inlineSuggestionVisible),kbOpts:{weight:100,primary:601}})}run(t,e){return __awaiter(this,void 0,void 0,(function*(){const t=GhostTextController.get(e);t&&(t.showNextInlineCompletion(),e.focus())}))}}ShowNextInlineSuggestionAction.ID="editor.action.inlineSuggest.showNext";export class ShowPreviousInlineSuggestionAction extends EditorAction{constructor(){super({id:ShowPreviousInlineSuggestionAction.ID,label:nls.localize("action.inlineSuggest.showPrevious","Show Previous Inline Suggestion"),alias:"Show Previous Inline Suggestion",precondition:ContextKeyExpr.and(EditorContextKeys.writable,GhostTextController.inlineSuggestionVisible),kbOpts:{weight:100,primary:599}})}run(t,e){return __awaiter(this,void 0,void 0,(function*(){const t=GhostTextController.get(e);t&&(t.showPreviousInlineCompletion(),e.focus())}))}}ShowPreviousInlineSuggestionAction.ID="editor.action.inlineSuggest.showPrevious";export class TriggerInlineSuggestionAction extends EditorAction{constructor(){super({id:"editor.action.inlineSuggest.trigger",label:nls.localize("action.inlineSuggest.trigger","Trigger Inline Suggestion"),alias:"Trigger Inline Suggestion",precondition:EditorContextKeys.writable})}run(t,e){return __awaiter(this,void 0,void 0,(function*(){const t=GhostTextController.get(e);t&&t.trigger()}))}}registerEditorContribution(GhostTextController.ID,GhostTextController),registerEditorAction(TriggerInlineSuggestionAction),registerEditorAction(ShowNextInlineSuggestionAction),registerEditorAction(ShowPreviousInlineSuggestionAction);
//# sourceMappingURL=/sm/112dfeb190af77c91b13443ad3739a3d3cec9942304a2e73d0f74c67122b62cf.map
/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/contrib/indentation/indentation.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as nls from"../../../nls.js";import{DisposableStore}from"../../../base/common/lifecycle.js";import*as strings from"../../../base/common/strings.js";import{EditorAction,registerEditorAction,registerEditorContribution}from"../../browser/editorExtensions.js";import{ShiftCommand}from"../../common/commands/shiftCommand.js";import{EditOperation}from"../../common/core/editOperation.js";import{Range}from"../../common/core/range.js";import{Selection}from"../../common/core/selection.js";import{EditorContextKeys}from"../../common/editorContextKeys.js";import{TextModel}from"../../common/model/textModel.js";import{LanguageConfigurationRegistry}from"../../common/modes/languageConfigurationRegistry.js";import{IModelService}from"../../common/services/modelService.js";import*as indentUtils from"./indentUtils.js";import{IQuickInputService}from"../../../platform/quickinput/common/quickInput.js";export function getReindentEditOperations(e,t,n,i){if(1===e.getLineCount()&&1===e.getLineMaxColumn(1))return[];let o=LanguageConfigurationRegistry.getIndentationRules(e.getLanguageIdentifier().id);if(!o)return[];for(n=Math.min(n,e.getLineCount());t<=n&&o.unIndentedLinePattern;){let n=e.getLineContent(t);if(!o.unIndentedLinePattern.test(n))break;t++}if(t>n-1)return[];const{tabSize:s,indentSize:r,insertSpaces:a}=e.getOptions(),d=(e,t)=>(t=t||1,ShiftCommand.shiftIndent(e,e.length+t,s,r,a)),l=(e,t)=>(t=t||1,ShiftCommand.unshiftIndent(e,e.length+t,s,r,a));let c,g=[],u=e.getLineContent(t),p=u;if(null!=i){c=i;let e=strings.getLeadingWhitespace(u);p=c+u.substring(e.length),o.decreaseIndentPattern&&o.decreaseIndentPattern.test(p)&&(c=l(c),p=c+u.substring(e.length)),u!==p&&g.push(EditOperation.replaceMove(new Selection(t,1,t,e.length+1),TextModel.normalizeIndentation(c,r,a)))}else c=strings.getLeadingWhitespace(u);let h=c;o.increaseIndentPattern&&o.increaseIndentPattern.test(p)?(h=d(h),c=d(c)):o.indentNextLinePattern&&o.indentNextLinePattern.test(p)&&(h=d(h));for(let i=++t;i<=n;i++){let t=e.getLineContent(i),n=strings.getLeadingWhitespace(t),s=h+t.substring(n.length);o.decreaseIndentPattern&&o.decreaseIndentPattern.test(s)&&(h=l(h),c=l(c)),n!==h&&g.push(EditOperation.replaceMove(new Selection(i,1,i,n.length+1),TextModel.normalizeIndentation(h,r,a))),o.unIndentedLinePattern&&o.unIndentedLinePattern.test(t)||(o.increaseIndentPattern&&o.increaseIndentPattern.test(s)?(c=d(c),h=c):h=o.indentNextLinePattern&&o.indentNextLinePattern.test(s)?d(h):c)}return g}export class IndentationToSpacesAction extends EditorAction{constructor(){super({id:IndentationToSpacesAction.ID,label:nls.localize("indentationToSpaces","Convert Indentation to Spaces"),alias:"Convert Indentation to Spaces",precondition:EditorContextKeys.writable})}run(e,t){let n=t.getModel();if(!n)return;let i=n.getOptions(),o=t.getSelection();if(!o)return;const s=new IndentationToSpacesCommand(o,i.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[s]),t.pushUndoStop(),n.updateOptions({insertSpaces:!0})}}IndentationToSpacesAction.ID="editor.action.indentationToSpaces";export class IndentationToTabsAction extends EditorAction{constructor(){super({id:IndentationToTabsAction.ID,label:nls.localize("indentationToTabs","Convert Indentation to Tabs"),alias:"Convert Indentation to Tabs",precondition:EditorContextKeys.writable})}run(e,t){let n=t.getModel();if(!n)return;let i=n.getOptions(),o=t.getSelection();if(!o)return;const s=new IndentationToTabsCommand(o,i.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[s]),t.pushUndoStop(),n.updateOptions({insertSpaces:!1})}}IndentationToTabsAction.ID="editor.action.indentationToTabs";export class ChangeIndentationSizeAction extends EditorAction{constructor(e,t){super(t),this.insertSpaces=e}run(e,t){const n=e.get(IQuickInputService),i=e.get(IModelService);let o=t.getModel();if(!o)return;let s=i.getCreationOptions(o.getLanguageIdentifier().language,o.uri,o.isForSimpleWidget);const r=[1,2,3,4,5,6,7,8].map((e=>({id:e.toString(),label:e.toString(),description:e===s.tabSize?nls.localize("configuredTabSize","Configured Tab Size"):void 0}))),a=Math.min(o.getOptions().tabSize-1,7);setTimeout((()=>{n.pick(r,{placeHolder:nls.localize({key:"selectTabWidth",comment:["Tab corresponds to the tab key"]},"Select Tab Size for Current File"),activeItem:r[a]}).then((e=>{e&&o&&!o.isDisposed()&&o.updateOptions({tabSize:parseInt(e.label,10),insertSpaces:this.insertSpaces})}))}),50)}}export class IndentUsingTabs extends ChangeIndentationSizeAction{constructor(){super(!1,{id:IndentUsingTabs.ID,label:nls.localize("indentUsingTabs","Indent Using Tabs"),alias:"Indent Using Tabs",precondition:void 0})}}IndentUsingTabs.ID="editor.action.indentUsingTabs";export class IndentUsingSpaces extends ChangeIndentationSizeAction{constructor(){super(!0,{id:IndentUsingSpaces.ID,label:nls.localize("indentUsingSpaces","Indent Using Spaces"),alias:"Indent Using Spaces",precondition:void 0})}}IndentUsingSpaces.ID="editor.action.indentUsingSpaces";export class DetectIndentation extends EditorAction{constructor(){super({id:DetectIndentation.ID,label:nls.localize("detectIndentation","Detect Indentation from Content"),alias:"Detect Indentation from Content",precondition:void 0})}run(e,t){const n=e.get(IModelService);let i=t.getModel();if(!i)return;let o=n.getCreationOptions(i.getLanguageIdentifier().language,i.uri,i.isForSimpleWidget);i.detectIndentation(o.insertSpaces,o.tabSize)}}DetectIndentation.ID="editor.action.detectIndentation";export class ReindentLinesAction extends EditorAction{constructor(){super({id:"editor.action.reindentlines",label:nls.localize("editor.reindentlines","Reindent Lines"),alias:"Reindent Lines",precondition:EditorContextKeys.writable})}run(e,t){let n=t.getModel();if(!n)return;let i=getReindentEditOperations(n,1,n.getLineCount());i.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,i),t.pushUndoStop())}}export class ReindentSelectedLinesAction extends EditorAction{constructor(){super({id:"editor.action.reindentselectedlines",label:nls.localize("editor.reindentselectedlines","Reindent Selected Lines"),alias:"Reindent Selected Lines",precondition:EditorContextKeys.writable})}run(e,t){let n=t.getModel();if(!n)return;let i=t.getSelections();if(null===i)return;let o=[];for(let e of i){let t=e.startLineNumber,i=e.endLineNumber;if(t!==i&&1===e.endColumn&&i--,1===t){if(t===i)continue}else t--;let s=getReindentEditOperations(n,t,i);o.push(...s)}o.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,o),t.pushUndoStop())}}export class AutoIndentOnPasteCommand{constructor(e,t){this._initialSelection=t,this._edits=[],this._selectionId=null;for(let t of e)t.range&&"string"==typeof t.text&&this._edits.push(t)}getEditOperations(e,t){for(let e of this._edits)t.addEditOperation(Range.lift(e.range),e.text);let n=!1;Array.isArray(this._edits)&&1===this._edits.length&&this._initialSelection.isEmpty()&&(this._edits[0].range.startColumn===this._initialSelection.endColumn&&this._edits[0].range.startLineNumber===this._initialSelection.endLineNumber?(n=!0,this._selectionId=t.trackSelection(this._initialSelection,!0)):this._edits[0].range.endColumn===this._initialSelection.startColumn&&this._edits[0].range.endLineNumber===this._initialSelection.startLineNumber&&(n=!0,this._selectionId=t.trackSelection(this._initialSelection,!1))),n||(this._selectionId=t.trackSelection(this._initialSelection))}computeCursorState(e,t){return t.getTrackedSelection(this._selectionId)}}export class AutoIndentOnPaste{constructor(e){this.callOnDispose=new DisposableStore,this.callOnModel=new DisposableStore,this.editor=e,this.callOnDispose.add(e.onDidChangeConfiguration((()=>this.update()))),this.callOnDispose.add(e.onDidChangeModel((()=>this.update()))),this.callOnDispose.add(e.onDidChangeModelLanguage((()=>this.update())))}update(){this.callOnModel.clear(),this.editor.getOption(9)<4||this.editor.getOption(45)||this.editor.hasModel()&&this.callOnModel.add(this.editor.onDidPaste((({range:e})=>{this.trigger(e)})))}trigger(e){let t=this.editor.getSelections();if(null===t||t.length>1)return;const n=this.editor.getModel();if(!n)return;if(!n.isCheapToTokenize(e.getStartPosition().lineNumber))return;const i=this.editor.getOption(9),{tabSize:o,indentSize:s,insertSpaces:r}=n.getOptions();let a=[],d={shiftIndent:e=>ShiftCommand.shiftIndent(e,e.length+1,o,s,r),unshiftIndent:e=>ShiftCommand.unshiftIndent(e,e.length+1,o,s,r)},l=e.startLineNumber;for(;l<=e.endLineNumber&&this.shouldIgnoreLine(n,l);)l++;if(l>e.endLineNumber)return;let c=n.getLineContent(l);if(!/\S/.test(c.substring(0,e.startColumn-1))){let e=LanguageConfigurationRegistry.getGoodIndentForLine(i,n,n.getLanguageIdentifier().id,l,d);if(null!==e){let t=strings.getLeadingWhitespace(c),i=indentUtils.getSpaceCnt(e,o);if(i!==indentUtils.getSpaceCnt(t,o)){let e=indentUtils.generateIndent(i,o,r);a.push({range:new Range(l,1,l,t.length+1),text:e}),c=e+c.substr(t.length)}else{let e=LanguageConfigurationRegistry.getIndentMetadata(n,l);if(0===e||8===e)return}}}const g=l;for(;l<e.endLineNumber&&!/\S/.test(n.getLineContent(l+1));)l++;if(l!==e.endLineNumber){let t={getLineTokens:e=>n.getLineTokens(e),getLanguageIdentifier:()=>n.getLanguageIdentifier(),getLanguageIdAtPosition:(e,t)=>n.getLanguageIdAtPosition(e,t),getLineContent:e=>e===g?c:n.getLineContent(e)},s=LanguageConfigurationRegistry.getGoodIndentForLine(i,t,n.getLanguageIdentifier().id,l+1,d);if(null!==s){let t=indentUtils.getSpaceCnt(s,o),i=indentUtils.getSpaceCnt(strings.getLeadingWhitespace(n.getLineContent(l+1)),o);if(t!==i){let s=t-i;for(let t=l+1;t<=e.endLineNumber;t++){let e=n.getLineContent(t),i=strings.getLeadingWhitespace(e),d=indentUtils.getSpaceCnt(i,o)+s,l=indentUtils.generateIndent(d,o,r);l!==i&&a.push({range:new Range(t,1,t,i.length+1),text:l})}}}}if(a.length>0){this.editor.pushUndoStop();let e=new AutoIndentOnPasteCommand(a,this.editor.getSelection());this.editor.executeCommand("autoIndentOnPaste",e),this.editor.pushUndoStop()}}shouldIgnoreLine(e,t){e.forceTokenization(t);let n=e.getLineFirstNonWhitespaceColumn(t);if(0===n)return!0;let i=e.getLineTokens(t);if(i.getCount()>0){let e=i.findTokenIndexAtOffset(n);if(e>=0&&1===i.getStandardTokenType(e))return!0}return!1}dispose(){this.callOnDispose.dispose(),this.callOnModel.dispose()}}function getIndentationEditOperations(e,t,n,i){if(1===e.getLineCount()&&1===e.getLineMaxColumn(1))return;let o="";for(let e=0;e<n;e++)o+=" ";let s=new RegExp(o,"gi");for(let n=1,r=e.getLineCount();n<=r;n++){let r=e.getLineFirstNonWhitespaceColumn(n);if(0===r&&(r=e.getLineMaxColumn(n)),1===r)continue;const a=new Range(n,1,n,r),d=e.getValueInRange(a),l=i?d.replace(/\t/gi,o):d.replace(s,"\t");t.addEditOperation(a,l)}}AutoIndentOnPaste.ID="editor.contrib.autoIndentOnPaste";export class IndentationToSpacesCommand{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),getIndentationEditOperations(e,t,this.tabSize,!0)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}}export class IndentationToTabsCommand{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),getIndentationEditOperations(e,t,this.tabSize,!1)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}}registerEditorContribution(AutoIndentOnPaste.ID,AutoIndentOnPaste),registerEditorAction(IndentationToSpacesAction),registerEditorAction(IndentationToTabsAction),registerEditorAction(IndentUsingTabs),registerEditorAction(IndentUsingSpaces),registerEditorAction(DetectIndentation),registerEditorAction(ReindentLinesAction),registerEditorAction(ReindentSelectedLinesAction);
//# sourceMappingURL=/sm/b8f43c3931e80327a5729563161a6b1d68e1960d995503f5bc10bd4c06427cdc.map
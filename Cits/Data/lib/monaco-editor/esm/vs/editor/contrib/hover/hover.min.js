/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/contrib/hover/hover.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __decorate=this&&this.__decorate||function(o,e,t,i){var r,n=arguments.length,s=n<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(o,e,t,i);else for(var d=o.length-1;d>=0;d--)(r=o[d])&&(s=(n<3?r(s):n>3?r(e,t,s):r(e,t))||s);return n>3&&s&&Object.defineProperty(e,t,s),s},__param=this&&this.__param||function(o,e){return function(t,i){e(t,i,o)}};import*as nls from"../../../nls.js";import{KeyChord}from"../../../base/common/keyCodes.js";import{DisposableStore}from"../../../base/common/lifecycle.js";import{EditorAction,registerEditorAction,registerEditorContribution}from"../../browser/editorExtensions.js";import{Range}from"../../common/core/range.js";import{EditorContextKeys}from"../../common/editorContextKeys.js";import{IModeService}from"../../common/services/modeService.js";import{ModesContentHoverWidget}from"./modesContentHover.js";import{ModesGlyphHoverWidget}from"./modesGlyphHover.js";import{IOpenerService}from"../../../platform/opener/common/opener.js";import{editorHoverBackground,editorHoverBorder,editorHoverHighlight,textCodeBlockBackground,textLinkForeground,editorHoverStatusBarBackground,editorHoverForeground,textLinkActiveForeground}from"../../../platform/theme/common/colorRegistry.js";import{registerThemingParticipant}from"../../../platform/theme/common/themeService.js";import{GotoDefinitionAtPositionEditorContribution}from"../gotoSymbol/link/goToDefinitionAtPosition.js";import{IContextKeyService}from"../../../platform/contextkey/common/contextkey.js";import{IInstantiationService}from"../../../platform/instantiation/common/instantiation.js";let ModesHoverController=class o{constructor(o,e,t,i,r){this._editor=o,this._instantiationService=e,this._openerService=t,this._modeService=i,this._toUnhook=new DisposableStore,this._isMouseDown=!1,this._hoverClicked=!1,this._contentWidget=null,this._glyphWidget=null,this._hookEvents(),this._didChangeConfigurationHandler=this._editor.onDidChangeConfiguration((o=>{o.hasChanged(51)&&(this._unhookEvents(),this._hookEvents())})),this._hoverVisibleKey=EditorContextKeys.hoverVisible.bindTo(r)}static get(e){return e.getContribution(o.ID)}_hookEvents(){const o=()=>this._hideWidgets(),e=this._editor.getOption(51);this._isHoverEnabled=e.enabled,this._isHoverSticky=e.sticky,this._isHoverEnabled?(this._toUnhook.add(this._editor.onMouseDown((o=>this._onEditorMouseDown(o)))),this._toUnhook.add(this._editor.onMouseUp((o=>this._onEditorMouseUp(o)))),this._toUnhook.add(this._editor.onMouseMove((o=>this._onEditorMouseMove(o)))),this._toUnhook.add(this._editor.onKeyDown((o=>this._onKeyDown(o)))),this._toUnhook.add(this._editor.onDidChangeModelDecorations((()=>this._onModelDecorationsChanged())))):(this._toUnhook.add(this._editor.onMouseMove((o=>this._onEditorMouseMove(o)))),this._toUnhook.add(this._editor.onKeyDown((o=>this._onKeyDown(o))))),this._toUnhook.add(this._editor.onMouseLeave(o)),this._toUnhook.add(this._editor.onDidChangeModel(o)),this._toUnhook.add(this._editor.onDidScrollChange((o=>this._onEditorScrollChanged(o))))}_unhookEvents(){this._toUnhook.clear()}_onModelDecorationsChanged(){var o,e;null===(o=this._contentWidget)||void 0===o||o.onModelDecorationsChanged(),null===(e=this._glyphWidget)||void 0===e||e.onModelDecorationsChanged()}_onEditorScrollChanged(o){(o.scrollTopChanged||o.scrollLeftChanged)&&this._hideWidgets()}_onEditorMouseDown(o){this._isMouseDown=!0;const e=o.target.type;9!==e||o.target.detail!==ModesContentHoverWidget.ID?12===e&&o.target.detail===ModesGlyphHoverWidget.ID||(12!==e&&o.target.detail!==ModesGlyphHoverWidget.ID&&(this._hoverClicked=!1),this._hideWidgets()):this._hoverClicked=!0}_onEditorMouseUp(o){this._isMouseDown=!1}_onEditorMouseMove(o){var e,t,i,r,n;let s=o.target.type;if(this._isMouseDown&&this._hoverClicked)return;if(this._isHoverSticky&&9===s&&o.target.detail===ModesContentHoverWidget.ID)return;if(this._isHoverSticky&&!(null===(t=null===(e=o.event.browserEvent.view)||void 0===e?void 0:e.getSelection())||void 0===t?void 0:t.isCollapsed))return;if(!this._isHoverSticky&&9===s&&o.target.detail===ModesContentHoverWidget.ID&&(null===(i=this._contentWidget)||void 0===i?void 0:i.isColorPickerVisible()))return;if(this._isHoverSticky&&12===s&&o.target.detail===ModesGlyphHoverWidget.ID)return;if(!this._isHoverEnabled)return void this._hideWidgets();if(!this._getOrCreateContentWidget().maybeShowAt(o))return 2===s&&o.target.position?(null===(n=this._contentWidget)||void 0===n||n.hide(),this._glyphWidget||(this._glyphWidget=new ModesGlyphHoverWidget(this._editor,this._modeService,this._openerService)),void this._glyphWidget.startShowingAt(o.target.position.lineNumber)):void this._hideWidgets();null===(r=this._glyphWidget)||void 0===r||r.hide()}_onKeyDown(o){5!==o.keyCode&&6!==o.keyCode&&57!==o.keyCode&&4!==o.keyCode&&this._hideWidgets()}_hideWidgets(){var o,e,t;this._isMouseDown&&this._hoverClicked&&(null===(o=this._contentWidget)||void 0===o?void 0:o.isColorPickerVisible())||(this._hoverClicked=!1,null===(e=this._glyphWidget)||void 0===e||e.hide(),null===(t=this._contentWidget)||void 0===t||t.hide())}_getOrCreateContentWidget(){return this._contentWidget||(this._contentWidget=this._instantiationService.createInstance(ModesContentHoverWidget,this._editor,this._hoverVisibleKey)),this._contentWidget}isColorPickerVisible(){var o;return(null===(o=this._contentWidget)||void 0===o?void 0:o.isColorPickerVisible())||!1}showContentHover(o,e,t){this._getOrCreateContentWidget().startShowingAtRange(o,e,t)}dispose(){var o,e;this._unhookEvents(),this._toUnhook.dispose(),this._didChangeConfigurationHandler.dispose(),null===(o=this._glyphWidget)||void 0===o||o.dispose(),null===(e=this._contentWidget)||void 0===e||e.dispose()}};ModesHoverController.ID="editor.contrib.hover",ModesHoverController=__decorate([__param(1,IInstantiationService),__param(2,IOpenerService),__param(3,IModeService),__param(4,IContextKeyService)],ModesHoverController);export{ModesHoverController};class ShowHoverAction extends EditorAction{constructor(){super({id:"editor.action.showHover",label:nls.localize({key:"showHover",comment:["Label for action that will trigger the showing of a hover in the editor.","This allows for users to show the hover without using the mouse."]},"Show Hover"),alias:"Show Hover",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:KeyChord(2089,2087),weight:100}})}run(o,e){if(!e.hasModel())return;let t=ModesHoverController.get(e);if(!t)return;const i=e.getPosition(),r=new Range(i.lineNumber,i.column,i.lineNumber,i.column),n=2===e.getOption(2);t.showContentHover(r,1,n)}}class ShowDefinitionPreviewHoverAction extends EditorAction{constructor(){super({id:"editor.action.showDefinitionPreviewHover",label:nls.localize({key:"showDefinitionPreviewHover",comment:["Label for action that will trigger the showing of definition preview hover in the editor.","This allows for users to show the definition preview hover without using the mouse."]},"Show Definition Preview Hover"),alias:"Show Definition Preview Hover",precondition:void 0})}run(o,e){let t=ModesHoverController.get(e);if(!t)return;const i=e.getPosition();if(!i)return;const r=new Range(i.lineNumber,i.column,i.lineNumber,i.column);GotoDefinitionAtPositionEditorContribution.get(e).startFindDefinitionFromCursor(i).then((()=>{t.showContentHover(r,1,!0)}))}}registerEditorContribution(ModesHoverController.ID,ModesHoverController),registerEditorAction(ShowHoverAction),registerEditorAction(ShowDefinitionPreviewHoverAction),registerThemingParticipant(((o,e)=>{const t=o.getColor(editorHoverHighlight);t&&e.addRule(`.monaco-editor .hoverHighlight { background-color: ${t}; }`);const i=o.getColor(editorHoverBackground);i&&e.addRule(`.monaco-editor .monaco-hover { background-color: ${i}; }`);const r=o.getColor(editorHoverBorder);r&&(e.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${r}; }`),e.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${r.transparent(.5)}; }`),e.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${r.transparent(.5)}; }`),e.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${r.transparent(.5)}; }`));const n=o.getColor(textLinkForeground);n&&e.addRule(`.monaco-editor .monaco-hover a { color: ${n}; }`);const s=o.getColor(textLinkActiveForeground);s&&e.addRule(`.monaco-editor .monaco-hover a:hover { color: ${s}; }`);const d=o.getColor(editorHoverForeground);d&&e.addRule(`.monaco-editor .monaco-hover { color: ${d}; }`);const h=o.getColor(editorHoverStatusBarBackground);h&&e.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${h}; }`);const l=o.getColor(textCodeBlockBackground);l&&e.addRule(`.monaco-editor .monaco-hover code { background-color: ${l}; }`)}));
//# sourceMappingURL=/sm/66b0aedfcfba091453d5fe3049a7974671faacbc992007bdccac56981c24564e.map
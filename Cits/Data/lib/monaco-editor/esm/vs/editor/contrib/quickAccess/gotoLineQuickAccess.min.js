/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/contrib/quickAccess/gotoLineQuickAccess.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{localize}from"../../../nls.js";import{DisposableStore,Disposable,toDisposable}from"../../../base/common/lifecycle.js";import{AbstractEditorNavigationQuickAccessProvider}from"./editorNavigationQuickAccess.js";import{getCodeEditor}from"../../browser/editorBrowser.js";export class AbstractGotoLineQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider{constructor(){super({canAcceptInBackground:!0})}provideWithoutTextEditor(e){const i=localize("cannotRunGotoLine","Open a text editor first to go to a line.");return e.items=[{label:i}],e.ariaLabel=i,Disposable.None}provideWithTextEditor(e,i,t){const o=e.editor,n=new DisposableStore;n.add(i.onDidAccept((t=>{const[n]=i.selectedItems;if(n){if(!this.isValidLineNumber(o,n.lineNumber))return;this.gotoLocation(e,{range:this.toRange(n.lineNumber,n.column),keyMods:i.keyMods,preserveFocus:t.inBackground}),t.inBackground||i.hide()}})));const r=()=>{const e=this.parsePosition(o,i.value.trim().substr(AbstractGotoLineQuickAccessProvider.PREFIX.length)),t=this.getPickLabel(o,e.lineNumber,e.column);if(i.items=[{lineNumber:e.lineNumber,column:e.column,label:t}],i.ariaLabel=t,!this.isValidLineNumber(o,e.lineNumber))return void this.clearDecorations(o);const n=this.toRange(e.lineNumber,e.column);o.revealRangeInCenter(n,0),this.addDecorations(o,n)};r(),n.add(i.onDidChangeValue((()=>r())));const s=getCodeEditor(o);if(s){2===s.getOptions().get(58).renderType&&(s.updateOptions({lineNumbers:"on"}),n.add(toDisposable((()=>s.updateOptions({lineNumbers:"relative"})))))}return n}toRange(e=1,i=1){return{startLineNumber:e,startColumn:i,endLineNumber:e,endColumn:i}}parsePosition(e,i){const t=i.split(/,|:|#/).map((e=>parseInt(e,10))).filter((e=>!isNaN(e))),o=this.lineCount(e)+1;return{lineNumber:t[0]>0?t[0]:o+t[0],column:t[1]}}getPickLabel(e,i,t){if(this.isValidLineNumber(e,i))return this.isValidColumn(e,i,t)?localize("gotoLineColumnLabel","Go to line {0} and character {1}.",i,t):localize("gotoLineLabel","Go to line {0}.",i);const o=e.getPosition()||{lineNumber:1,column:1},n=this.lineCount(e);return n>1?localize("gotoLineLabelEmptyWithLimit","Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.",o.lineNumber,o.column,n):localize("gotoLineLabelEmpty","Current Line: {0}, Character: {1}. Type a line number to navigate to.",o.lineNumber,o.column)}isValidLineNumber(e,i){return!(!i||"number"!=typeof i)&&(i>0&&i<=this.lineCount(e))}isValidColumn(e,i,t){if(!t||"number"!=typeof t)return!1;const o=this.getModel(e);if(!o)return!1;const n={lineNumber:i,column:t};return o.validatePosition(n).equals(n)}lineCount(e){var i,t;return null!==(t=null===(i=this.getModel(e))||void 0===i?void 0:i.getLineCount())&&void 0!==t?t:0}}AbstractGotoLineQuickAccessProvider.PREFIX=":";
//# sourceMappingURL=/sm/352bee5a23492b64feb76d9c49ee0ae3f43bc3b84a121020650cf2e7478c9ffb.map
/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/contrib/inlineCompletions/suggestWidgetAdapterModel.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{RunOnceScheduler}from"../../../base/common/async.js";import{Event}from"../../../base/common/event.js";import{toDisposable}from"../../../base/common/lifecycle.js";import{Range}from"../../common/core/range.js";import{BaseGhostTextWidgetModel,GhostText}from"./ghostText.js";import{inlineCompletionToGhostText}from"./inlineCompletionsModel.js";import{SnippetParser}from"../snippet/snippetParser.js";import{SnippetSession}from"../snippet/snippetSession.js";import{SuggestController}from"../suggest/suggestController.js";export class SuggestWidgetAdapterModel extends BaseGhostTextWidgetModel{constructor(e){super(e),this.isSuggestWidgetVisible=!1,this.currentGhostText=void 0,this._isActive=!1,this.isShiftKeyPressed=!1,this.minReservedLineCount=0,this.setInactiveDelayed=this._register(new RunOnceScheduler((()=>{this.isSuggestWidgetVisible||this.isActive&&(this._isActive=!1,this.onDidChangeEmitter.fire())}),100));const t=SuggestController.get(this.editor);if(t){let e=!1;const i=()=>{e||(e=!0,this._register(t.widget.value.onDidShow((()=>{this.isSuggestWidgetVisible=!0,this._isActive=!0,this.updateFromSuggestion()}))),this._register(t.widget.value.onDidHide((()=>{this.isSuggestWidgetVisible=!1,this.setInactiveDelayed.schedule(),this.minReservedLineCount=0,this.updateFromSuggestion()}))),this._register(t.widget.value.onDidFocus((()=>{this.isSuggestWidgetVisible=!0,this._isActive=!0,this.updateFromSuggestion()}))))};this._register(Event.once(t.model.onDidTrigger)((e=>{i()})))}this.updateFromSuggestion(),this._register(this.editor.onDidChangeCursorPosition((e=>{this.isSuggestionPreviewEnabled()&&this.update()}))),this._register(toDisposable((()=>{const e=SuggestController.get(this.editor);e&&e.stopForceRenderingAbove()}))),this._register(e.onKeyDown((e=>{e.shiftKey&&!this.isShiftKeyPressed&&(this.isShiftKeyPressed=!0,this.updateFromSuggestion())}))),this._register(e.onKeyUp((e=>{e.shiftKey&&this.isShiftKeyPressed&&(this.isShiftKeyPressed=!1,this.updateFromSuggestion())})))}get isActive(){return this._isActive}setExpanded(e){super.setExpanded(e),this.updateFromSuggestion()}isSuggestionPreviewEnabled(){return this.editor.getOption(105).preview}updateFromSuggestion(){const e=SuggestController.get(this.editor);if(!e)return void this.setCurrentInlineCompletion(void 0);if(!this.isSuggestWidgetVisible)return void this.setCurrentInlineCompletion(void 0);const t=e.widget.value.getFocusedItem();t?this.setCurrentInlineCompletion(getInlineCompletion(e,this.editor.getPosition(),t,this.isShiftKeyPressed)):this.setCurrentInlineCompletion(void 0)}setCurrentInlineCompletion(e){this.currentCompletion=e,this.update()}update(){const e=this.currentCompletion,t=this.editor.getOptions().get(105).previewMode;this.setGhostText(e?inlineCompletionToGhostText(e,this.editor.getModel(),t,this.editor.getPosition())||new GhostText(e.range.endLineNumber,[],this.minReservedLineCount):void 0)}setGhostText(e){if(GhostText.equals(this.currentGhostText,e))return;this.currentGhostText=e,this.currentGhostText&&this.expanded&&(this.minReservedLineCount=Math.max(this.minReservedLineCount,...this.currentGhostText.parts.map((e=>e.lines.length-1))));const t=SuggestController.get(this.editor);t&&(this.minReservedLineCount>=1&&this.isSuggestionPreviewEnabled()?t.forceRenderingAbove():t.stopForceRenderingAbove()),this.onDidChangeEmitter.fire()}get ghostText(){return this.isSuggestionPreviewEnabled()?this.currentGhostText:void 0}}function getInlineCompletion(e,t,i,s){const o=i.item;if(Array.isArray(o.completion.additionalTextEdits))return{text:"",range:Range.fromPositions(t,t)};let{insertText:n}=o.completion;if(4&o.completion.insertTextRules){const i=(new SnippetParser).parse(n),s=e.editor.getModel();SnippetSession.adjustWhitespace(s,t,i,!0,!0),n=i.toString()}const r=e.getOverwriteInfo(o,s);return{text:n,range:Range.fromPositions(t.delta(0,-r.overwriteBefore),t.delta(0,Math.max(r.overwriteAfter,0)))}}
//# sourceMappingURL=/sm/50b90c127fbad30265a20e546bf445c303c4feda784b8e7d3e341e6780481c6b.map
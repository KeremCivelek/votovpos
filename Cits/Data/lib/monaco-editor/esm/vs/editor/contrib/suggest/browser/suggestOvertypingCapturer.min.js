/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/monaco-editor@0.33.0/esm/vs/editor/contrib/suggest/browser/suggestOvertypingCapturer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{DisposableStore}from"../../../../base/common/lifecycle.js";export class OvertypingCapturer{constructor(e,t){this._disposables=new DisposableStore,this._lastOvertyped=[],this._empty=!0,this._disposables.add(e.onWillType((()=>{if(!this._empty)return;if(!e.hasModel())return;const t=e.getSelections(),s=t.length;let i=!1;for(let e=0;e<s;e++)if(!t[e].isEmpty()){i=!0;break}if(!i)return;this._lastOvertyped=[];const r=e.getModel();for(let e=0;e<s;e++){const s=t[e];if(r.getValueLengthInRange(s)>OvertypingCapturer._maxSelectionLength)return;this._lastOvertyped[e]={value:r.getValueInRange(s),multiline:s.startLineNumber!==s.endLineNumber}}this._empty=!1}))),this._disposables.add(t.onDidCancel((e=>{this._empty||e.retrigger||(this._empty=!0)})))}getLastOvertypedInfo(e){if(!this._empty&&e>=0&&e<this._lastOvertyped.length)return this._lastOvertyped[e]}dispose(){this._disposables.dispose()}}OvertypingCapturer._maxSelectionLength=51200;
//# sourceMappingURL=/sm/0f9caa9d16cd8acd743fbc198334dec625b4fb1804866d35a2c0a8b801dbe28e.map
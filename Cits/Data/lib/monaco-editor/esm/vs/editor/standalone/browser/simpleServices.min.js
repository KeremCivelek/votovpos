/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/standalone/browser/simpleServices.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __decorate=this&&this.__decorate||function(e,i,o,t){var r,n=arguments.length,s=n<3?i:null===t?t=Object.getOwnPropertyDescriptor(i,o):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,i,o,t);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(s=(n<3?r(s):n>3?r(i,o,s):r(i,o))||s);return n>3&&s&&Object.defineProperty(i,o,s),s},__param=this&&this.__param||function(e,i){return function(o,t){i(o,t,e)}},__awaiter=this&&this.__awaiter||function(e,i,o,t){return new(o||(o=Promise))((function(r,n){function s(e){try{c(t.next(e))}catch(e){n(e)}}function a(e){try{c(t.throw(e))}catch(e){n(e)}}function c(e){var i;e.done?r(e.value):(i=e.value,i instanceof o?i:new o((function(e){e(i)}))).then(s,a)}c((t=t.apply(e,i||[])).next())}))};import*as strings from"../../../base/common/strings.js";import*as dom from"../../../base/browser/dom.js";import{StandardKeyboardEvent}from"../../../base/browser/keyboardEvent.js";import{Emitter,Event}from"../../../base/common/event.js";import{SimpleKeybinding,createKeybinding}from"../../../base/common/keyCodes.js";import{ImmortalReference,toDisposable,DisposableStore,Disposable}from"../../../base/common/lifecycle.js";import{OS,isLinux,isMacintosh}from"../../../base/common/platform.js";import Severity from"../../../base/common/severity.js";import{URI}from"../../../base/common/uri.js";import{isCodeEditor}from"../../browser/editorBrowser.js";import{ResourceTextEdit}from"../../browser/services/bulkEditService.js";import{isDiffEditorConfigurationKey,isEditorConfigurationKey}from"../../common/config/commonEditorConfig.js";import{EditOperation}from"../../common/core/editOperation.js";import{Position as Pos}from"../../common/core/position.js";import{Range}from"../../common/core/range.js";import{IModelService}from"../../common/services/modelService.js";import{CommandsRegistry}from"../../../platform/commands/common/commands.js";import{IConfigurationService}from"../../../platform/configuration/common/configuration.js";import{Configuration,ConfigurationModel,DefaultConfigurationModel,ConfigurationChangeEvent}from"../../../platform/configuration/common/configurationModels.js";import{AbstractKeybindingService}from"../../../platform/keybinding/common/abstractKeybindingService.js";import{KeybindingResolver}from"../../../platform/keybinding/common/keybindingResolver.js";import{KeybindingsRegistry}from"../../../platform/keybinding/common/keybindingsRegistry.js";import{ResolvedKeybindingItem}from"../../../platform/keybinding/common/resolvedKeybindingItem.js";import{USLayoutResolvedKeybinding}from"../../../platform/keybinding/common/usLayoutResolvedKeybinding.js";import{NoOpNotification}from"../../../platform/notification/common/notification.js";import{WorkspaceFolder}from"../../../platform/workspace/common/workspace.js";import{SimpleServicesNLS}from"../../common/standaloneStrings.js";export class SimpleModel{constructor(e){this.disposed=!1,this.model=e,this._onWillDispose=new Emitter}get textEditorModel(){return this.model}dispose(){this.disposed=!0,this._onWillDispose.fire()}}function withTypedEditor(e,i,o){return isCodeEditor(e)?i(e):o(e)}let SimpleEditorModelResolverService=class{constructor(e){this.modelService=e}setEditor(e){this.editor=e}createModelReference(e){let i=null;return this.editor&&(i=withTypedEditor(this.editor,(i=>this.findModel(i,e)),(i=>this.findModel(i.getOriginalEditor(),e)||this.findModel(i.getModifiedEditor(),e)))),i?Promise.resolve(new ImmortalReference(new SimpleModel(i))):Promise.reject(new Error("Model not found"))}findModel(e,i){let o=this.modelService.getModel(i);return o&&o.uri.toString()!==i.toString()?null:o}};SimpleEditorModelResolverService=__decorate([__param(0,IModelService)],SimpleEditorModelResolverService);export{SimpleEditorModelResolverService};export class SimpleEditorProgressService{show(){return SimpleEditorProgressService.NULL_PROGRESS_RUNNER}showWhile(e,i){return __awaiter(this,void 0,void 0,(function*(){yield e}))}}SimpleEditorProgressService.NULL_PROGRESS_RUNNER={done:()=>{},total:()=>{},worked:()=>{}};export class SimpleDialogService{confirm(e){return this.doConfirm(e).then((e=>({confirmed:e,checkboxChecked:!1})))}doConfirm(e){let i=e.message;return e.detail&&(i=i+"\n\n"+e.detail),Promise.resolve(window.confirm(i))}show(e,i,o,t){return Promise.resolve({choice:0})}}export class SimpleNotificationService{info(e){return this.notify({severity:Severity.Info,message:e})}warn(e){return this.notify({severity:Severity.Warning,message:e})}error(e){return this.notify({severity:Severity.Error,message:e})}notify(e){switch(e.severity){case Severity.Error:console.error(e.message);break;case Severity.Warning:console.warn(e.message);break;default:console.log(e.message)}return SimpleNotificationService.NO_OP}status(e,i){return Disposable.None}}SimpleNotificationService.NO_OP=new NoOpNotification;export class StandaloneCommandService{constructor(e){this._onWillExecuteCommand=new Emitter,this._onDidExecuteCommand=new Emitter,this.onDidExecuteCommand=this._onDidExecuteCommand.event,this._instantiationService=e}executeCommand(e,...i){const o=CommandsRegistry.getCommand(e);if(!o)return Promise.reject(new Error(`command '${e}' not found`));try{this._onWillExecuteCommand.fire({commandId:e,args:i});const t=this._instantiationService.invokeFunction.apply(this._instantiationService,[o.handler,...i]);return this._onDidExecuteCommand.fire({commandId:e,args:i}),Promise.resolve(t)}catch(e){return Promise.reject(e)}}}export class StandaloneKeybindingService extends AbstractKeybindingService{constructor(e,i,o,t,r,n){super(e,i,o,t,r),this._cachedResolver=null,this._dynamicKeybindings=[],this._register(dom.addDisposableListener(n,dom.EventType.KEY_DOWN,(e=>{const i=new StandardKeyboardEvent(e);this._dispatch(i,i.target)&&(i.preventDefault(),i.stopPropagation())}))),this._register(dom.addDisposableListener(window,dom.EventType.KEY_UP,(e=>{const i=new StandardKeyboardEvent(e);this._singleModifierDispatch(i,i.target)&&i.preventDefault()})))}addDynamicKeybinding(e,i,o,t){const r=createKeybinding(i,OS),n=new DisposableStore;return r&&(this._dynamicKeybindings.push({keybinding:r,command:e,when:t,weight1:1e3,weight2:0,extensionId:null,isBuiltinExtension:!1}),n.add(toDisposable((()=>{for(let i=0;i<this._dynamicKeybindings.length;i++){if(this._dynamicKeybindings[i].command===e)return this._dynamicKeybindings.splice(i,1),void this.updateResolver({source:1})}})))),n.add(CommandsRegistry.registerCommand(e,o)),this.updateResolver({source:1}),n}updateResolver(e){this._cachedResolver=null,this._onDidUpdateKeybindings.fire(e)}_getResolver(){if(!this._cachedResolver){const e=this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(),!0),i=this._toNormalizedKeybindingItems(this._dynamicKeybindings,!1);this._cachedResolver=new KeybindingResolver(e,i,(e=>this._log(e)))}return this._cachedResolver}_documentHasFocus(){return document.hasFocus()}_toNormalizedKeybindingItems(e,i){let o=[],t=0;for(const r of e){const e=r.when||void 0,n=r.keybinding;if(n){const s=this.resolveKeybinding(n);for(const n of s)o[t++]=new ResolvedKeybindingItem(n,r.command,r.commandArgs,e,i,null,!1)}else o[t++]=new ResolvedKeybindingItem(void 0,r.command,r.commandArgs,e,i,null,!1)}return o}resolveKeybinding(e){return[new USLayoutResolvedKeybinding(e,OS)]}resolveKeyboardEvent(e){let i=new SimpleKeybinding(e.ctrlKey,e.shiftKey,e.altKey,e.metaKey,e.keyCode).toChord();return new USLayoutResolvedKeybinding(i,OS)}}function isConfigurationOverrides(e){return e&&"object"==typeof e&&(!e.overrideIdentifier||"string"==typeof e.overrideIdentifier)&&(!e.resource||e.resource instanceof URI)}export class SimpleConfigurationService{constructor(){this._onDidChangeConfiguration=new Emitter,this.onDidChangeConfiguration=this._onDidChangeConfiguration.event,this._configuration=new Configuration(new DefaultConfigurationModel,new ConfigurationModel)}getValue(e,i){const o="string"==typeof e?e:void 0,t=isConfigurationOverrides(e)?e:isConfigurationOverrides(i)?i:{};return this._configuration.getValue(o,t,void 0)}updateValues(e){const i={data:this._configuration.toData()};let o=[];for(const i of e){const[e,t]=i;this.getValue(e)!==t&&(this._configuration.updateValue(e,t),o.push(e))}if(o.length>0){const e=new ConfigurationChangeEvent({keys:o,overrides:[]},i,this._configuration);e.source=7,e.sourceConfig=null,this._onDidChangeConfiguration.fire(e)}return Promise.resolve()}}export class SimpleResourceConfigurationService{constructor(e){this.configurationService=e,this._onDidChangeConfiguration=new Emitter,this.configurationService.onDidChangeConfiguration((e=>{this._onDidChangeConfiguration.fire({affectedKeys:e.affectedKeys,affectsConfiguration:(i,o)=>e.affectsConfiguration(o)})}))}getValue(e,i,o){const t=(Pos.isIPosition(i)?i:null)?"string"==typeof o?o:void 0:"string"==typeof i?i:void 0;return void 0===t?this.configurationService.getValue():this.configurationService.getValue(t)}}let SimpleResourcePropertiesService=class{constructor(e){this.configurationService=e}getEOL(e,i){const o=this.configurationService.getValue("files.eol",{overrideIdentifier:i,resource:e});return o&&"string"==typeof o&&"auto"!==o?o:isLinux||isMacintosh?"\n":"\r\n"}};SimpleResourcePropertiesService=__decorate([__param(0,IConfigurationService)],SimpleResourcePropertiesService);export{SimpleResourcePropertiesService};export class StandaloneTelemetryService{publicLog(e,i){return Promise.resolve(void 0)}publicLog2(e,i){return this.publicLog(e,i)}}export class SimpleWorkspaceContextService{constructor(){const e=URI.from({scheme:SimpleWorkspaceContextService.SCHEME,authority:"model",path:"/"});this.workspace={id:"4064f6ec-cb38-4ad0-af64-ee6467e63c82",folders:[new WorkspaceFolder({uri:e,name:"",index:0})]}}getWorkspace(){return this.workspace}}SimpleWorkspaceContextService.SCHEME="inmemory";export function updateConfigurationService(e,i,o){if(!i)return;if(!(e instanceof SimpleConfigurationService))return;let t=[];Object.keys(i).forEach((e=>{isEditorConfigurationKey(e)&&t.push([`editor.${e}`,i[e]]),o&&isDiffEditorConfigurationKey(e)&&t.push([`diffEditor.${e}`,i[e]])})),t.length>0&&e.updateValues(t)}export class SimpleBulkEditService{constructor(e){this._modelService=e}hasPreviewHandler(){return!1}apply(e,i){return __awaiter(this,void 0,void 0,(function*(){const i=new Map;for(let o of e){if(!(o instanceof ResourceTextEdit))throw new Error("bad edit - only text edits are supported");const e=this._modelService.getModel(o.resource);if(!e)throw new Error("bad edit - model not found");if("number"==typeof o.versionId&&e.getVersionId()!==o.versionId)throw new Error("bad state - model changed in the meantime");let t=i.get(e);t||(t=[],i.set(e,t)),t.push(EditOperation.replaceMove(Range.lift(o.textEdit.range),o.textEdit.text))}let o=0,t=0;for(const[e,r]of i)e.pushStackElement(),e.pushEditOperations([],r,(()=>[])),e.pushStackElement(),t+=1,o+=r.length;return{ariaSummary:strings.format(SimpleServicesNLS.bulkEditServiceSummary,o,t)}}))}}export class SimpleUriLabelService{getUriLabel(e,i){return"file"===e.scheme?e.fsPath:e.path}}export class SimpleLayoutService{constructor(e,i){this._codeEditorService=e,this._container=i,this.onDidLayout=Event.None}get dimension(){return this._dimension||(this._dimension=dom.getClientArea(window.document.body)),this._dimension}get container(){return this._container}focus(){var e;null===(e=this._codeEditorService.getFocusedCodeEditor())||void 0===e||e.focus()}}
//# sourceMappingURL=/sm/c55203da0aa57547c628b624998ae2f87304fab9bb10202585497786d278abca.map
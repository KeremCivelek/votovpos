/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/common/modes/tokenizationRegistry.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Emitter}from"../../../base/common/event.js";import{toDisposable}from"../../../base/common/lifecycle.js";export class TokenizationRegistryImpl{constructor(){this._map=new Map,this._promises=new Map,this._onDidChange=new Emitter,this.onDidChange=this._onDidChange.event,this._colorMap=null}fire(e){this._onDidChange.fire({changedLanguages:e,changedColorMap:!1})}register(e,t){return this._map.set(e,t),this.fire([e]),toDisposable((()=>{this._map.get(e)===t&&(this._map.delete(e),this.fire([e]))}))}registerPromise(e,t){let s=null,i=!1;return this._promises.set(e,t.then((t=>{this._promises.delete(e),!i&&t&&(s=this.register(e,t))}))),toDisposable((()=>{i=!0,s&&s.dispose()}))}getPromise(e){const t=this.get(e);if(t)return Promise.resolve(t);const s=this._promises.get(e);return s?s.then((t=>this.get(e))):null}get(e){return this._map.get(e)||null}setColorMap(e){this._colorMap=e,this._onDidChange.fire({changedLanguages:Array.from(this._map.keys()),changedColorMap:!0})}getColorMap(){return this._colorMap}getDefaultBackground(){return this._colorMap&&this._colorMap.length>2?this._colorMap[2]:null}}
//# sourceMappingURL=/sm/5aac9613c103eb5f4a28e6e4b8ac546df8384dcdcef10e35ac74e65a52d40c7d.map
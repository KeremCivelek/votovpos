/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/common/modes/supports/tokenization.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Color}from"../../../../base/common/color.js";export class ParsedTokenThemeRule{constructor(e,t,r,o,n){this._parsedThemeRuleBrand=void 0,this.token=e,this.index=t,this.fontStyle=r,this.foreground=o,this.background=n}}export function parseTokenTheme(e){if(!e||!Array.isArray(e))return[];let t=[],r=0;for(let o=0,n=e.length;o<n;o++){let n=e[o],i=-1;if("string"==typeof n.fontStyle){i=0;let e=n.fontStyle.split(" ");for(let t=0,r=e.length;t<r;t++){switch(e[t]){case"italic":i|=1;break;case"bold":i|=2;break;case"underline":i|=4}}}let s=null;"string"==typeof n.foreground&&(s=n.foreground);let l=null;"string"==typeof n.background&&(l=n.background),t[r++]=new ParsedTokenThemeRule(n.token||"",o,i,s,l)}return t}function resolveParsedTokenThemeRules(e,t){e.sort(((e,t)=>{let r=strcmp(e.token,t.token);return 0!==r?r:e.index-t.index}));let r=0,o="000000",n="ffffff";for(;e.length>=1&&""===e[0].token;){let t=e.shift();-1!==t.fontStyle&&(r=t.fontStyle),null!==t.foreground&&(o=t.foreground),null!==t.background&&(n=t.background)}let i=new ColorMap;for(let e of t)i.getId(e);let s=i.getId(o),l=i.getId(n),a=new ThemeTrieElementRule(r,s,l),h=new ThemeTrieElement(a);for(let t=0,r=e.length;t<r;t++){let r=e[t];h.insert(r.token,r.fontStyle,i.getId(r.foreground),i.getId(r.background))}return new TokenTheme(i,h)}const colorRegExp=/^#?([0-9A-Fa-f]{6})([0-9A-Fa-f]{2})?$/;export class ColorMap{constructor(){this._lastColorId=0,this._id2color=[],this._color2id=new Map}getId(e){if(null===e)return 0;const t=e.match(colorRegExp);if(!t)throw new Error("Illegal value for token color: "+e);e=t[1].toUpperCase();let r=this._color2id.get(e);return r||(r=++this._lastColorId,this._color2id.set(e,r),this._id2color[r]=Color.fromHex("#"+e),r)}getColorMap(){return this._id2color.slice(0)}}export class TokenTheme{constructor(e,t){this._colorMap=e,this._root=t,this._cache=new Map}static createFromRawTokenTheme(e,t){return this.createFromParsedTokenTheme(parseTokenTheme(e),t)}static createFromParsedTokenTheme(e,t){return resolveParsedTokenThemeRules(e,t)}getColorMap(){return this._colorMap.getColorMap()}_match(e){return this._root.match(e)}match(e,t){let r=this._cache.get(t);if(void 0===r){let e=this._match(t),o=toStandardTokenType(t);r=(e.metadata|o<<8)>>>0,this._cache.set(t,r)}return(r|e<<0)>>>0}}const STANDARD_TOKEN_TYPE_REGEXP=/\b(comment|string|regex|regexp)\b/;export function toStandardTokenType(e){let t=e.match(STANDARD_TOKEN_TYPE_REGEXP);if(!t)return 0;switch(t[1]){case"comment":return 1;case"string":return 2;case"regex":case"regexp":return 4}throw new Error("Unexpected match for standard token type!")}export function strcmp(e,t){return e<t?-1:e>t?1:0}export class ThemeTrieElementRule{constructor(e,t,r){this._themeTrieElementRuleBrand=void 0,this._fontStyle=e,this._foreground=t,this._background=r,this.metadata=(this._fontStyle<<11|this._foreground<<14|this._background<<23)>>>0}clone(){return new ThemeTrieElementRule(this._fontStyle,this._foreground,this._background)}acceptOverwrite(e,t,r){-1!==e&&(this._fontStyle=e),0!==t&&(this._foreground=t),0!==r&&(this._background=r),this.metadata=(this._fontStyle<<11|this._foreground<<14|this._background<<23)>>>0}}export class ThemeTrieElement{constructor(e){this._themeTrieElementBrand=void 0,this._mainRule=e,this._children=new Map}match(e){if(""===e)return this._mainRule;let t,r,o=e.indexOf(".");-1===o?(t=e,r=""):(t=e.substring(0,o),r=e.substring(o+1));let n=this._children.get(t);return void 0!==n?n.match(r):this._mainRule}insert(e,t,r,o){if(""===e)return void this._mainRule.acceptOverwrite(t,r,o);let n,i,s=e.indexOf(".");-1===s?(n=e,i=""):(n=e.substring(0,s),i=e.substring(s+1));let l=this._children.get(n);void 0===l&&(l=new ThemeTrieElement(this._mainRule.clone()),this._children.set(n,l)),l.insert(i,t,r,o)}}export function generateTokensCSSForColorMap(e){let t=[];for(let r=1,o=e.length;r<o;r++){let o=e[r];t[r]=`.mtk${r} { color: ${o}; }`}return t.push(".mtki { font-style: italic; }"),t.push(".mtkb { font-weight: bold; }"),t.push(".mtku { text-decoration: underline; text-underline-position: under; }"),t.join("\n")}
//# sourceMappingURL=/sm/dd6a0aceda3600c0f81ed628cf027c5e82d49b0f2fdc3bd3abfd997f4658e0d8.map
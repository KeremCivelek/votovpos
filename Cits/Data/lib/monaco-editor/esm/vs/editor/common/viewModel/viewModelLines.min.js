/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/monaco-editor@0.33.0/esm/vs/editor/common/viewModel/viewModelLines.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as arrays from"../../../base/common/arrays.js";import{Position}from"../core/position.js";import{Range}from"../core/range.js";import{IndentGuide,IndentGuideHorizontalLine}from"../textModelGuides.js";import{ModelDecorationOptions}from"../model/textModel.js";import{LineInjectedText}from"../textModelEvents.js";import*as viewEvents from"../viewEvents.js";import{createModelLineProjection}from"./modelLineProjection.js";import{ConstantTimePrefixSumComputer}from"../model/prefixSumComputer.js";import{ViewLineData}from"../viewModel.js";export class ViewModelLinesFromProjectedModel{constructor(e,i,n,t,o,s,r,l,d){this._editorId=e,this.model=i,this._validModelVersionId=-1,this._domLineBreaksComputerFactory=n,this._monospaceLineBreaksComputerFactory=t,this.fontInfo=o,this.tabSize=s,this.wrappingStrategy=r,this.wrappingColumn=l,this.wrappingIndent=d,this._constructLines(!0,null)}dispose(){this.hiddenAreasDecorationIds=this.model.deltaDecorations(this.hiddenAreasDecorationIds,[])}createCoordinatesConverter(){return new CoordinatesConverter(this)}_constructLines(e,i){this.modelLineProjections=[],e&&(this.hiddenAreasDecorationIds=this.model.deltaDecorations(this.hiddenAreasDecorationIds,[]));const n=this.model.getLinesContent(),t=this.model.getInjectedTextDecorations(this._editorId),o=n.length,s=this.createLineBreaksComputer(),r=new arrays.ArrayQueue(LineInjectedText.fromDecorations(t));for(let e=0;e<o;e++){const t=r.takeWhile((i=>i.lineNumber===e+1));s.addRequest(n[e],t,i?i[e]:null)}const l=s.finalize(),d=[],u=this.hiddenAreasDecorationIds.map((e=>this.model.getDecorationRange(e))).sort(Range.compareRangesUsingStarts);let m=1,a=0,L=-1,c=L+1<u.length?a+1:o+2;for(let e=0;e<o;e++){const i=e+1;i===c&&(L++,m=u[L].startLineNumber,a=u[L].endLineNumber,c=L+1<u.length?a+1:o+2);const n=i>=m&&i<=a,t=createModelLineProjection(l[e],!n);d[e]=t.getViewLineCount(),this.modelLineProjections[e]=t}this._validModelVersionId=this.model.getVersionId(),this.projectedModelLineLineCounts=new ConstantTimePrefixSumComputer(d)}getHiddenAreas(){return this.hiddenAreasDecorationIds.map((e=>this.model.getDecorationRange(e)))}setHiddenAreas(e){const i=normalizeLineRanges(e.map((e=>this.model.validateRange(e)))),n=this.hiddenAreasDecorationIds.map((e=>this.model.getDecorationRange(e))).sort(Range.compareRangesUsingStarts);if(i.length===n.length){let e=!1;for(let t=0;t<i.length;t++)if(!i[t].equalsRange(n[t])){e=!0;break}if(!e)return!1}const t=i.map((e=>({range:e,options:ModelDecorationOptions.EMPTY})));this.hiddenAreasDecorationIds=this.model.deltaDecorations(this.hiddenAreasDecorationIds,t);const o=i;let s=1,r=0,l=-1,d=l+1<o.length?r+1:this.modelLineProjections.length+2,u=!1;for(let e=0;e<this.modelLineProjections.length;e++){const i=e+1;i===d&&(l++,s=o[l].startLineNumber,r=o[l].endLineNumber,d=l+1<o.length?r+1:this.modelLineProjections.length+2);let n=!1;if(i>=s&&i<=r?this.modelLineProjections[e].isVisible()&&(this.modelLineProjections[e]=this.modelLineProjections[e].setVisible(!1),n=!0):(u=!0,this.modelLineProjections[e].isVisible()||(this.modelLineProjections[e]=this.modelLineProjections[e].setVisible(!0),n=!0)),n){const i=this.modelLineProjections[e].getViewLineCount();this.projectedModelLineLineCounts.setValue(e,i)}}return u||this.setHiddenAreas([]),!0}modelPositionIsVisible(e,i){return!(e<1||e>this.modelLineProjections.length)&&this.modelLineProjections[e-1].isVisible()}getModelLineViewLineCount(e){return e<1||e>this.modelLineProjections.length?1:this.modelLineProjections[e-1].getViewLineCount()}setTabSize(e){return this.tabSize!==e&&(this.tabSize=e,this._constructLines(!1,null),!0)}setWrappingSettings(e,i,n,t){const o=this.fontInfo.equals(e),s=this.wrappingStrategy===i,r=this.wrappingColumn===n,l=this.wrappingIndent===t;if(o&&s&&r&&l)return!1;const d=o&&s&&!r&&l;this.fontInfo=e,this.wrappingStrategy=i,this.wrappingColumn=n,this.wrappingIndent=t;let u=null;if(d){u=[];for(let e=0,i=this.modelLineProjections.length;e<i;e++)u[e]=this.modelLineProjections[e].getProjectionData()}return this._constructLines(!1,u),!0}createLineBreaksComputer(){return("advanced"===this.wrappingStrategy?this._domLineBreaksComputerFactory:this._monospaceLineBreaksComputerFactory).createLineBreaksComputer(this.fontInfo,this.tabSize,this.wrappingColumn,this.wrappingIndent)}onModelFlushed(){this._constructLines(!0,null)}onModelLinesDeleted(e,i,n){if(!e||e<=this._validModelVersionId)return null;const t=1===i?1:this.projectedModelLineLineCounts.getPrefixSum(i-1)+1,o=this.projectedModelLineLineCounts.getPrefixSum(n);return this.modelLineProjections.splice(i-1,n-i+1),this.projectedModelLineLineCounts.removeValues(i-1,n-i+1),new viewEvents.ViewLinesDeletedEvent(t,o)}onModelLinesInserted(e,i,n,t){if(!e||e<=this._validModelVersionId)return null;const o=i>2&&!this.modelLineProjections[i-2].isVisible(),s=1===i?1:this.projectedModelLineLineCounts.getPrefixSum(i-1)+1;let r=0;const l=[],d=[];for(let e=0,i=t.length;e<i;e++){const i=createModelLineProjection(t[e],!o);l.push(i);const n=i.getViewLineCount();r+=n,d[e]=n}return this.modelLineProjections=this.modelLineProjections.slice(0,i-1).concat(l).concat(this.modelLineProjections.slice(i-1)),this.projectedModelLineLineCounts.insertValues(i-1,d),new viewEvents.ViewLinesInsertedEvent(s,s+r-1)}onModelLineChanged(e,i,n){if(null!==e&&e<=this._validModelVersionId)return[!1,null,null,null];const t=i-1,o=this.modelLineProjections[t].getViewLineCount(),s=this.modelLineProjections[t].isVisible(),r=createModelLineProjection(n,s);this.modelLineProjections[t]=r;const l=this.modelLineProjections[t].getViewLineCount();let d=!1,u=0,m=-1,a=0,L=-1,c=0,h=-1;o>l?(u=this.projectedModelLineLineCounts.getPrefixSum(i-1)+1,m=u+l-1,c=m+1,h=c+(o-l)-1,d=!0):o<l?(u=this.projectedModelLineLineCounts.getPrefixSum(i-1)+1,m=u+o-1,a=m+1,L=a+(l-o)-1,d=!0):(u=this.projectedModelLineLineCounts.getPrefixSum(i-1)+1,m=u+l-1),this.projectedModelLineLineCounts.setValue(t,l);return[d,u<=m?new viewEvents.ViewLinesChangedEvent(u,m):null,a<=L?new viewEvents.ViewLinesInsertedEvent(a,L):null,c<=h?new viewEvents.ViewLinesDeletedEvent(c,h):null]}acceptVersionId(e){this._validModelVersionId=e,1!==this.modelLineProjections.length||this.modelLineProjections[0].isVisible()||this.setHiddenAreas([])}getViewLineCount(){return this.projectedModelLineLineCounts.getTotalSum()}_toValidViewLineNumber(e){if(e<1)return 1;const i=this.getViewLineCount();return e>i?i:0|e}getActiveIndentGuide(e,i,n){e=this._toValidViewLineNumber(e),i=this._toValidViewLineNumber(i),n=this._toValidViewLineNumber(n);const t=this.convertViewPositionToModelPosition(e,this.getViewLineMinColumn(e)),o=this.convertViewPositionToModelPosition(i,this.getViewLineMinColumn(i)),s=this.convertViewPositionToModelPosition(n,this.getViewLineMinColumn(n)),r=this.model.guides.getActiveIndentGuide(t.lineNumber,o.lineNumber,s.lineNumber),l=this.convertModelPositionToViewPosition(r.startLineNumber,1),d=this.convertModelPositionToViewPosition(r.endLineNumber,this.model.getLineMaxColumn(r.endLineNumber));return{startLineNumber:l.lineNumber,endLineNumber:d.lineNumber,indent:r.indent}}getViewLineInfo(e){e=this._toValidViewLineNumber(e);const i=this.projectedModelLineLineCounts.getIndexOf(e-1),n=i.index,t=i.remainder;return new ViewLineInfo(n+1,t)}getMinColumnOfViewLine(e){return this.modelLineProjections[e.modelLineNumber-1].getViewLineMinColumn(this.model,e.modelLineNumber,e.modelLineWrappedLineIdx)}getModelStartPositionOfViewLine(e){const i=this.modelLineProjections[e.modelLineNumber-1],n=i.getViewLineMinColumn(this.model,e.modelLineNumber,e.modelLineWrappedLineIdx),t=i.getModelColumnOfViewPosition(e.modelLineWrappedLineIdx,n);return new Position(e.modelLineNumber,t)}getModelEndPositionOfViewLine(e){const i=this.modelLineProjections[e.modelLineNumber-1],n=i.getViewLineMaxColumn(this.model,e.modelLineNumber,e.modelLineWrappedLineIdx),t=i.getModelColumnOfViewPosition(e.modelLineWrappedLineIdx,n);return new Position(e.modelLineNumber,t)}getViewLineInfosGroupedByModelRanges(e,i){const n=this.getViewLineInfo(e),t=this.getViewLineInfo(i),o=new Array;let s=this.getModelStartPositionOfViewLine(n),r=new Array;for(let e=n.modelLineNumber;e<=t.modelLineNumber;e++){const i=this.modelLineProjections[e-1];if(i.isVisible()){const o=e===n.modelLineNumber?n.modelLineWrappedLineIdx:0,s=e===t.modelLineNumber?t.modelLineWrappedLineIdx+1:i.getViewLineCount();for(let i=o;i<s;i++)r.push(new ViewLineInfo(e,i))}if(!i.isVisible()&&s){const i=new Position(e-1,this.model.getLineMaxColumn(e-1)+1),n=Range.fromPositions(s,i);o.push(new ViewLineInfoGroupedByModelRange(n,r)),r=[],s=null}else i.isVisible()&&!s&&(s=new Position(e,1))}if(s){const e=Range.fromPositions(s,this.getModelEndPositionOfViewLine(t));o.push(new ViewLineInfoGroupedByModelRange(e,r))}return o}getViewLinesBracketGuides(e,i,n,t){const o=n?this.convertViewPositionToModelPosition(n.lineNumber,n.column):null,s=[];for(const n of this.getViewLineInfosGroupedByModelRanges(e,i)){const e=n.modelRange.startLineNumber,i=this.model.guides.getLinesBracketGuides(e,n.modelRange.endLineNumber,o,t);for(const t of n.viewLines)if(t.isWrappedLineContinuation&&1===this.getMinColumnOfViewLine(t))s.push([]);else{let n=i[t.modelLineNumber-e];n=n.map((e=>e.horizontalLine?new IndentGuide(e.visibleColumn,e.className,new IndentGuideHorizontalLine(e.horizontalLine.top,this.convertModelPositionToViewPosition(t.modelLineNumber,e.horizontalLine.endColumn).column)):e)),s.push(n)}}return s}getViewLinesIndentGuides(e,i){e=this._toValidViewLineNumber(e),i=this._toValidViewLineNumber(i);const n=this.convertViewPositionToModelPosition(e,this.getViewLineMinColumn(e)),t=this.convertViewPositionToModelPosition(i,this.getViewLineMaxColumn(i));let o=[];const s=[],r=[],l=n.lineNumber-1,d=t.lineNumber-1;let u=null;for(let e=l;e<=d;e++){const i=this.modelLineProjections[e];if(i.isVisible()){const t=i.getViewLineNumberOfModelPosition(0,e===l?n.column:1),o=i.getViewLineNumberOfModelPosition(0,this.model.getLineMaxColumn(e+1)),d=o-t+1;let m=0;d>1&&1===i.getViewLineMinColumn(this.model,e+1,o)&&(m=0===t?1:2),s.push(d),r.push(m),null===u&&(u=new Position(e+1,0))}else null!==u&&(o=o.concat(this.model.guides.getLinesIndentGuides(u.lineNumber,e)),u=null)}null!==u&&(o=o.concat(this.model.guides.getLinesIndentGuides(u.lineNumber,t.lineNumber)),u=null);const m=i-e+1,a=new Array(m);let L=0;for(let e=0,i=o.length;e<i;e++){let i=o[e];const n=Math.min(m-L,s[e]),t=r[e];let l;l=2===t?0:1===t?1:n;for(let e=0;e<n;e++)e===l&&(i=0),a[L++]=i}return a}getViewLineContent(e){const i=this.getViewLineInfo(e);return this.modelLineProjections[i.modelLineNumber-1].getViewLineContent(this.model,i.modelLineNumber,i.modelLineWrappedLineIdx)}getViewLineLength(e){const i=this.getViewLineInfo(e);return this.modelLineProjections[i.modelLineNumber-1].getViewLineLength(this.model,i.modelLineNumber,i.modelLineWrappedLineIdx)}getViewLineMinColumn(e){const i=this.getViewLineInfo(e);return this.modelLineProjections[i.modelLineNumber-1].getViewLineMinColumn(this.model,i.modelLineNumber,i.modelLineWrappedLineIdx)}getViewLineMaxColumn(e){const i=this.getViewLineInfo(e);return this.modelLineProjections[i.modelLineNumber-1].getViewLineMaxColumn(this.model,i.modelLineNumber,i.modelLineWrappedLineIdx)}getViewLineData(e){const i=this.getViewLineInfo(e);return this.modelLineProjections[i.modelLineNumber-1].getViewLineData(this.model,i.modelLineNumber,i.modelLineWrappedLineIdx)}getViewLinesData(e,i,n){e=this._toValidViewLineNumber(e),i=this._toValidViewLineNumber(i);const t=this.projectedModelLineLineCounts.getIndexOf(e-1);let o=e;const s=t.index,r=t.remainder,l=[];for(let t=s,d=this.model.getLineCount();t<d;t++){const d=this.modelLineProjections[t];if(!d.isVisible())continue;const u=t===s?r:0;let m=d.getViewLineCount()-u,a=!1;if(o+m>i&&(a=!0,m=i-o+1),d.getViewLinesData(this.model,t+1,u,m,o-e,n,l),o+=m,a)break}return l}validateViewPosition(e,i,n){e=this._toValidViewLineNumber(e);const t=this.projectedModelLineLineCounts.getIndexOf(e-1),o=t.index,s=t.remainder,r=this.modelLineProjections[o],l=r.getViewLineMinColumn(this.model,o+1,s),d=r.getViewLineMaxColumn(this.model,o+1,s);i<l&&(i=l),i>d&&(i=d);const u=r.getModelColumnOfViewPosition(s,i);return this.model.validatePosition(new Position(o+1,u)).equals(n)?new Position(e,i):this.convertModelPositionToViewPosition(n.lineNumber,n.column)}validateViewRange(e,i){const n=this.validateViewPosition(e.startLineNumber,e.startColumn,i.getStartPosition()),t=this.validateViewPosition(e.endLineNumber,e.endColumn,i.getEndPosition());return new Range(n.lineNumber,n.column,t.lineNumber,t.column)}convertViewPositionToModelPosition(e,i){const n=this.getViewLineInfo(e),t=this.modelLineProjections[n.modelLineNumber-1].getModelColumnOfViewPosition(n.modelLineWrappedLineIdx,i);return this.model.validatePosition(new Position(n.modelLineNumber,t))}convertViewRangeToModelRange(e){const i=this.convertViewPositionToModelPosition(e.startLineNumber,e.startColumn),n=this.convertViewPositionToModelPosition(e.endLineNumber,e.endColumn);return new Range(i.lineNumber,i.column,n.lineNumber,n.column)}convertModelPositionToViewPosition(e,i,n=2){const t=this.model.validatePosition(new Position(e,i)),o=t.lineNumber,s=t.column;let r=o-1,l=!1;for(;r>0&&!this.modelLineProjections[r].isVisible();)r--,l=!0;if(0===r&&!this.modelLineProjections[r].isVisible())return new Position(1,1);const d=1+this.projectedModelLineLineCounts.getPrefixSum(r);let u;return u=l?this.modelLineProjections[r].getViewPositionOfModelPosition(d,this.model.getLineMaxColumn(r+1),n):this.modelLineProjections[o-1].getViewPositionOfModelPosition(d,s,n),u}convertModelRangeToViewRange(e,i=0){if(e.isEmpty()){const n=this.convertModelPositionToViewPosition(e.startLineNumber,e.startColumn,i);return Range.fromPositions(n)}{const i=this.convertModelPositionToViewPosition(e.startLineNumber,e.startColumn,1),n=this.convertModelPositionToViewPosition(e.endLineNumber,e.endColumn,0);return new Range(i.lineNumber,i.column,n.lineNumber,n.column)}}getViewLineNumberOfModelPosition(e,i){let n=e-1;if(this.modelLineProjections[n].isVisible()){const e=1+this.projectedModelLineLineCounts.getPrefixSum(n);return this.modelLineProjections[n].getViewLineNumberOfModelPosition(e,i)}for(;n>0&&!this.modelLineProjections[n].isVisible();)n--;if(0===n&&!this.modelLineProjections[n].isVisible())return 1;const t=1+this.projectedModelLineLineCounts.getPrefixSum(n);return this.modelLineProjections[n].getViewLineNumberOfModelPosition(t,this.model.getLineMaxColumn(n+1))}getDecorationsInRange(e,i,n){const t=this.convertViewPositionToModelPosition(e.startLineNumber,e.startColumn),o=this.convertViewPositionToModelPosition(e.endLineNumber,e.endColumn);if(o.lineNumber-t.lineNumber<=e.endLineNumber-e.startLineNumber)return this.model.getDecorationsInRange(new Range(t.lineNumber,1,o.lineNumber,o.column),i,n);let s=[];const r=t.lineNumber-1,l=o.lineNumber-1;let d=null;for(let e=r;e<=l;e++){if(this.modelLineProjections[e].isVisible())null===d&&(d=new Position(e+1,e===r?t.column:1));else if(null!==d){const t=this.model.getLineMaxColumn(e);s=s.concat(this.model.getDecorationsInRange(new Range(d.lineNumber,d.column,e,t),i,n)),d=null}}null!==d&&(s=s.concat(this.model.getDecorationsInRange(new Range(d.lineNumber,d.column,o.lineNumber,o.column),i,n)),d=null),s.sort(((e,i)=>{const n=Range.compareRangesUsingStarts(e.range,i.range);return 0===n?e.id<i.id?-1:e.id>i.id?1:0:n}));let u=[],m=0,a=null;for(const e of s){const i=e.id;a!==i&&(a=i,u[m++]=e)}return u}getInjectedTextAt(e){const i=this.getViewLineInfo(e.lineNumber);return this.modelLineProjections[i.modelLineNumber-1].getInjectedTextAt(i.modelLineWrappedLineIdx,e.column)}normalizePosition(e,i){const n=this.getViewLineInfo(e.lineNumber);return this.modelLineProjections[n.modelLineNumber-1].normalizePosition(n.modelLineWrappedLineIdx,e,i)}getLineIndentColumn(e){const i=this.getViewLineInfo(e);return 0===i.modelLineWrappedLineIdx?this.model.getLineIndentColumn(i.modelLineNumber):0}}function normalizeLineRanges(e){if(0===e.length)return[];const i=e.slice();i.sort(Range.compareRangesUsingStarts);const n=[];let t=i[0].startLineNumber,o=i[0].endLineNumber;for(let e=1,s=i.length;e<s;e++){const s=i[e];s.startLineNumber>o+1?(n.push(new Range(t,1,o,1)),t=s.startLineNumber,o=s.endLineNumber):s.endLineNumber>o&&(o=s.endLineNumber)}return n.push(new Range(t,1,o,1)),n}class ViewLineInfo{constructor(e,i){this.modelLineNumber=e,this.modelLineWrappedLineIdx=i}get isWrappedLineContinuation(){return this.modelLineWrappedLineIdx>0}}class ViewLineInfoGroupedByModelRange{constructor(e,i){this.modelRange=e,this.viewLines=i}}class CoordinatesConverter{constructor(e){this._lines=e}convertViewPositionToModelPosition(e){return this._lines.convertViewPositionToModelPosition(e.lineNumber,e.column)}convertViewRangeToModelRange(e){return this._lines.convertViewRangeToModelRange(e)}validateViewPosition(e,i){return this._lines.validateViewPosition(e.lineNumber,e.column,i)}validateViewRange(e,i){return this._lines.validateViewRange(e,i)}convertModelPositionToViewPosition(e,i){return this._lines.convertModelPositionToViewPosition(e.lineNumber,e.column,i)}convertModelRangeToViewRange(e,i){return this._lines.convertModelRangeToViewRange(e,i)}modelPositionIsVisible(e){return this._lines.modelPositionIsVisible(e.lineNumber,e.column)}getModelLineViewLineCount(e){return this._lines.getModelLineViewLineCount(e)}getViewLineNumberOfModelPosition(e,i){return this._lines.getViewLineNumberOfModelPosition(e,i)}}export class ViewModelLinesFromModelAsIs{constructor(e){this.model=e}dispose(){}createCoordinatesConverter(){return new IdentityCoordinatesConverter(this)}getHiddenAreas(){return[]}setHiddenAreas(e){return!1}setTabSize(e){return!1}setWrappingSettings(e,i,n,t){return!1}createLineBreaksComputer(){const e=[];return{addRequest:(i,n,t)=>{e.push(null)},finalize:()=>e}}onModelFlushed(){}onModelLinesDeleted(e,i,n){return new viewEvents.ViewLinesDeletedEvent(i,n)}onModelLinesInserted(e,i,n,t){return new viewEvents.ViewLinesInsertedEvent(i,n)}onModelLineChanged(e,i,n){return[!1,new viewEvents.ViewLinesChangedEvent(i,i),null,null]}acceptVersionId(e){}getViewLineCount(){return this.model.getLineCount()}getActiveIndentGuide(e,i,n){return{startLineNumber:e,endLineNumber:e,indent:0}}getViewLinesBracketGuides(e,i,n){return new Array(i-e+1).fill([])}getViewLinesIndentGuides(e,i){const n=i-e+1,t=new Array(n);for(let e=0;e<n;e++)t[e]=0;return t}getViewLineContent(e){return this.model.getLineContent(e)}getViewLineLength(e){return this.model.getLineLength(e)}getViewLineMinColumn(e){return this.model.getLineMinColumn(e)}getViewLineMaxColumn(e){return this.model.getLineMaxColumn(e)}getViewLineData(e){const i=this.model.getLineTokens(e),n=i.getLineContent();return new ViewLineData(n,!1,1,n.length+1,0,i.inflate(),null)}getViewLinesData(e,i,n){const t=this.model.getLineCount();e=Math.min(Math.max(1,e),t),i=Math.min(Math.max(1,i),t);const o=[];for(let t=e;t<=i;t++){const i=t-e;o[i]=n[i]?this.getViewLineData(t):null}return o}getDecorationsInRange(e,i,n){return this.model.getDecorationsInRange(e,i,n)}normalizePosition(e,i){return this.model.normalizePosition(e,i)}getLineIndentColumn(e){return this.model.getLineIndentColumn(e)}getInjectedTextAt(e){return null}}class IdentityCoordinatesConverter{constructor(e){this._lines=e}_validPosition(e){return this._lines.model.validatePosition(e)}_validRange(e){return this._lines.model.validateRange(e)}convertViewPositionToModelPosition(e){return this._validPosition(e)}convertViewRangeToModelRange(e){return this._validRange(e)}validateViewPosition(e,i){return this._validPosition(i)}validateViewRange(e,i){return this._validRange(i)}convertModelPositionToViewPosition(e){return this._validPosition(e)}convertModelRangeToViewRange(e){return this._validRange(e)}modelPositionIsVisible(e){const i=this._lines.model.getLineCount();return!(e.lineNumber<1||e.lineNumber>i)}getModelLineViewLineCount(e){return 1}getViewLineNumberOfModelPosition(e,i){return e}}
//# sourceMappingURL=/sm/c552dd3b3ea3e9bcf5b246b110d7332b381452b952164df3ddde4908ed84a05c.map
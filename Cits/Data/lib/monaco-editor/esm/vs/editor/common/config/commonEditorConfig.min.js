/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/common/config/commonEditorConfig.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as nls from"../../../nls.js";import{Emitter}from"../../../base/common/event.js";import{Disposable}from"../../../base/common/lifecycle.js";import*as objects from"../../../base/common/objects.js";import*as arrays from"../../../base/common/arrays.js";import{editorOptionsRegistry,ValidatedEditorOptions,ConfigurationChangedEvent,EDITOR_MODEL_DEFAULTS,ComputeOptionsMemory}from"./editorOptions.js";import{EditorZoom}from"./editorZoom.js";import{BareFontInfo}from"./fontInfo.js";import{Extensions}from"../../../platform/configuration/common/configurationRegistry.js";import{Registry}from"../../../platform/registry/common/platform.js";import{forEach}from"../../../base/common/collections.js";export const TabFocus=new class{constructor(){this._tabFocus=!1,this._onDidChangeTabFocus=new Emitter,this.onDidChangeTabFocus=this._onDidChangeTabFocus.event}getTabFocusMode(){return this._tabFocus}setTabFocusMode(e){this._tabFocus!==e&&(this._tabFocus=e,this._onDidChangeTabFocus.fire(this._tabFocus))}};const hasOwnProperty=Object.hasOwnProperty;export class ComputedEditorOptions{constructor(){this._values=[]}_read(e){return this._values[e]}get(e){return this._values[e]}_write(e,t){this._values[e]=t}}class RawEditorOptions{constructor(){this._values=[]}_read(e){return this._values[e]}_write(e,t){this._values[e]=t}}class EditorConfiguration2{static readOptions(e){const t=e,i=new RawEditorOptions;for(const e of editorOptionsRegistry){const o="_never_"===e.name?void 0:t[e.name];i._write(e.id,o)}return i}static validateOptions(e){const t=new ValidatedEditorOptions;for(const i of editorOptionsRegistry)t._write(i.id,i.validate(e._read(i.id)));return t}static computeOptions(e,t){const i=new ComputedEditorOptions;for(const o of editorOptionsRegistry)i._write(o.id,o.compute(t,i,e._read(o.id)));return i}static _deepEquals(e,t){if("object"!=typeof e||"object"!=typeof t)return e===t;if(Array.isArray(e)||Array.isArray(t))return!(!Array.isArray(e)||!Array.isArray(t))&&arrays.equals(e,t);for(let i in e)if(!EditorConfiguration2._deepEquals(e[i],t[i]))return!1;return!0}static checkEquals(e,t){const i=[];let o=!1;for(const n of editorOptionsRegistry){const s=!EditorConfiguration2._deepEquals(e._read(n.id),t._read(n.id));i[n.id]=s,s&&(o=!0)}return o?new ConfigurationChangedEvent(i):null}}function migrateOptions(e){const t=e.wordWrap;!0===t?e.wordWrap="on":!1===t&&(e.wordWrap="off");const i=e.lineNumbers;!0===i?e.lineNumbers="on":!1===i&&(e.lineNumbers="off");!1===e.autoClosingBrackets&&(e.autoClosingBrackets="never",e.autoClosingQuotes="never",e.autoSurround="never");"visible"===e.cursorBlinking&&(e.cursorBlinking="solid");const o=e.renderWhitespace;!0===o?e.renderWhitespace="boundary":!1===o&&(e.renderWhitespace="none");const n=e.renderLineHighlight;!0===n?e.renderLineHighlight="line":!1===n&&(e.renderLineHighlight="none");const s=e.acceptSuggestionOnEnter;!0===s?e.acceptSuggestionOnEnter="on":!1===s&&(e.acceptSuggestionOnEnter="off");const r=e.tabCompletion;!1===r?e.tabCompletion="off":!0===r&&(e.tabCompletion="onlySnippets");const a=e.suggest;if(a&&"object"==typeof a.filteredTypes&&a.filteredTypes){const e={method:"showMethods",function:"showFunctions",constructor:"showConstructors",deprecated:"showDeprecated",field:"showFields",variable:"showVariables",class:"showClasses",struct:"showStructs",interface:"showInterfaces",module:"showModules",property:"showProperties",event:"showEvents",operator:"showOperators",unit:"showUnits",value:"showValues",constant:"showConstants",enum:"showEnums",enumMember:"showEnumMembers",keyword:"showKeywords",text:"showWords",color:"showColors",file:"showFiles",reference:"showReferences",folder:"showFolders",typeParameter:"showTypeParameters",snippet:"showSnippets"};forEach(e,(e=>{const t=a.filteredTypes[e.key];!1===t&&(a[e.value]=t)}))}const d=e.hover;!0===d?e.hover={enabled:!0}:!1===d&&(e.hover={enabled:!1});const l=e.parameterHints;!0===l?e.parameterHints={enabled:!0}:!1===l&&(e.parameterHints={enabled:!1});const c=e.autoIndent;!0===c?e.autoIndent="full":!1===c&&(e.autoIndent="advanced");const u=e.matchBrackets;!0===u?e.matchBrackets="always":!1===u&&(e.matchBrackets="never")}function deepCloneAndMigrateOptions(e){const t=objects.deepClone(e);return migrateOptions(t),t}export class CommonEditorConfiguration extends Disposable{constructor(e,t){super(),this._onDidChange=this._register(new Emitter),this.onDidChange=this._onDidChange.event,this._onDidChangeFast=this._register(new Emitter),this.onDidChangeFast=this._onDidChangeFast.event,this.isSimpleWidget=e,this._isDominatedByLongLines=!1,this._computeOptionsMemory=new ComputeOptionsMemory,this._viewLineCount=1,this._lineNumbersDigitCount=1,this._rawOptions=deepCloneAndMigrateOptions(t),this._readOptions=EditorConfiguration2.readOptions(this._rawOptions),this._validatedOptions=EditorConfiguration2.validateOptions(this._readOptions),this._register(EditorZoom.onDidChangeZoomLevel((e=>this._recomputeOptions()))),this._register(TabFocus.onDidChangeTabFocus((e=>this._recomputeOptions())))}observeReferenceElement(e){}updatePixelRatio(){}_recomputeOptions(){const e=this.options,t=this._computeInternalOptions();if(e){const i=EditorConfiguration2.checkEquals(e,t);if(null===i)return;this.options=t,this._onDidChangeFast.fire(i),this._onDidChange.fire(i)}else this.options=t}getRawOptions(){return this._rawOptions}_computeInternalOptions(){const e=this._getEnvConfiguration(),t=BareFontInfo.createFromValidatedSettings(this._validatedOptions,e.zoomLevel,e.pixelRatio,this.isSimpleWidget),i={memory:this._computeOptionsMemory,outerWidth:e.outerWidth,outerHeight:e.outerHeight,fontInfo:this.readConfiguration(t),extraEditorClassName:e.extraEditorClassName,isDominatedByLongLines:this._isDominatedByLongLines,viewLineCount:this._viewLineCount,lineNumbersDigitCount:this._lineNumbersDigitCount,emptySelectionClipboard:e.emptySelectionClipboard,pixelRatio:e.pixelRatio,tabFocusMode:TabFocus.getTabFocusMode(),accessibilitySupport:e.accessibilitySupport};return EditorConfiguration2.computeOptions(this._validatedOptions,i)}static _subsetEquals(e,t){for(const i in t)if(hasOwnProperty.call(t,i)){const o=t[i],n=e[i];if(n===o)continue;if(Array.isArray(n)&&Array.isArray(o)){if(!arrays.equals(n,o))return!1;continue}if(n&&"object"==typeof n&&o&&"object"==typeof o){if(!this._subsetEquals(n,o))return!1;continue}return!1}return!0}updateOptions(e){if(void 0===e)return;const t=deepCloneAndMigrateOptions(e);CommonEditorConfiguration._subsetEquals(this._rawOptions,t)||(this._rawOptions=objects.mixin(this._rawOptions,t||{}),this._readOptions=EditorConfiguration2.readOptions(this._rawOptions),this._validatedOptions=EditorConfiguration2.validateOptions(this._readOptions),this._recomputeOptions())}setIsDominatedByLongLines(e){this._isDominatedByLongLines=e,this._recomputeOptions()}setMaxLineNumber(e){const t=CommonEditorConfiguration._digitCount(e);this._lineNumbersDigitCount!==t&&(this._lineNumbersDigitCount=t,this._recomputeOptions())}setViewLineCount(e){this._viewLineCount!==e&&(this._viewLineCount=e,this._recomputeOptions())}static _digitCount(e){let t=0;for(;e;)e=Math.floor(e/10),t++;return t||1}}export const editorConfigurationBaseNode=Object.freeze({id:"editor",order:5,type:"object",title:nls.localize("editorConfigurationTitle","Editor"),scope:5});const configurationRegistry=Registry.as(Extensions.Configuration),editorConfiguration=Object.assign(Object.assign({},editorConfigurationBaseNode),{properties:{"editor.tabSize":{type:"number",default:EDITOR_MODEL_DEFAULTS.tabSize,minimum:1,markdownDescription:nls.localize("tabSize","The number of spaces a tab is equal to. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.")},"editor.insertSpaces":{type:"boolean",default:EDITOR_MODEL_DEFAULTS.insertSpaces,markdownDescription:nls.localize("insertSpaces","Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.")},"editor.detectIndentation":{type:"boolean",default:EDITOR_MODEL_DEFAULTS.detectIndentation,markdownDescription:nls.localize("detectIndentation","Controls whether `#editor.tabSize#` and `#editor.insertSpaces#` will be automatically detected when a file is opened based on the file contents.")},"editor.trimAutoWhitespace":{type:"boolean",default:EDITOR_MODEL_DEFAULTS.trimAutoWhitespace,description:nls.localize("trimAutoWhitespace","Remove trailing auto inserted whitespace.")},"editor.largeFileOptimizations":{type:"boolean",default:EDITOR_MODEL_DEFAULTS.largeFileOptimizations,description:nls.localize("largeFileOptimizations","Special handling for large files to disable certain memory intensive features.")},"editor.wordBasedSuggestions":{type:"boolean",default:!0,description:nls.localize("wordBasedSuggestions","Controls whether completions should be computed based on words in the document.")},"editor.wordBasedSuggestionsMode":{enum:["currentDocument","matchingDocuments","allDocuments"],default:"matchingDocuments",enumDescriptions:[nls.localize("wordBasedSuggestionsMode.currentDocument","Only suggest words from the active document."),nls.localize("wordBasedSuggestionsMode.matchingDocuments","Suggest words from all open documents of the same language."),nls.localize("wordBasedSuggestionsMode.allDocuments","Suggest words from all open documents.")],description:nls.localize("wordBasedSuggestionsMode","Controls from which documents word based completions are computed.")},"editor.semanticHighlighting.enabled":{enum:[!0,!1,"configuredByTheme"],enumDescriptions:[nls.localize("semanticHighlighting.true","Semantic highlighting enabled for all color themes."),nls.localize("semanticHighlighting.false","Semantic highlighting disabled for all color themes."),nls.localize("semanticHighlighting.configuredByTheme","Semantic highlighting is configured by the current color theme's `semanticHighlighting` setting.")],default:"configuredByTheme",description:nls.localize("semanticHighlighting.enabled","Controls whether the semanticHighlighting is shown for the languages that support it.")},"editor.stablePeek":{type:"boolean",default:!1,markdownDescription:nls.localize("stablePeek","Keep peek editors open even when double clicking their content or when hitting `Escape`.")},"editor.maxTokenizationLineLength":{type:"integer",default:2e4,description:nls.localize("maxTokenizationLineLength","Lines above this length will not be tokenized for performance reasons")},"diffEditor.maxComputationTime":{type:"number",default:5e3,description:nls.localize("maxComputationTime","Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.")},"diffEditor.renderSideBySide":{type:"boolean",default:!0,description:nls.localize("sideBySide","Controls whether the diff editor shows the diff side by side or inline.")},"diffEditor.ignoreTrimWhitespace":{type:"boolean",default:!0,description:nls.localize("ignoreTrimWhitespace","When enabled, the diff editor ignores changes in leading or trailing whitespace.")},"diffEditor.renderIndicators":{type:"boolean",default:!0,description:nls.localize("renderIndicators","Controls whether the diff editor shows +/- indicators for added/removed changes.")},"diffEditor.codeLens":{type:"boolean",default:!1,description:nls.localize("codeLens","Controls whether the editor shows CodeLens.")},"diffEditor.wordWrap":{type:"string",enum:["off","on","inherit"],default:"inherit",markdownEnumDescriptions:[nls.localize("wordWrap.off","Lines will never wrap."),nls.localize("wordWrap.on","Lines will wrap at the viewport width."),nls.localize("wordWrap.inherit","Lines will wrap according to the `#editor.wordWrap#` setting.")]}}});function isConfigurationPropertySchema(e){return void 0!==e.type||void 0!==e.anyOf}for(const e of editorOptionsRegistry){const t=e.schema;if(void 0!==t)if(isConfigurationPropertySchema(t))editorConfiguration.properties[`editor.${e.name}`]=t;else for(let e in t)hasOwnProperty.call(t,e)&&(editorConfiguration.properties[e]=t[e])}let cachedEditorConfigurationKeys=null;function getEditorConfigurationKeys(){return null===cachedEditorConfigurationKeys&&(cachedEditorConfigurationKeys=Object.create(null),Object.keys(editorConfiguration.properties).forEach((e=>{cachedEditorConfigurationKeys[e]=!0}))),cachedEditorConfigurationKeys}export function isEditorConfigurationKey(e){return getEditorConfigurationKeys()[`editor.${e}`]||!1}export function isDiffEditorConfigurationKey(e){return getEditorConfigurationKeys()[`diffEditor.${e}`]||!1}configurationRegistry.registerConfiguration(editorConfiguration);
//# sourceMappingURL=/sm/b0819b8a62587d69ff2e680bcf75cf84cd137e28dc1bef4c056f7de83e243958.map
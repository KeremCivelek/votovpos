/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/common/viewModel/splitLinesCollection.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as arrays from"../../../base/common/arrays.js";import{LineTokens}from"../core/lineTokens.js";import{Position}from"../core/position.js";import{Range}from"../core/range.js";import{ModelDecorationOptions}from"../model/textModel.js";import*as viewEvents from"../view/viewEvents.js";import{PrefixSumIndexOfResult}from"./prefixSumComputer.js";import{SingleLineInlineDecoration,ViewLineData}from"./viewModel.js";import{LineInjectedText}from"../model/textModelEvents.js";export class CoordinatesConverter{constructor(e){this._lines=e}convertViewPositionToModelPosition(e){return this._lines.convertViewPositionToModelPosition(e.lineNumber,e.column)}convertViewRangeToModelRange(e){return this._lines.convertViewRangeToModelRange(e)}validateViewPosition(e,t){return this._lines.validateViewPosition(e.lineNumber,e.column,t)}validateViewRange(e,t){return this._lines.validateViewRange(e,t)}convertModelPositionToViewPosition(e,t){return this._lines.convertModelPositionToViewPosition(e.lineNumber,e.column,t)}convertModelRangeToViewRange(e,t){return this._lines.convertModelRangeToViewRange(e,t)}modelPositionIsVisible(e){return this._lines.modelPositionIsVisible(e.lineNumber,e.column)}getModelLineViewLineCount(e){return this._lines.getModelLineViewLineCount(e)}}class LineNumberMapper{constructor(e){this._counts=e,this._isValid=!1,this._validEndIndex=-1,this._modelToView=[],this._viewToModel=[]}_invalidate(e){this._isValid=!1,this._validEndIndex=Math.min(this._validEndIndex,e-1)}_ensureValid(){if(!this._isValid){for(let e=this._validEndIndex+1,t=this._counts.length;e<t;e++){const t=this._counts[e],i=e>0?this._modelToView[e-1]:0;this._modelToView[e]=i+t;for(let n=0;n<t;n++)this._viewToModel[i+n]=e}this._modelToView.length=this._counts.length,this._viewToModel.length=this._modelToView[this._modelToView.length-1],this._isValid=!0,this._validEndIndex=this._counts.length-1}}changeValue(e,t){this._counts[e]!==t&&(this._counts[e]=t,this._invalidate(e))}removeValues(e,t){this._counts.splice(e,t),this._invalidate(e)}insertValues(e,t){this._counts=arrays.arrayInsert(this._counts,e,t),this._invalidate(e)}getTotalValue(){return this._ensureValid(),this._viewToModel.length}getAccumulatedValue(e){return this._ensureValid(),this._modelToView[e]}getIndexOf(e){this._ensureValid();const t=this._viewToModel[e],i=t>0?this._modelToView[t-1]:0;return new PrefixSumIndexOfResult(t,e-i)}}export class SplitLinesCollection{constructor(e,t,i,n,s,o,r,l,a){this._editorId=e,this.model=t,this._validModelVersionId=-1,this._domLineBreaksComputerFactory=i,this._monospaceLineBreaksComputerFactory=n,this.fontInfo=s,this.tabSize=o,this.wrappingStrategy=r,this.wrappingColumn=l,this.wrappingIndent=a,this._constructLines(!0,null)}dispose(){this.hiddenAreasIds=this.model.deltaDecorations(this.hiddenAreasIds,[])}createCoordinatesConverter(){return new CoordinatesConverter(this)}_constructLines(e,t){this.lines=[],e&&(this.hiddenAreasIds=[]);const i=this.model.getLinesContent(),n=this.model.getInjectedTextDecorations(this._editorId),s=LineInjectedText.fromDecorations(n),o=i.length,r=this.createLineBreaksComputer(),l=s.length;let a=0,u=a<l?s[a].lineNumber:o+1;for(let e=0;e<o;e++){let n=null;if(e+1===u)for(n=[];e+1===u&&a<l;)n.push(s[a]),a++,u=a<l?s[a].lineNumber:o+1;r.addRequest(i[e],n,t?t[e]:null)}const d=r.finalize();let h=[],m=this.hiddenAreasIds.map((e=>this.model.getDecorationRange(e))).sort(Range.compareRangesUsingStarts),g=1,w=0,c=-1,V=c+1<m.length?w+1:o+2;for(let e=0;e<o;e++){let t=e+1;t===V&&(c++,g=m[c].startLineNumber,w=m[c].endLineNumber,V=c+1<m.length?w+1:o+2);let i=t>=g&&t<=w,n=createSplitLine(d[e],!i);h[e]=n.getViewLineCount(),this.lines[e]=n}this._validModelVersionId=this.model.getVersionId(),this.prefixSumComputer=new LineNumberMapper(h)}getHiddenAreas(){return this.hiddenAreasIds.map((e=>this.model.getDecorationRange(e)))}_reduceRanges(e){if(0===e.length)return[];let t=e.map((e=>this.model.validateRange(e))).sort(Range.compareRangesUsingStarts),i=[],n=t[0].startLineNumber,s=t[0].endLineNumber;for(let e=1,o=t.length;e<o;e++){let o=t[e];o.startLineNumber>s+1?(i.push(new Range(n,1,s,1)),n=o.startLineNumber,s=o.endLineNumber):o.endLineNumber>s&&(s=o.endLineNumber)}return i.push(new Range(n,1,s,1)),i}setHiddenAreas(e){let t=this._reduceRanges(e),i=this.hiddenAreasIds.map((e=>this.model.getDecorationRange(e))).sort(Range.compareRangesUsingStarts);if(t.length===i.length){let e=!1;for(let n=0;n<t.length;n++)if(!t[n].equalsRange(i[n])){e=!0;break}if(!e)return!1}let n=[];for(const e of t)n.push({range:e,options:ModelDecorationOptions.EMPTY});this.hiddenAreasIds=this.model.deltaDecorations(this.hiddenAreasIds,n);let s=t,o=1,r=0,l=-1,a=l+1<s.length?r+1:this.lines.length+2,u=!1;for(let e=0;e<this.lines.length;e++){let t=e+1;t===a&&(l++,o=s[l].startLineNumber,r=s[l].endLineNumber,a=l+1<s.length?r+1:this.lines.length+2);let i=!1;if(t>=o&&t<=r?this.lines[e].isVisible()&&(this.lines[e]=this.lines[e].setVisible(!1),i=!0):(u=!0,this.lines[e].isVisible()||(this.lines[e]=this.lines[e].setVisible(!0),i=!0)),i){let t=this.lines[e].getViewLineCount();this.prefixSumComputer.changeValue(e,t)}}return u||this.setHiddenAreas([]),!0}modelPositionIsVisible(e,t){return!(e<1||e>this.lines.length)&&this.lines[e-1].isVisible()}getModelLineViewLineCount(e){return e<1||e>this.lines.length?1:this.lines[e-1].getViewLineCount()}setTabSize(e){return this.tabSize!==e&&(this.tabSize=e,this._constructLines(!1,null),!0)}setWrappingSettings(e,t,i,n){const s=this.fontInfo.equals(e),o=this.wrappingStrategy===t,r=this.wrappingColumn===i,l=this.wrappingIndent===n;if(s&&o&&r&&l)return!1;const a=s&&o&&!r&&l;this.fontInfo=e,this.wrappingStrategy=t,this.wrappingColumn=i,this.wrappingIndent=n;let u=null;if(a){u=[];for(let e=0,t=this.lines.length;e<t;e++)u[e]=this.lines[e].getLineBreakData()}return this._constructLines(!1,u),!0}createLineBreaksComputer(){return("advanced"===this.wrappingStrategy?this._domLineBreaksComputerFactory:this._monospaceLineBreaksComputerFactory).createLineBreaksComputer(this.fontInfo,this.tabSize,this.wrappingColumn,this.wrappingIndent)}onModelFlushed(){this._constructLines(!0,null)}onModelLinesDeleted(e,t,i){if(!e||e<=this._validModelVersionId)return null;let n=1===t?1:this.prefixSumComputer.getAccumulatedValue(t-2)+1,s=this.prefixSumComputer.getAccumulatedValue(i-1);return this.lines.splice(t-1,i-t+1),this.prefixSumComputer.removeValues(t-1,i-t+1),new viewEvents.ViewLinesDeletedEvent(n,s)}onModelLinesInserted(e,t,i,n){if(!e||e<=this._validModelVersionId)return null;const s=t>2&&!this.lines[t-2].isVisible();let o=1===t?1:this.prefixSumComputer.getAccumulatedValue(t-2)+1,r=0,l=[],a=[];for(let e=0,t=n.length;e<t;e++){let t=createSplitLine(n[e],!s);l.push(t);let i=t.getViewLineCount();r+=i,a[e]=i}return this.lines=this.lines.slice(0,t-1).concat(l).concat(this.lines.slice(t-1)),this.prefixSumComputer.insertValues(t-1,a),new viewEvents.ViewLinesInsertedEvent(o,o+r-1)}onModelLineChanged(e,t,i){if(null!==e&&e<=this._validModelVersionId)return[!1,null,null,null];let n=t-1,s=this.lines[n].getViewLineCount(),o=createSplitLine(i,this.lines[n].isVisible());this.lines[n]=o;let r=this.lines[n].getViewLineCount(),l=!1,a=0,u=-1,d=0,h=-1,m=0,g=-1;s>r?(a=1===t?1:this.prefixSumComputer.getAccumulatedValue(t-2)+1,u=a+r-1,m=u+1,g=m+(s-r)-1,l=!0):s<r?(a=1===t?1:this.prefixSumComputer.getAccumulatedValue(t-2)+1,u=a+s-1,d=u+1,h=d+(r-s)-1,l=!0):(a=1===t?1:this.prefixSumComputer.getAccumulatedValue(t-2)+1,u=a+r-1),this.prefixSumComputer.changeValue(n,r);return[l,a<=u?new viewEvents.ViewLinesChangedEvent(a,u):null,d<=h?new viewEvents.ViewLinesInsertedEvent(d,h):null,m<=g?new viewEvents.ViewLinesDeletedEvent(m,g):null]}acceptVersionId(e){this._validModelVersionId=e,1!==this.lines.length||this.lines[0].isVisible()||this.setHiddenAreas([])}getViewLineCount(){return this.prefixSumComputer.getTotalValue()}_toValidViewLineNumber(e){if(e<1)return 1;const t=this.getViewLineCount();return e>t?t:0|e}getActiveIndentGuide(e,t,i){e=this._toValidViewLineNumber(e),t=this._toValidViewLineNumber(t),i=this._toValidViewLineNumber(i);const n=this.convertViewPositionToModelPosition(e,this.getViewLineMinColumn(e)),s=this.convertViewPositionToModelPosition(t,this.getViewLineMinColumn(t)),o=this.convertViewPositionToModelPosition(i,this.getViewLineMinColumn(i)),r=this.model.getActiveIndentGuide(n.lineNumber,s.lineNumber,o.lineNumber),l=this.convertModelPositionToViewPosition(r.startLineNumber,1),a=this.convertModelPositionToViewPosition(r.endLineNumber,this.model.getLineMaxColumn(r.endLineNumber));return{startLineNumber:l.lineNumber,endLineNumber:a.lineNumber,indent:r.indent}}getViewLinesIndentGuides(e,t){e=this._toValidViewLineNumber(e),t=this._toValidViewLineNumber(t);const i=this.convertViewPositionToModelPosition(e,this.getViewLineMinColumn(e)),n=this.convertViewPositionToModelPosition(t,this.getViewLineMaxColumn(t));let s=[],o=[],r=[];const l=i.lineNumber-1,a=n.lineNumber-1;let u=null;for(let e=l;e<=a;e++){const t=this.lines[e];if(t.isVisible()){let n=t.getViewLineNumberOfModelPosition(0,e===l?i.column:1),s=t.getViewLineNumberOfModelPosition(0,this.model.getLineMaxColumn(e+1)),a=s-n+1,d=0;a>1&&1===t.getViewLineMinColumn(this.model,e+1,s)&&(d=0===n?1:2),o.push(a),r.push(d),null===u&&(u=new Position(e+1,0))}else null!==u&&(s=s.concat(this.model.getLinesIndentGuides(u.lineNumber,e)),u=null)}null!==u&&(s=s.concat(this.model.getLinesIndentGuides(u.lineNumber,n.lineNumber)),u=null);const d=t-e+1;let h=new Array(d),m=0;for(let e=0,t=s.length;e<t;e++){let t,i=s[e],n=Math.min(d-m,o[e]),l=r[e];t=2===l?0:1===l?1:n;for(let e=0;e<n;e++)e===t&&(i=0),h[m++]=i}return h}getViewLineContent(e){e=this._toValidViewLineNumber(e);let t=this.prefixSumComputer.getIndexOf(e-1),i=t.index,n=t.remainder;return this.lines[i].getViewLineContent(this.model,i+1,n)}getViewLineLength(e){e=this._toValidViewLineNumber(e);let t=this.prefixSumComputer.getIndexOf(e-1),i=t.index,n=t.remainder;return this.lines[i].getViewLineLength(this.model,i+1,n)}getViewLineMinColumn(e){e=this._toValidViewLineNumber(e);let t=this.prefixSumComputer.getIndexOf(e-1),i=t.index,n=t.remainder;return this.lines[i].getViewLineMinColumn(this.model,i+1,n)}getViewLineMaxColumn(e){e=this._toValidViewLineNumber(e);let t=this.prefixSumComputer.getIndexOf(e-1),i=t.index,n=t.remainder;return this.lines[i].getViewLineMaxColumn(this.model,i+1,n)}getViewLineData(e){e=this._toValidViewLineNumber(e);let t=this.prefixSumComputer.getIndexOf(e-1),i=t.index,n=t.remainder;return this.lines[i].getViewLineData(this.model,i+1,n)}getViewLinesData(e,t,i){e=this._toValidViewLineNumber(e),t=this._toValidViewLineNumber(t);let n=this.prefixSumComputer.getIndexOf(e-1),s=e,o=n.index,r=n.remainder,l=[];for(let n=o,a=this.model.getLineCount();n<a;n++){let a=this.lines[n];if(!a.isVisible())continue;let u=n===o?r:0,d=a.getViewLineCount()-u,h=!1;s+d>t&&(h=!0,d=t-s+1);let m=u+d;if(a.getViewLinesData(this.model,n+1,u,m,s-e,i,l),s+=d,h)break}return l}validateViewPosition(e,t,i){e=this._toValidViewLineNumber(e);let n=this.prefixSumComputer.getIndexOf(e-1),s=n.index,o=n.remainder,r=this.lines[s],l=r.getViewLineMinColumn(this.model,s+1,o),a=r.getViewLineMaxColumn(this.model,s+1,o);t<l&&(t=l),t>a&&(t=a);let u=r.getModelColumnOfViewPosition(o,t);return this.model.validatePosition(new Position(s+1,u)).equals(i)?new Position(e,t):this.convertModelPositionToViewPosition(i.lineNumber,i.column)}validateViewRange(e,t){const i=this.validateViewPosition(e.startLineNumber,e.startColumn,t.getStartPosition()),n=this.validateViewPosition(e.endLineNumber,e.endColumn,t.getEndPosition());return new Range(i.lineNumber,i.column,n.lineNumber,n.column)}convertViewPositionToModelPosition(e,t){e=this._toValidViewLineNumber(e);let i=this.prefixSumComputer.getIndexOf(e-1),n=i.index,s=i.remainder,o=this.lines[n].getModelColumnOfViewPosition(s,t);return this.model.validatePosition(new Position(n+1,o))}convertViewRangeToModelRange(e){const t=this.convertViewPositionToModelPosition(e.startLineNumber,e.startColumn),i=this.convertViewPositionToModelPosition(e.endLineNumber,e.endColumn);return new Range(t.lineNumber,t.column,i.lineNumber,i.column)}convertModelPositionToViewPosition(e,t,i=2){const n=this.model.validatePosition(new Position(e,t)),s=n.lineNumber,o=n.column;let r=s-1,l=!1;for(;r>0&&!this.lines[r].isVisible();)r--,l=!0;if(0===r&&!this.lines[r].isVisible())return new Position(1,1);const a=1+(0===r?0:this.prefixSumComputer.getAccumulatedValue(r-1));let u;return u=l?this.lines[r].getViewPositionOfModelPosition(a,this.model.getLineMaxColumn(r+1),i):this.lines[s-1].getViewPositionOfModelPosition(a,o,i),u}convertModelRangeToViewRange(e,t=0){if(e.isEmpty()){const i=this.convertModelPositionToViewPosition(e.startLineNumber,e.startColumn,t);return Range.fromPositions(i)}{const t=this.convertModelPositionToViewPosition(e.startLineNumber,e.startColumn,1),i=this.convertModelPositionToViewPosition(e.endLineNumber,e.endColumn,0);return new Range(t.lineNumber,t.column,i.lineNumber,i.column)}}_getViewLineNumberForModelPosition(e,t){let i=e-1;if(this.lines[i].isVisible()){const e=1+(0===i?0:this.prefixSumComputer.getAccumulatedValue(i-1));return this.lines[i].getViewLineNumberOfModelPosition(e,t)}for(;i>0&&!this.lines[i].isVisible();)i--;if(0===i&&!this.lines[i].isVisible())return 1;const n=1+(0===i?0:this.prefixSumComputer.getAccumulatedValue(i-1));return this.lines[i].getViewLineNumberOfModelPosition(n,this.model.getLineMaxColumn(i+1))}getAllOverviewRulerDecorations(e,t,i){const n=this.model.getOverviewRulerDecorations(e,t),s=new OverviewRulerDecorations;for(const e of n){const t=e.options.overviewRuler,n=t?t.position:0;if(0===n)continue;const o=t.getColor(i),r=this._getViewLineNumberForModelPosition(e.range.startLineNumber,e.range.startColumn),l=this._getViewLineNumberForModelPosition(e.range.endLineNumber,e.range.endColumn);s.accept(o,r,l,n)}return s.result}getDecorationsInRange(e,t,i){const n=this.convertViewPositionToModelPosition(e.startLineNumber,e.startColumn),s=this.convertViewPositionToModelPosition(e.endLineNumber,e.endColumn);if(s.lineNumber-n.lineNumber<=e.endLineNumber-e.startLineNumber)return this.model.getDecorationsInRange(new Range(n.lineNumber,1,s.lineNumber,s.column),t,i);let o=[];const r=n.lineNumber-1,l=s.lineNumber-1;let a=null;for(let e=r;e<=l;e++){if(this.lines[e].isVisible())null===a&&(a=new Position(e+1,e===r?n.column:1));else if(null!==a){const n=this.model.getLineMaxColumn(e);o=o.concat(this.model.getDecorationsInRange(new Range(a.lineNumber,a.column,e,n),t,i)),a=null}}null!==a&&(o=o.concat(this.model.getDecorationsInRange(new Range(a.lineNumber,a.column,s.lineNumber,s.column),t,i)),a=null),o.sort(((e,t)=>{const i=Range.compareRangesUsingStarts(e.range,t.range);return 0===i?e.id<t.id?-1:e.id>t.id?1:0:i}));let u=[],d=0,h=null;for(const e of o){const t=e.id;h!==t&&(h=t,u[d++]=e)}return u}getInjectedTextAt(e){const t=this._toValidViewLineNumber(e.lineNumber),i=this.prefixSumComputer.getIndexOf(t-1),n=i.index,s=i.remainder;return this.lines[n].getInjectedTextAt(s,e.column)}normalizePosition(e,t){const i=this._toValidViewLineNumber(e.lineNumber),n=this.prefixSumComputer.getIndexOf(i-1),s=n.index,o=n.remainder;return this.lines[s].normalizePosition(this.model,s+1,o,e,t)}getLineIndentColumn(e){const t=this._toValidViewLineNumber(e),i=this.prefixSumComputer.getIndexOf(t-1),n=i.index;return 0===i.remainder?this.model.getLineIndentColumn(n+1):0}}class VisibleIdentitySplitLine{constructor(){}isVisible(){return!0}setVisible(e){return e?this:InvisibleIdentitySplitLine.INSTANCE}getLineBreakData(){return null}getViewLineCount(){return 1}getViewLineContent(e,t,i){return e.getLineContent(t)}getViewLineLength(e,t,i){return e.getLineLength(t)}getViewLineMinColumn(e,t,i){return e.getLineMinColumn(t)}getViewLineMaxColumn(e,t,i){return e.getLineMaxColumn(t)}getViewLineData(e,t,i){let n=e.getLineTokens(t),s=n.getLineContent();return new ViewLineData(s,!1,1,s.length+1,0,n.inflate(),null)}getViewLinesData(e,t,i,n,s,o,r){o[s]?r[s]=this.getViewLineData(e,t,0):r[s]=null}getModelColumnOfViewPosition(e,t){return t}getViewPositionOfModelPosition(e,t){return new Position(e,t)}getViewLineNumberOfModelPosition(e,t){return e}normalizePosition(e,t,i,n,s){return n}getInjectedTextAt(e,t){return null}}VisibleIdentitySplitLine.INSTANCE=new VisibleIdentitySplitLine;class InvisibleIdentitySplitLine{constructor(){}isVisible(){return!1}setVisible(e){return e?VisibleIdentitySplitLine.INSTANCE:this}getLineBreakData(){return null}getViewLineCount(){return 0}getViewLineContent(e,t,i){throw new Error("Not supported")}getViewLineLength(e,t,i){throw new Error("Not supported")}getViewLineMinColumn(e,t,i){throw new Error("Not supported")}getViewLineMaxColumn(e,t,i){throw new Error("Not supported")}getViewLineData(e,t,i){throw new Error("Not supported")}getViewLinesData(e,t,i,n,s,o,r){throw new Error("Not supported")}getModelColumnOfViewPosition(e,t){throw new Error("Not supported")}getViewPositionOfModelPosition(e,t){throw new Error("Not supported")}getViewLineNumberOfModelPosition(e,t){throw new Error("Not supported")}normalizePosition(e,t,i,n,s){throw new Error("Not supported")}getInjectedTextAt(e,t){throw new Error("Not supported")}}InvisibleIdentitySplitLine.INSTANCE=new InvisibleIdentitySplitLine;export class SplitLine{constructor(e,t){this._lineBreakData=e,this._isVisible=t}isVisible(){return this._isVisible}setVisible(e){return this._isVisible=e,this}getLineBreakData(){return this._lineBreakData}getViewLineCount(){return this._isVisible?this._lineBreakData.breakOffsets.length:0}getInputStartOffsetOfOutputLineIndex(e){return this._lineBreakData.getInputOffsetOfOutputPosition(e,0)}getInputEndOffsetOfOutputLineIndex(e,t,i){return i+1===this._lineBreakData.breakOffsets.length?e.getLineMaxColumn(t)-1:this._lineBreakData.getInputOffsetOfOutputPosition(i+1,0)}getViewLineContent(e,t,i){if(!this._isVisible)throw new Error("Not supported");const n=i>0?this._lineBreakData.breakOffsets[i-1]:0,s=i<this._lineBreakData.breakOffsets.length?this._lineBreakData.breakOffsets[i]:this._lineBreakData.breakOffsets[this._lineBreakData.breakOffsets.length-1];let o;if(null!==this._lineBreakData.injectionOffsets){const i=this._lineBreakData.injectionOffsets.map(((e,t)=>new LineInjectedText(0,0,e+1,this._lineBreakData.injectionOptions[t],0)));o=LineInjectedText.applyInjectedText(e.getLineContent(t),i).substring(n,s)}else o=e.getValueInRange({startLineNumber:t,startColumn:n+1,endLineNumber:t,endColumn:s+1});return i>0&&(o=spaces(this._lineBreakData.wrappedTextIndentLength)+o),o}getViewLineLength(e,t,i){if(!this._isVisible)throw new Error("Not supported");const n=i>0?this._lineBreakData.breakOffsets[i-1]:0;let s=(i<this._lineBreakData.breakOffsets.length?this._lineBreakData.breakOffsets[i]:this._lineBreakData.breakOffsets[this._lineBreakData.breakOffsets.length-1])-n;return i>0&&(s=this._lineBreakData.wrappedTextIndentLength+s),s}getViewLineMinColumn(e,t,i){if(!this._isVisible)throw new Error("Not supported");return this._getViewLineMinColumn(i)}_getViewLineMinColumn(e){return e>0?this._lineBreakData.wrappedTextIndentLength+1:1}getViewLineMaxColumn(e,t,i){if(!this._isVisible)throw new Error("Not supported");return this.getViewLineLength(e,t,i)+1}getViewLineData(e,t,i){if(!this._isVisible)throw new Error("Not supported");const n=this._lineBreakData,s=i>0?n.wrappedTextIndentLength:0,o=n.injectionOffsets,r=n.injectionOptions;let l,a,u;if(o){const d=e.getLineTokens(t).withInserted(o.map(((e,t)=>({offset:e,text:r[t].content,tokenMetadata:LineTokens.defaultTokenMetadata})))),h=i>0?n.breakOffsets[i-1]:0,m=n.breakOffsets[i];l=d.getLineContent().substring(h,m),a=d.sliceAndInflate(h,m,s),u=new Array;let g=0;for(let e=0;e<o.length;e++){const t=r[e].content.length,s=o[e]+g,l=o[e]+g+t;if(s>m)break;if(h<l){const t=r[e];if(t.inlineClassName){const e=i>0?n.wrappedTextIndentLength:0,o=e+Math.max(s-h,0),r=e+Math.min(l-h,m);o!==r&&u.push(new SingleLineInlineDecoration(o,r,t.inlineClassName,t.inlineClassNameAffectsLetterSpacing))}}g+=t}}else{const n=this.getInputStartOffsetOfOutputLineIndex(i),o=this.getInputEndOffsetOfOutputLineIndex(e,t,i),r=e.getLineTokens(t);l=e.getValueInRange({startLineNumber:t,startColumn:n+1,endLineNumber:t,endColumn:o+1}),a=r.sliceAndInflate(n,o,s),u=null}i>0&&(l=spaces(n.wrappedTextIndentLength)+l);const d=i>0?n.wrappedTextIndentLength+1:1,h=l.length+1,m=i+1<this.getViewLineCount(),g=0===i?0:n.breakOffsetsVisibleColumn[i-1];return new ViewLineData(l,m,d,h,g,a,u)}getViewLinesData(e,t,i,n,s,o,r){if(!this._isVisible)throw new Error("Not supported");for(let l=i;l<n;l++){let n=s+l-i;o[n]?r[n]=this.getViewLineData(e,t,l):r[n]=null}}getModelColumnOfViewPosition(e,t){if(!this._isVisible)throw new Error("Not supported");let i=t-1;return e>0&&(i<this._lineBreakData.wrappedTextIndentLength?i=0:i-=this._lineBreakData.wrappedTextIndentLength),this._lineBreakData.getInputOffsetOfOutputPosition(e,i)+1}getViewPositionOfModelPosition(e,t,i=2){if(!this._isVisible)throw new Error("Not supported");let n=this._lineBreakData.getOutputPositionOfInputOffset(t-1,i),s=n.outputLineIndex,o=n.outputOffset+1;return s>0&&(o+=this._lineBreakData.wrappedTextIndentLength),new Position(e+s,o)}getViewLineNumberOfModelPosition(e,t){if(!this._isVisible)throw new Error("Not supported");return e+this._lineBreakData.getOutputPositionOfInputOffset(t-1).outputLineIndex}normalizePosition(e,t,i,n,s){if(null!==this._lineBreakData.injectionOffsets){const e=n.lineNumber-i,t=this._lineBreakData.outputPositionToOffsetInUnwrappedLine(i,n.column-1),o=this._lineBreakData.normalizeOffsetAroundInjections(t,s);if(o!==t)return this._lineBreakData.getOutputPositionOfOffsetInUnwrappedLine(o,s).toPosition(e,this._lineBreakData.wrappedTextIndentLength)}if(0===s){if(i>0&&n.column===this._getViewLineMinColumn(i))return new Position(n.lineNumber-1,this.getViewLineMaxColumn(e,t,i-1))}else if(1===s){if(i<this.getViewLineCount()-1&&n.column===this.getViewLineMaxColumn(e,t,i))return new Position(n.lineNumber+1,this._getViewLineMinColumn(i+1))}return n}getInjectedTextAt(e,t){return this._lineBreakData.getInjectedText(e,t-1)}}let _spaces=[""];function spaces(e){if(e>=_spaces.length)for(let t=1;t<=e;t++)_spaces[t]=_makeSpaces(t);return _spaces[e]}function _makeSpaces(e){return new Array(e+1).join(" ")}function createSplitLine(e,t){return null===e?t?VisibleIdentitySplitLine.INSTANCE:InvisibleIdentitySplitLine.INSTANCE:new SplitLine(e,t)}export class IdentityCoordinatesConverter{constructor(e){this._lines=e}_validPosition(e){return this._lines.model.validatePosition(e)}_validRange(e){return this._lines.model.validateRange(e)}convertViewPositionToModelPosition(e){return this._validPosition(e)}convertViewRangeToModelRange(e){return this._validRange(e)}validateViewPosition(e,t){return this._validPosition(t)}validateViewRange(e,t){return this._validRange(t)}convertModelPositionToViewPosition(e){return this._validPosition(e)}convertModelRangeToViewRange(e){return this._validRange(e)}modelPositionIsVisible(e){const t=this._lines.model.getLineCount();return!(e.lineNumber<1||e.lineNumber>t)}getModelLineViewLineCount(e){return 1}}export class IdentityLinesCollection{constructor(e){this.model=e}dispose(){}createCoordinatesConverter(){return new IdentityCoordinatesConverter(this)}getHiddenAreas(){return[]}setHiddenAreas(e){return!1}setTabSize(e){return!1}setWrappingSettings(e,t,i,n){return!1}createLineBreaksComputer(){let e=[];return{addRequest:(t,i,n)=>{e.push(null)},finalize:()=>e}}onModelFlushed(){}onModelLinesDeleted(e,t,i){return new viewEvents.ViewLinesDeletedEvent(t,i)}onModelLinesInserted(e,t,i,n){return new viewEvents.ViewLinesInsertedEvent(t,i)}onModelLineChanged(e,t,i){return[!1,new viewEvents.ViewLinesChangedEvent(t,t),null,null]}acceptVersionId(e){}getViewLineCount(){return this.model.getLineCount()}getActiveIndentGuide(e,t,i){return{startLineNumber:e,endLineNumber:e,indent:0}}getViewLinesIndentGuides(e,t){const i=t-e+1;let n=new Array(i);for(let e=0;e<i;e++)n[e]=0;return n}getViewLineContent(e){return this.model.getLineContent(e)}getViewLineLength(e){return this.model.getLineLength(e)}getViewLineMinColumn(e){return this.model.getLineMinColumn(e)}getViewLineMaxColumn(e){return this.model.getLineMaxColumn(e)}getViewLineData(e){let t=this.model.getLineTokens(e),i=t.getLineContent();return new ViewLineData(i,!1,1,i.length+1,0,t.inflate(),null)}getViewLinesData(e,t,i){const n=this.model.getLineCount();e=Math.min(Math.max(1,e),n),t=Math.min(Math.max(1,t),n);let s=[];for(let n=e;n<=t;n++){let t=n-e;i[t]||(s[t]=null),s[t]=this.getViewLineData(n)}return s}getAllOverviewRulerDecorations(e,t,i){const n=this.model.getOverviewRulerDecorations(e,t),s=new OverviewRulerDecorations;for(const e of n){const t=e.options.overviewRuler,n=t?t.position:0;if(0===n)continue;const o=t.getColor(i),r=e.range.startLineNumber,l=e.range.endLineNumber;s.accept(o,r,l,n)}return s.result}getDecorationsInRange(e,t,i){return this.model.getDecorationsInRange(e,t,i)}normalizePosition(e,t){return this.model.normalizePosition(e,t)}getLineIndentColumn(e){return this.model.getLineIndentColumn(e)}getInjectedTextAt(e){return null}}class OverviewRulerDecorations{constructor(){this.result=Object.create(null)}accept(e,t,i,n){let s=this.result[e];if(s){const e=s[s.length-3],o=s[s.length-1];if(e===n&&o+1>=t)return void(i>o&&(s[s.length-1]=i));s.push(n,t,i)}else this.result[e]=[n,t,i]}}
//# sourceMappingURL=/sm/7cac2de335951997d606e97ef44d9e341389e395f071963df8a97592ef832ef6.map
/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/monaco-editor@0.33.0/esm/vs/editor/common/cursor/cursorTypeOperations.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{onUnexpectedError}from"../../../base/common/errors.js";import*as strings from"../../../base/common/strings.js";import{ReplaceCommand,ReplaceCommandWithOffsetCursorState,ReplaceCommandWithoutChangingPosition,ReplaceCommandThatPreservesSelection}from"../commands/replaceCommand.js";import{ShiftCommand}from"../commands/shiftCommand.js";import{SurroundSelectionCommand}from"../commands/surroundSelectionCommand.js";import{EditOperationResult,isQuote}from"../cursorCommon.js";import{getMapForWordSeparators}from"../core/wordCharacterClassifier.js";import{Range}from"../core/range.js";import{Selection}from"../core/selection.js";import{Position}from"../core/position.js";import{IndentAction}from"../languages/languageConfiguration.js";import{LanguageConfigurationRegistry}from"../languages/languageConfigurationRegistry.js";import{createScopedLineTokens}from"../languages/supports.js";export class TypeOperations{static indent(e,n,t){if(null===n||null===t)return[];const o=[];for(let n=0,i=t.length;n<i;n++)o[n]=new ShiftCommand(t[n],{isUnshift:!1,tabSize:e.tabSize,indentSize:e.indentSize,insertSpaces:e.insertSpaces,useTabStops:e.useTabStops,autoIndent:e.autoIndent});return o}static outdent(e,n,t){const o=[];for(let n=0,i=t.length;n<i;n++)o[n]=new ShiftCommand(t[n],{isUnshift:!0,tabSize:e.tabSize,indentSize:e.indentSize,insertSpaces:e.insertSpaces,useTabStops:e.useTabStops,autoIndent:e.autoIndent});return o}static shiftIndent(e,n,t){return t=t||1,ShiftCommand.shiftIndent(n,n.length+t,e.tabSize,e.indentSize,e.insertSpaces)}static unshiftIndent(e,n,t){return t=t||1,ShiftCommand.unshiftIndent(n,n.length+t,e.tabSize,e.indentSize,e.insertSpaces)}static _distributedPaste(e,n,t,o){const i=[];for(let e=0,n=t.length;e<n;e++)i[e]=new ReplaceCommand(t[e],o[e]);return new EditOperationResult(0,i,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!0})}static _simplePaste(e,n,t,o,i){const r=[];for(let e=0,n=t.length;e<n;e++){const n=t[e],s=n.getPosition();if(i&&!n.isEmpty()&&(i=!1),i&&o.indexOf("\n")!==o.length-1&&(i=!1),i){const t=new Range(s.lineNumber,1,s.lineNumber,1);r[e]=new ReplaceCommandThatPreservesSelection(t,o,n,!0)}else r[e]=new ReplaceCommand(n,o)}return new EditOperationResult(0,r,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!0})}static _distributePasteToCursors(e,n,t,o,i){if(o)return null;if(1===n.length)return null;if(i&&i.length===n.length)return i;if("spread"===e.multiCursorPaste){10===t.charCodeAt(t.length-1)&&(t=t.substr(0,t.length-1)),13===t.charCodeAt(t.length-1)&&(t=t.substr(0,t.length-1));const e=strings.splitLines(t);if(e.length===n.length)return e}return null}static paste(e,n,t,o,i,r){const s=this._distributePasteToCursors(e,t,o,i,r);return s?(t=t.sort(Range.compareRangesUsingStarts),this._distributedPaste(e,n,t,s)):this._simplePaste(e,n,t,o,i)}static _goodIndentForLine(e,n,t){let o=null,i="";const r=LanguageConfigurationRegistry.getInheritIndentForLine(e.autoIndent,n,t,!1);if(r)o=r.action,i=r.indentation;else if(t>1){let o;for(o=t-1;o>=1;o--){const e=n.getLineContent(o);if(strings.lastNonWhitespaceIndex(e)>=0)break}if(o<1)return null;const r=n.getLineMaxColumn(o),s=LanguageConfigurationRegistry.getEnterAction(e.autoIndent,n,new Range(o,r,o,r));s&&(i=s.indentation+s.appendText)}return o&&(o===IndentAction.Indent&&(i=TypeOperations.shiftIndent(e,i)),o===IndentAction.Outdent&&(i=TypeOperations.unshiftIndent(e,i)),i=e.normalizeIndentation(i)),i||null}static _replaceJumpToNextIndent(e,n,t,o){let i="";const r=t.getStartPosition();if(e.insertSpaces){const t=e.visibleColumnFromColumn(n,r),o=e.indentSize,s=o-t%o;for(let e=0;e<s;e++)i+=" "}else i="\t";return new ReplaceCommand(t,i,o)}static tab(e,n,t){const o=[];for(let i=0,r=t.length;i<r;i++){const r=t[i];if(r.isEmpty()){const t=n.getLineContent(r.startLineNumber);if(/^\s*$/.test(t)&&n.isCheapToTokenize(r.startLineNumber)){let s=this._goodIndentForLine(e,n,r.startLineNumber);s=s||"\t";const a=e.normalizeIndentation(s);if(!t.startsWith(a)){o[i]=new ReplaceCommand(new Range(r.startLineNumber,1,r.startLineNumber,t.length+1),a,!0);continue}}o[i]=this._replaceJumpToNextIndent(e,n,r,!0)}else{if(r.startLineNumber===r.endLineNumber){const t=n.getLineMaxColumn(r.startLineNumber);if(1!==r.startColumn||r.endColumn!==t){o[i]=this._replaceJumpToNextIndent(e,n,r,!1);continue}}o[i]=new ShiftCommand(r,{isUnshift:!1,tabSize:e.tabSize,indentSize:e.indentSize,insertSpaces:e.insertSpaces,useTabStops:e.useTabStops,autoIndent:e.autoIndent})}}return o}static compositionType(e,n,t,o,i,r,s,a){const u=o.map((e=>this._compositionType(t,e,i,r,s,a)));return new EditOperationResult(4,u,{shouldPushStackElementBefore:shouldPushStackElementBetween(e,4),shouldPushStackElementAfter:!1})}static _compositionType(e,n,t,o,i,r){if(!n.isEmpty())return null;const s=n.getPosition(),a=Math.max(1,s.column-o),u=Math.min(e.getLineMaxColumn(s.lineNumber),s.column+i),l=new Range(s.lineNumber,a,s.lineNumber,u);return e.getValueInRange(l)===t&&0===r?null:new ReplaceCommandWithOffsetCursorState(l,t,0,r)}static _typeCommand(e,n,t){return t?new ReplaceCommandWithoutChangingPosition(e,n,!0):new ReplaceCommand(e,n,!0)}static _enter(e,n,t,o){if(0===e.autoIndent)return TypeOperations._typeCommand(o,"\n",t);if(!n.isCheapToTokenize(o.getStartPosition().lineNumber)||1===e.autoIndent){const i=n.getLineContent(o.startLineNumber),r=strings.getLeadingWhitespace(i).substring(0,o.startColumn-1);return TypeOperations._typeCommand(o,"\n"+e.normalizeIndentation(r),t)}const i=LanguageConfigurationRegistry.getEnterAction(e.autoIndent,n,o);if(i){if(i.indentAction===IndentAction.None)return TypeOperations._typeCommand(o,"\n"+e.normalizeIndentation(i.indentation+i.appendText),t);if(i.indentAction===IndentAction.Indent)return TypeOperations._typeCommand(o,"\n"+e.normalizeIndentation(i.indentation+i.appendText),t);if(i.indentAction===IndentAction.IndentOutdent){const n=e.normalizeIndentation(i.indentation),r=e.normalizeIndentation(i.indentation+i.appendText),s="\n"+r+"\n"+n;return t?new ReplaceCommandWithoutChangingPosition(o,s,!0):new ReplaceCommandWithOffsetCursorState(o,s,-1,r.length-n.length,!0)}if(i.indentAction===IndentAction.Outdent){const n=TypeOperations.unshiftIndent(e,i.indentation);return TypeOperations._typeCommand(o,"\n"+e.normalizeIndentation(n+i.appendText),t)}}const r=n.getLineContent(o.startLineNumber),s=strings.getLeadingWhitespace(r).substring(0,o.startColumn-1);if(e.autoIndent>=4){const i=LanguageConfigurationRegistry.getIndentForEnter(e.autoIndent,n,o,{unshiftIndent:n=>TypeOperations.unshiftIndent(e,n),shiftIndent:n=>TypeOperations.shiftIndent(e,n),normalizeIndentation:n=>e.normalizeIndentation(n)});if(i){let r=e.visibleColumnFromColumn(n,o.getEndPosition());const s=o.endColumn,a=n.getLineContent(o.endLineNumber),u=strings.firstNonWhitespaceIndex(a);if(o=u>=0?o.setEndPosition(o.endLineNumber,Math.max(o.endColumn,u+1)):o.setEndPosition(o.endLineNumber,n.getLineMaxColumn(o.endLineNumber)),t)return new ReplaceCommandWithoutChangingPosition(o,"\n"+e.normalizeIndentation(i.afterEnter),!0);{let n=0;return s<=u+1&&(e.insertSpaces||(r=Math.ceil(r/e.indentSize)),n=Math.min(r+1-e.normalizeIndentation(i.afterEnter).length-1,0)),new ReplaceCommandWithOffsetCursorState(o,"\n"+e.normalizeIndentation(i.afterEnter),0,n,!0)}}}return TypeOperations._typeCommand(o,"\n"+e.normalizeIndentation(s),t)}static _isAutoIndentType(e,n,t){if(e.autoIndent<4)return!1;for(let e=0,o=t.length;e<o;e++)if(!n.isCheapToTokenize(t[e].getEndPosition().lineNumber))return!1;return!0}static _runAutoIndentType(e,n,t,o){const i=LanguageConfigurationRegistry.getIndentationAtPosition(n,t.startLineNumber,t.startColumn),r=LanguageConfigurationRegistry.getIndentActionForType(e.autoIndent,n,t,o,{shiftIndent:n=>TypeOperations.shiftIndent(e,n),unshiftIndent:n=>TypeOperations.unshiftIndent(e,n)});if(null===r)return null;if(r!==e.normalizeIndentation(i)){const i=n.getLineFirstNonWhitespaceColumn(t.startLineNumber);return 0===i?TypeOperations._typeCommand(new Range(t.startLineNumber,1,t.endLineNumber,t.endColumn),e.normalizeIndentation(r)+o,!1):TypeOperations._typeCommand(new Range(t.startLineNumber,1,t.endLineNumber,t.endColumn),e.normalizeIndentation(r)+n.getLineContent(t.startLineNumber).substring(i-1,t.startColumn-1)+o,!1)}return null}static _isAutoClosingOvertype(e,n,t,o,i){if("never"===e.autoClosingOvertype)return!1;if(!e.autoClosingPairs.autoClosingPairsCloseSingleChar.has(i))return!1;for(let r=0,s=t.length;r<s;r++){const s=t[r];if(!s.isEmpty())return!1;const a=s.getPosition(),u=n.getLineContent(a.lineNumber);if(u.charAt(a.column-1)!==i)return!1;const l=isQuote(i);if(92===(a.column>2?u.charCodeAt(a.column-2):0)&&l)return!1;if("auto"===e.autoClosingOvertype){let e=!1;for(let n=0,t=o.length;n<t;n++){const t=o[n];if(a.lineNumber===t.startLineNumber&&a.column===t.startColumn){e=!0;break}}if(!e)return!1}}return!0}static _runAutoClosingOvertype(e,n,t,o,i){const r=[];for(let e=0,n=o.length;e<n;e++){const n=o[e].getPosition(),t=new Range(n.lineNumber,n.column,n.lineNumber,n.column+1);r[e]=new ReplaceCommand(t,i)}return new EditOperationResult(4,r,{shouldPushStackElementBefore:shouldPushStackElementBetween(e,4),shouldPushStackElementAfter:!1})}static _isBeforeClosingBrace(e,n){const t=n.charAt(0),o=e.autoClosingPairs.autoClosingPairsOpenByStart.get(t)||[],i=e.autoClosingPairs.autoClosingPairsCloseByStart.get(t)||[],r=o.some((e=>n.startsWith(e.open))),s=i.some((e=>n.startsWith(e.close)));return!r&&s}static _findAutoClosingPairOpen(e,n,t,o){const i=e.autoClosingPairs.autoClosingPairsOpenByEnd.get(o);if(!i)return null;let r=null;for(const e of i)if(null===r||e.open.length>r.open.length){let i=!0;for(const r of t){if(n.getValueInRange(new Range(r.lineNumber,r.column-e.open.length+1,r.lineNumber,r.column))+o!==e.open){i=!1;break}}i&&(r=e)}return r}static _findContainedAutoClosingPair(e,n){if(n.open.length<=1)return null;const t=n.close.charAt(n.close.length-1),o=e.autoClosingPairs.autoClosingPairsCloseByEnd.get(t)||[];let i=null;for(const e of o)e.open!==n.open&&n.open.includes(e.open)&&n.close.endsWith(e.close)&&(!i||e.open.length>i.open.length)&&(i=e);return i}static _getAutoClosingPairClose(e,n,t,o,i){const r=isQuote(o),s=r?e.autoClosingQuotes:e.autoClosingBrackets,a=r?e.shouldAutoCloseBefore.quote:e.shouldAutoCloseBefore.bracket;if("never"===s)return null;for(const e of t)if(!e.isEmpty())return null;const u=t.map((e=>{const n=e.getPosition();return i?{lineNumber:n.lineNumber,beforeColumn:n.column-o.length,afterColumn:n.column}:{lineNumber:n.lineNumber,beforeColumn:n.column,afterColumn:n.column}})),l=this._findAutoClosingPairOpen(e,n,u.map((e=>new Position(e.lineNumber,e.beforeColumn))),o);if(!l)return null;const c=this._findContainedAutoClosingPair(e,l),m=c?c.close:"";let d=!0;for(const t of u){const{lineNumber:i,beforeColumn:r,afterColumn:u}=t,c=n.getLineContent(i),p=c.substring(0,r-1),g=c.substring(u-1);if(g.startsWith(m)||(d=!1),g.length>0){const n=g.charAt(0);if(!TypeOperations._isBeforeClosingBrace(e,g)&&!a(n))return null}if(1===l.open.length&&("'"===o||'"'===o)&&"always"!==s){const n=getMapForWordSeparators(e.wordSeparators);if(p.length>0){const e=p.charCodeAt(p.length-1);if(0===n.get(e))return null}}if(!n.isCheapToTokenize(i))return null;n.forceTokenization(i);const h=n.getLineTokens(i),f=createScopedLineTokens(h,r-1);if(!l.shouldAutoClose(f,r-f.firstCharOffset))return null;const C=l.findNeutralCharacter();if(C){const e=n.getTokenTypeIfInsertingCharacter(i,r,C);if(!l.isOK(e))return null}}return d?l.close.substring(0,l.close.length-m.length):l.close}static _runAutoClosingOpenCharType(e,n,t,o,i,r,s){const a=[];for(let e=0,n=o.length;e<n;e++){const n=o[e];a[e]=new TypeWithAutoClosingCommand(n,i,!r,s)}return new EditOperationResult(4,a,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}static _shouldSurroundChar(e,n){return isQuote(n)?"quotes"===e.autoSurround||"languageDefined"===e.autoSurround:"brackets"===e.autoSurround||"languageDefined"===e.autoSurround}static _isSurroundSelectionType(e,n,t,o){if(!TypeOperations._shouldSurroundChar(e,o)||!e.surroundingPairs.hasOwnProperty(o))return!1;const i=isQuote(o);for(let e=0,o=t.length;e<o;e++){const o=t[e];if(o.isEmpty())return!1;let r=!0;for(let e=o.startLineNumber;e<=o.endLineNumber;e++){const t=n.getLineContent(e),i=e===o.startLineNumber?o.startColumn-1:0,s=e===o.endLineNumber?o.endColumn-1:t.length,a=t.substring(i,s);if(/[^ \t]/.test(a)){r=!1;break}}if(r)return!1;if(i&&o.startLineNumber===o.endLineNumber&&o.startColumn+1===o.endColumn){const e=n.getValueInRange(o);if(isQuote(e))return!1}}return!0}static _runSurroundSelectionType(e,n,t,o,i){const r=[];for(let e=0,t=o.length;e<t;e++){const t=o[e],s=n.surroundingPairs[i];r[e]=new SurroundSelectionCommand(t,i,s)}return new EditOperationResult(0,r,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!0})}static _isTypeInterceptorElectricChar(e,n,t){return!(1!==t.length||!n.isCheapToTokenize(t[0].getEndPosition().lineNumber))}static _typeInterceptorElectricChar(e,n,t,o,i){if(!n.electricChars.hasOwnProperty(i)||!o.isEmpty())return null;const r=o.getPosition();t.forceTokenization(r.lineNumber);const s=t.getLineTokens(r.lineNumber);let a;try{a=n.onElectricCharacter(i,s,r.column)}catch(e){return onUnexpectedError(e),null}if(!a)return null;if(a.matchOpenBracket){const o=(s.getLineContent()+i).lastIndexOf(a.matchOpenBracket)+1,u=t.bracketPairs.findMatchingBracketUp(a.matchOpenBracket,{lineNumber:r.lineNumber,column:o},500);if(u){if(u.startLineNumber===r.lineNumber)return null;const o=t.getLineContent(u.startLineNumber),s=strings.getLeadingWhitespace(o),a=n.normalizeIndentation(s),l=t.getLineContent(r.lineNumber),c=t.getLineFirstNonWhitespaceColumn(r.lineNumber)||r.column,m=a+l.substring(c-1,r.column-1)+i,d=new Range(r.lineNumber,1,r.lineNumber,r.column),p=new ReplaceCommand(d,m);return new EditOperationResult(getTypingOperation(m,e),[p],{shouldPushStackElementBefore:!1,shouldPushStackElementAfter:!0})}}return null}static compositionEndWithInterceptors(e,n,t,o,i,r){if(!o||Selection.selectionsArrEqual(o,i))return null;let s=null;for(const e of i){if(!e.isEmpty())return null;const n=e.getPosition(),o=t.getValueInRange(new Range(n.lineNumber,n.column-1,n.lineNumber,n.column));if(null===s)s=o;else if(s!==o)return null}if(!s)return null;if(this._isAutoClosingOvertype(n,t,i,r,s)){const e=i.map((e=>new ReplaceCommand(new Range(e.positionLineNumber,e.positionColumn,e.positionLineNumber,e.positionColumn+1),"",!1)));return new EditOperationResult(4,e,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}const a=this._getAutoClosingPairClose(n,t,i,s,!0);return null!==a?this._runAutoClosingOpenCharType(e,n,t,i,s,!0,a):null}static typeWithInterceptors(e,n,t,o,i,r,s){if(!e&&"\n"===s){const e=[];for(let n=0,r=i.length;n<r;n++)e[n]=TypeOperations._enter(t,o,!1,i[n]);return new EditOperationResult(4,e,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}if(!e&&this._isAutoIndentType(t,o,i)){const e=[];let n=!1;for(let r=0,a=i.length;r<a;r++)if(e[r]=this._runAutoIndentType(t,o,i[r],s),!e[r]){n=!0;break}if(!n)return new EditOperationResult(4,e,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}if(!e&&this._isAutoClosingOvertype(t,o,i,r,s))return this._runAutoClosingOvertype(n,t,o,i,s);if(!e){const e=this._getAutoClosingPairClose(t,o,i,s,!1);if(e)return this._runAutoClosingOpenCharType(n,t,o,i,s,!1,e)}if(this._isSurroundSelectionType(t,o,i,s))return this._runSurroundSelectionType(n,t,o,i,s);if(!e&&this._isTypeInterceptorElectricChar(t,o,i)){const e=this._typeInterceptorElectricChar(n,t,o,i[0],s);if(e)return e}const a=[];for(let e=0,n=i.length;e<n;e++)a[e]=new ReplaceCommand(i[e],s);const u=getTypingOperation(s,n);return new EditOperationResult(u,a,{shouldPushStackElementBefore:shouldPushStackElementBetween(n,u),shouldPushStackElementAfter:!1})}static typeWithoutInterceptors(e,n,t,o,i){const r=[];for(let e=0,n=o.length;e<n;e++)r[e]=new ReplaceCommand(o[e],i);const s=getTypingOperation(i,e);return new EditOperationResult(s,r,{shouldPushStackElementBefore:shouldPushStackElementBetween(e,s),shouldPushStackElementAfter:!1})}static lineInsertBefore(e,n,t){if(null===n||null===t)return[];const o=[];for(let i=0,r=t.length;i<r;i++){let r=t[i].positionLineNumber;if(1===r)o[i]=new ReplaceCommandWithoutChangingPosition(new Range(1,1,1,1),"\n");else{r--;const t=n.getLineMaxColumn(r);o[i]=this._enter(e,n,!1,new Range(r,t,r,t))}}return o}static lineInsertAfter(e,n,t){if(null===n||null===t)return[];const o=[];for(let i=0,r=t.length;i<r;i++){const r=t[i].positionLineNumber,s=n.getLineMaxColumn(r);o[i]=this._enter(e,n,!1,new Range(r,s,r,s))}return o}static lineBreakInsert(e,n,t){const o=[];for(let i=0,r=t.length;i<r;i++)o[i]=this._enter(e,n,!0,t[i]);return o}}export class TypeWithAutoClosingCommand extends ReplaceCommandWithOffsetCursorState{constructor(e,n,t,o){super(e,(t?n:"")+o,0,-o.length),this._openCharacter=n,this._closeCharacter=o,this.closeCharacterRange=null,this.enclosingRange=null}computeCursorState(e,n){const t=n.getInverseEditOperations()[0].range;return this.closeCharacterRange=new Range(t.startLineNumber,t.endColumn-this._closeCharacter.length,t.endLineNumber,t.endColumn),this.enclosingRange=new Range(t.startLineNumber,t.endColumn-this._openCharacter.length-this._closeCharacter.length,t.endLineNumber,t.endColumn),super.computeCursorState(e,n)}}function getTypingOperation(e,n){return" "===e?5===n||6===n?6:5:4}function shouldPushStackElementBetween(e,n){return!(!isTypingOperation(e)||isTypingOperation(n))||5!==e&&normalizeOperationType(e)!==normalizeOperationType(n)}function normalizeOperationType(e){return 6===e||5===e?"space":e}function isTypingOperation(e){return 4===e||5===e||6===e}
//# sourceMappingURL=/sm/21d54628d23a5c4dd68176ce77a042fd275b9c25a5823fa4c542ac8d63efbe09.map
/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/common/modes/textToHtmlTokenizer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as strings from"../../../base/common/strings.js";import{LineTokens}from"../core/lineTokens.js";import{NULL_STATE,nullTokenize2}from"./nullMode.js";const fallback={getInitialState:()=>NULL_STATE,tokenize2:(e,t,n,s)=>nullTokenize2(0,e,n,s)};export function tokenizeToString(e,t=fallback){return _tokenizeToString(e,t||fallback)}export function tokenizeLineToHTML(e,t,n,s,o,a,i){let r="<div>",l=s,c=0;for(let k=0,f=t.getCount();k<f;k++){const f=t.getEndOffset(k);if(f<=s)continue;let g="";for(;l<f&&l<o;l++){const t=e.charCodeAt(l);switch(t){case 9:let e=a-(l+c)%a;for(c+=e-1;e>0;)g+=i?"&#160;":" ",e--;break;case 60:g+="&lt;";break;case 62:g+="&gt;";break;case 38:g+="&amp;";break;case 0:g+="&#00;";break;case 65279:case 8232:case 8233:case 133:g+="ï¿½";break;case 13:g+="&#8203";break;case 32:g+=i?"&#160;":" ";break;default:g+=String.fromCharCode(t)}}if(r+=`<span style="${t.getInlineStyle(k,n)}">${g}</span>`,f>o||l>=o)break}return r+="</div>",r}function _tokenizeToString(e,t){let n='<div class="monaco-tokenized-source">',s=strings.splitLines(e),o=t.getInitialState();for(let e=0,a=s.length;e<a;e++){let a=s[e];e>0&&(n+="<br/>");let i=t.tokenize2(a,!0,o,0);LineTokens.convertToEndOffset(i.tokens,a.length);let r=new LineTokens(i.tokens,a).inflate(),l=0;for(let e=0,t=r.getCount();e<t;e++){const t=r.getClassName(e),s=r.getEndOffset(e);n+=`<span class="${t}">${strings.escape(a.substring(l,s))}</span>`,l=s}o=i.endState}return n+="</div>",n}
//# sourceMappingURL=/sm/3ca2942cfb5424afec9a96adbda35eef3bb793aa73c0a8b605556c59babc2bb2.map
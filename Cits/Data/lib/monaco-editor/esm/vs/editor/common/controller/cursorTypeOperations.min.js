/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/common/controller/cursorTypeOperations.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{onUnexpectedError}from"../../../base/common/errors.js";import*as strings from"../../../base/common/strings.js";import{ReplaceCommand,ReplaceCommandWithOffsetCursorState,ReplaceCommandWithoutChangingPosition,ReplaceCommandThatPreservesSelection}from"../commands/replaceCommand.js";import{ShiftCommand}from"../commands/shiftCommand.js";import{SurroundSelectionCommand}from"../commands/surroundSelectionCommand.js";import{CursorColumns,EditOperationResult,isQuote}from"./cursorCommon.js";import{getMapForWordSeparators}from"./wordCharacterClassifier.js";import{Range}from"../core/range.js";import{Selection}from"../core/selection.js";import{IndentAction}from"../modes/languageConfiguration.js";import{LanguageConfigurationRegistry}from"../modes/languageConfigurationRegistry.js";export class TypeOperations{static indent(e,t,n){if(null===t||null===n)return[];let i=[];for(let t=0,o=n.length;t<o;t++)i[t]=new ShiftCommand(n[t],{isUnshift:!1,tabSize:e.tabSize,indentSize:e.indentSize,insertSpaces:e.insertSpaces,useTabStops:e.useTabStops,autoIndent:e.autoIndent});return i}static outdent(e,t,n){let i=[];for(let t=0,o=n.length;t<o;t++)i[t]=new ShiftCommand(n[t],{isUnshift:!0,tabSize:e.tabSize,indentSize:e.indentSize,insertSpaces:e.insertSpaces,useTabStops:e.useTabStops,autoIndent:e.autoIndent});return i}static shiftIndent(e,t,n){return n=n||1,ShiftCommand.shiftIndent(t,t.length+n,e.tabSize,e.indentSize,e.insertSpaces)}static unshiftIndent(e,t,n){return n=n||1,ShiftCommand.unshiftIndent(t,t.length+n,e.tabSize,e.indentSize,e.insertSpaces)}static _distributedPaste(e,t,n,i){let o=[];for(let e=0,t=n.length;e<t;e++)o[e]=new ReplaceCommand(n[e],i[e]);return new EditOperationResult(0,o,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!0})}static _simplePaste(e,t,n,i,o){let r=[];for(let e=0,t=n.length;e<t;e++){const t=n[e];let s=t.getPosition();if(o&&!t.isEmpty()&&(o=!1),o&&i.indexOf("\n")!==i.length-1&&(o=!1),o){let n=new Range(s.lineNumber,1,s.lineNumber,1);r[e]=new ReplaceCommandThatPreservesSelection(n,i,t,!0)}else r[e]=new ReplaceCommand(t,i)}return new EditOperationResult(0,r,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!0})}static _distributePasteToCursors(e,t,n,i,o){if(i)return null;if(1===t.length)return null;if(o&&o.length===t.length)return o;if("spread"===e.multiCursorPaste){10===n.charCodeAt(n.length-1)&&(n=n.substr(0,n.length-1)),13===n.charCodeAt(n.length-1)&&(n=n.substr(0,n.length-1));let e=strings.splitLines(n);if(e.length===t.length)return e}return null}static paste(e,t,n,i,o,r){const s=this._distributePasteToCursors(e,n,i,o,r);return s?(n=n.sort(Range.compareRangesUsingStarts),this._distributedPaste(e,t,n,s)):this._simplePaste(e,t,n,i,o)}static _goodIndentForLine(e,t,n){let i=null,o="";const r=LanguageConfigurationRegistry.getInheritIndentForLine(e.autoIndent,t,n,!1);if(r)i=r.action,o=r.indentation;else if(n>1){let i;for(i=n-1;i>=1;i--){const e=t.getLineContent(i);if(strings.lastNonWhitespaceIndex(e)>=0)break}if(i<1)return null;const r=t.getLineMaxColumn(i),s=LanguageConfigurationRegistry.getEnterAction(e.autoIndent,t,new Range(i,r,i,r));s&&(o=s.indentation+s.appendText)}return i&&(i===IndentAction.Indent&&(o=TypeOperations.shiftIndent(e,o)),i===IndentAction.Outdent&&(o=TypeOperations.unshiftIndent(e,o)),o=e.normalizeIndentation(o)),o||null}static _replaceJumpToNextIndent(e,t,n,i){let o="",r=n.getStartPosition();if(e.insertSpaces){let n=CursorColumns.visibleColumnFromColumn2(e,t,r),i=e.indentSize,s=i-n%i;for(let e=0;e<s;e++)o+=" "}else o="\t";return new ReplaceCommand(n,o,i)}static tab(e,t,n){let i=[];for(let o=0,r=n.length;o<r;o++){const r=n[o];if(r.isEmpty()){let n=t.getLineContent(r.startLineNumber);if(/^\s*$/.test(n)&&t.isCheapToTokenize(r.startLineNumber)){let s=this._goodIndentForLine(e,t,r.startLineNumber);s=s||"\t";let a=e.normalizeIndentation(s);if(!n.startsWith(a)){i[o]=new ReplaceCommand(new Range(r.startLineNumber,1,r.startLineNumber,n.length+1),a,!0);continue}}i[o]=this._replaceJumpToNextIndent(e,t,r,!0)}else{if(r.startLineNumber===r.endLineNumber){let n=t.getLineMaxColumn(r.startLineNumber);if(1!==r.startColumn||r.endColumn!==n){i[o]=this._replaceJumpToNextIndent(e,t,r,!1);continue}}i[o]=new ShiftCommand(r,{isUnshift:!1,tabSize:e.tabSize,indentSize:e.indentSize,insertSpaces:e.insertSpaces,useTabStops:e.useTabStops,autoIndent:e.autoIndent})}}return i}static compositionType(e,t,n,i,o,r,s,a){const u=i.map((e=>this._compositionType(n,e,o,r,s,a)));return new EditOperationResult(4,u,{shouldPushStackElementBefore:shouldPushStackElementBetween(e,4),shouldPushStackElementAfter:!1})}static _compositionType(e,t,n,i,o,r){if(!t.isEmpty())return null;const s=t.getPosition(),a=Math.max(1,s.column-i),u=Math.min(e.getLineMaxColumn(s.lineNumber),s.column+o),l=new Range(s.lineNumber,a,s.lineNumber,u);return e.getValueInRange(l)===n&&0===r?null:new ReplaceCommandWithOffsetCursorState(l,n,0,r)}static _typeCommand(e,t,n){return n?new ReplaceCommandWithoutChangingPosition(e,t,!0):new ReplaceCommand(e,t,!0)}static _enter(e,t,n,i){if(0===e.autoIndent)return TypeOperations._typeCommand(i,"\n",n);if(!t.isCheapToTokenize(i.getStartPosition().lineNumber)||1===e.autoIndent){let o=t.getLineContent(i.startLineNumber),r=strings.getLeadingWhitespace(o).substring(0,i.startColumn-1);return TypeOperations._typeCommand(i,"\n"+e.normalizeIndentation(r),n)}const o=LanguageConfigurationRegistry.getEnterAction(e.autoIndent,t,i);if(o){if(o.indentAction===IndentAction.None)return TypeOperations._typeCommand(i,"\n"+e.normalizeIndentation(o.indentation+o.appendText),n);if(o.indentAction===IndentAction.Indent)return TypeOperations._typeCommand(i,"\n"+e.normalizeIndentation(o.indentation+o.appendText),n);if(o.indentAction===IndentAction.IndentOutdent){const t=e.normalizeIndentation(o.indentation),r=e.normalizeIndentation(o.indentation+o.appendText),s="\n"+r+"\n"+t;return n?new ReplaceCommandWithoutChangingPosition(i,s,!0):new ReplaceCommandWithOffsetCursorState(i,s,-1,r.length-t.length,!0)}if(o.indentAction===IndentAction.Outdent){const t=TypeOperations.unshiftIndent(e,o.indentation);return TypeOperations._typeCommand(i,"\n"+e.normalizeIndentation(t+o.appendText),n)}}const r=t.getLineContent(i.startLineNumber),s=strings.getLeadingWhitespace(r).substring(0,i.startColumn-1);if(e.autoIndent>=4){const o=LanguageConfigurationRegistry.getIndentForEnter(e.autoIndent,t,i,{unshiftIndent:t=>TypeOperations.unshiftIndent(e,t),shiftIndent:t=>TypeOperations.shiftIndent(e,t),normalizeIndentation:t=>e.normalizeIndentation(t)});if(o){let r=CursorColumns.visibleColumnFromColumn2(e,t,i.getEndPosition());const s=i.endColumn,a=t.getLineContent(i.endLineNumber),u=strings.firstNonWhitespaceIndex(a);if(i=u>=0?i.setEndPosition(i.endLineNumber,Math.max(i.endColumn,u+1)):i.setEndPosition(i.endLineNumber,t.getLineMaxColumn(i.endLineNumber)),n)return new ReplaceCommandWithoutChangingPosition(i,"\n"+e.normalizeIndentation(o.afterEnter),!0);{let t=0;return s<=u+1&&(e.insertSpaces||(r=Math.ceil(r/e.indentSize)),t=Math.min(r+1-e.normalizeIndentation(o.afterEnter).length-1,0)),new ReplaceCommandWithOffsetCursorState(i,"\n"+e.normalizeIndentation(o.afterEnter),0,t,!0)}}}return TypeOperations._typeCommand(i,"\n"+e.normalizeIndentation(s),n)}static _isAutoIndentType(e,t,n){if(e.autoIndent<4)return!1;for(let e=0,i=n.length;e<i;e++)if(!t.isCheapToTokenize(n[e].getEndPosition().lineNumber))return!1;return!0}static _runAutoIndentType(e,t,n,i){const o=LanguageConfigurationRegistry.getIndentationAtPosition(t,n.startLineNumber,n.startColumn),r=LanguageConfigurationRegistry.getIndentActionForType(e.autoIndent,t,n,i,{shiftIndent:t=>TypeOperations.shiftIndent(e,t),unshiftIndent:t=>TypeOperations.unshiftIndent(e,t)});if(null===r)return null;if(r!==e.normalizeIndentation(o)){const o=t.getLineFirstNonWhitespaceColumn(n.startLineNumber);return 0===o?TypeOperations._typeCommand(new Range(n.startLineNumber,1,n.endLineNumber,n.endColumn),e.normalizeIndentation(r)+i,!1):TypeOperations._typeCommand(new Range(n.startLineNumber,1,n.endLineNumber,n.endColumn),e.normalizeIndentation(r)+t.getLineContent(n.startLineNumber).substring(o-1,n.startColumn-1)+i,!1)}return null}static _isAutoClosingOvertype(e,t,n,i,o){if("never"===e.autoClosingOvertype)return!1;if(!e.autoClosingPairs.autoClosingPairsCloseSingleChar.has(o))return!1;for(let r=0,s=n.length;r<s;r++){const s=n[r];if(!s.isEmpty())return!1;const a=s.getPosition(),u=t.getLineContent(a.lineNumber);if(u.charAt(a.column-1)!==o)return!1;const l=isQuote(o);if(92===(a.column>2?u.charCodeAt(a.column-2):0)&&l)return!1;if("auto"===e.autoClosingOvertype){let e=!1;for(let t=0,n=i.length;t<n;t++){const n=i[t];if(a.lineNumber===n.startLineNumber&&a.column===n.startColumn){e=!0;break}}if(!e)return!1}}return!0}static _runAutoClosingOvertype(e,t,n,i,o){let r=[];for(let e=0,t=i.length;e<t;e++){const t=i[e].getPosition(),n=new Range(t.lineNumber,t.column,t.lineNumber,t.column+1);r[e]=new ReplaceCommand(n,o)}return new EditOperationResult(4,r,{shouldPushStackElementBefore:shouldPushStackElementBetween(e,4),shouldPushStackElementAfter:!1})}static _isBeforeClosingBrace(e,t){const n=t.charAt(0),i=e.autoClosingPairs.autoClosingPairsOpenByStart.get(n)||[],o=e.autoClosingPairs.autoClosingPairsCloseByStart.get(n)||[],r=i.some((e=>t.startsWith(e.open))),s=o.some((e=>t.startsWith(e.close)));return!r&&s}static _findAutoClosingPairOpen(e,t,n,i){const o=e.autoClosingPairs.autoClosingPairsOpenByEnd.get(i);if(!o)return null;let r=null;for(const e of o)if(null===r||e.open.length>r.open.length){let o=!0;for(const r of n){if(t.getValueInRange(new Range(r.lineNumber,r.column-e.open.length+1,r.lineNumber,r.column))+i!==e.open){o=!1;break}}o&&(r=e)}return r}static _findSubAutoClosingPairClose(e,t){if(t.open.length<=1)return"";const n=t.close.charAt(t.close.length-1),i=e.autoClosingPairs.autoClosingPairsCloseByEnd.get(n)||[];let o=null;for(const e of i)e.open!==t.open&&t.open.includes(e.open)&&t.close.endsWith(e.close)&&(!o||e.open.length>o.open.length)&&(o=e);return o?o.close:""}static _getAutoClosingPairClose(e,t,n,i,o){const r=isQuote(i),s=r?e.autoClosingQuotes:e.autoClosingBrackets;if("never"===s)return null;const a=this._findAutoClosingPairOpen(e,t,n.map((e=>e.getPosition())),i);if(!a)return null;const u=this._findSubAutoClosingPairClose(e,a);let l=!0;const m=r?e.shouldAutoCloseBefore.quote:e.shouldAutoCloseBefore.bracket;for(let i=0,c=n.length;i<c;i++){const c=n[i];if(!c.isEmpty())return null;const d=c.getPosition(),g=t.getLineContent(d.lineNumber),p=g.substring(d.column-1);if(p.startsWith(u)||(l=!1),g.length>d.column-1){const t=g.charAt(d.column-1);if(!TypeOperations._isBeforeClosingBrace(e,p)&&!m(t))return null}if(!t.isCheapToTokenize(d.lineNumber))return null;if(1===a.open.length&&r&&"always"!==s){const t=getMapForWordSeparators(e.wordSeparators);if(o&&d.column>1&&0===t.get(g.charCodeAt(d.column-2)))return null;if(!o&&d.column>2&&0===t.get(g.charCodeAt(d.column-3)))return null}t.forceTokenization(d.lineNumber);const h=t.getLineTokens(d.lineNumber);let f=!1;try{f=LanguageConfigurationRegistry.shouldAutoClosePair(a,h,o?d.column:d.column-1)}catch(e){onUnexpectedError(e)}if(!f)return null}return l?a.close.substring(0,a.close.length-u.length):a.close}static _runAutoClosingOpenCharType(e,t,n,i,o,r,s){let a=[];for(let e=0,t=i.length;e<t;e++){const t=i[e];a[e]=new TypeWithAutoClosingCommand(t,o,r,s)}return new EditOperationResult(4,a,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}static _shouldSurroundChar(e,t){return isQuote(t)?"quotes"===e.autoSurround||"languageDefined"===e.autoSurround:"brackets"===e.autoSurround||"languageDefined"===e.autoSurround}static _isSurroundSelectionType(e,t,n,i){if(!TypeOperations._shouldSurroundChar(e,i)||!e.surroundingPairs.hasOwnProperty(i))return!1;const o=isQuote(i);for(let e=0,i=n.length;e<i;e++){const i=n[e];if(i.isEmpty())return!1;let r=!0;for(let e=i.startLineNumber;e<=i.endLineNumber;e++){const n=t.getLineContent(e),o=e===i.startLineNumber?i.startColumn-1:0,s=e===i.endLineNumber?i.endColumn-1:n.length,a=n.substring(o,s);if(/[^ \t]/.test(a)){r=!1;break}}if(r)return!1;if(o&&i.startLineNumber===i.endLineNumber&&i.startColumn+1===i.endColumn){const e=t.getValueInRange(i);if(isQuote(e))return!1}}return!0}static _runSurroundSelectionType(e,t,n,i,o){let r=[];for(let e=0,n=i.length;e<n;e++){const n=i[e],s=t.surroundingPairs[o];r[e]=new SurroundSelectionCommand(n,o,s)}return new EditOperationResult(0,r,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!0})}static _isTypeInterceptorElectricChar(e,t,n){return!(1!==n.length||!t.isCheapToTokenize(n[0].getEndPosition().lineNumber))}static _typeInterceptorElectricChar(e,t,n,i,o){if(!t.electricChars.hasOwnProperty(o)||!i.isEmpty())return null;let r=i.getPosition();n.forceTokenization(r.lineNumber);let s,a=n.getLineTokens(r.lineNumber);try{s=LanguageConfigurationRegistry.onElectricCharacter(o,a,r.column)}catch(e){return onUnexpectedError(e),null}if(!s)return null;if(s.matchOpenBracket){let i=(a.getLineContent()+o).lastIndexOf(s.matchOpenBracket)+1,u=n.findMatchingBracketUp(s.matchOpenBracket,{lineNumber:r.lineNumber,column:i});if(u){if(u.startLineNumber===r.lineNumber)return null;let i=n.getLineContent(u.startLineNumber),s=strings.getLeadingWhitespace(i),a=t.normalizeIndentation(s),l=n.getLineContent(r.lineNumber),m=n.getLineFirstNonWhitespaceColumn(r.lineNumber)||r.column,c=a+l.substring(m-1,r.column-1)+o,d=new Range(r.lineNumber,1,r.lineNumber,r.column);const g=new ReplaceCommand(d,c);return new EditOperationResult(getTypingOperation(c,e),[g],{shouldPushStackElementBefore:!1,shouldPushStackElementAfter:!0})}}return null}static compositionEndWithInterceptors(e,t,n,i,o,r){if(!i||Selection.selectionsArrEqual(i,o))return null;let s=null;for(const e of o){if(!e.isEmpty())return null;const t=e.getPosition(),i=n.getValueInRange(new Range(t.lineNumber,t.column-1,t.lineNumber,t.column));if(null===s)s=i;else if(s!==i)return null}if(!s)return null;if(this._isAutoClosingOvertype(t,n,o,r,s)){const e=o.map((e=>new ReplaceCommand(new Range(e.positionLineNumber,e.positionColumn,e.positionLineNumber,e.positionColumn+1),"",!1)));return new EditOperationResult(4,e,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}const a=this._getAutoClosingPairClose(t,n,o,s,!1);return null!==a?this._runAutoClosingOpenCharType(e,t,n,o,s,!1,a):null}static typeWithInterceptors(e,t,n,i,o,r,s){if(!e&&"\n"===s){let e=[];for(let t=0,r=o.length;t<r;t++)e[t]=TypeOperations._enter(n,i,!1,o[t]);return new EditOperationResult(4,e,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}if(!e&&this._isAutoIndentType(n,i,o)){let e=[],t=!1;for(let r=0,a=o.length;r<a;r++)if(e[r]=this._runAutoIndentType(n,i,o[r],s),!e[r]){t=!0;break}if(!t)return new EditOperationResult(4,e,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!1})}if(!e&&this._isAutoClosingOvertype(n,i,o,r,s))return this._runAutoClosingOvertype(t,n,i,o,s);if(!e){const e=this._getAutoClosingPairClose(n,i,o,s,!0);if(e)return this._runAutoClosingOpenCharType(t,n,i,o,s,!0,e)}if(this._isSurroundSelectionType(n,i,o,s))return this._runSurroundSelectionType(t,n,i,o,s);if(!e&&this._isTypeInterceptorElectricChar(n,i,o)){const e=this._typeInterceptorElectricChar(t,n,i,o[0],s);if(e)return e}let a=[];for(let e=0,t=o.length;e<t;e++)a[e]=new ReplaceCommand(o[e],s);const u=getTypingOperation(s,t);return new EditOperationResult(u,a,{shouldPushStackElementBefore:shouldPushStackElementBetween(t,u),shouldPushStackElementAfter:!1})}static typeWithoutInterceptors(e,t,n,i,o){let r=[];for(let e=0,t=i.length;e<t;e++)r[e]=new ReplaceCommand(i[e],o);const s=getTypingOperation(o,e);return new EditOperationResult(s,r,{shouldPushStackElementBefore:shouldPushStackElementBetween(e,s),shouldPushStackElementAfter:!1})}static lineInsertBefore(e,t,n){if(null===t||null===n)return[];let i=[];for(let o=0,r=n.length;o<r;o++){let r=n[o].positionLineNumber;if(1===r)i[o]=new ReplaceCommandWithoutChangingPosition(new Range(1,1,1,1),"\n");else{r--;let n=t.getLineMaxColumn(r);i[o]=this._enter(e,t,!1,new Range(r,n,r,n))}}return i}static lineInsertAfter(e,t,n){if(null===t||null===n)return[];let i=[];for(let o=0,r=n.length;o<r;o++){const r=n[o].positionLineNumber;let s=t.getLineMaxColumn(r);i[o]=this._enter(e,t,!1,new Range(r,s,r,s))}return i}static lineBreakInsert(e,t,n){let i=[];for(let o=0,r=n.length;o<r;o++)i[o]=this._enter(e,t,!0,n[o]);return i}}export class TypeWithAutoClosingCommand extends ReplaceCommandWithOffsetCursorState{constructor(e,t,n,i){super(e,(n?t:"")+i,0,-i.length),this._openCharacter=t,this._closeCharacter=i,this.closeCharacterRange=null,this.enclosingRange=null}computeCursorState(e,t){let n=t.getInverseEditOperations()[0].range;return this.closeCharacterRange=new Range(n.startLineNumber,n.endColumn-this._closeCharacter.length,n.endLineNumber,n.endColumn),this.enclosingRange=new Range(n.startLineNumber,n.endColumn-this._openCharacter.length-this._closeCharacter.length,n.endLineNumber,n.endColumn),super.computeCursorState(e,t)}}function getTypingOperation(e,t){return" "===e?5===t||6===t?6:5:4}function shouldPushStackElementBetween(e,t){return!(!isTypingOperation(e)||isTypingOperation(t))||5!==e&&normalizeOperationType(e)!==normalizeOperationType(t)}function normalizeOperationType(e){return 6===e||5===e?"space":e}function isTypingOperation(e){return 4===e||5===e||6===e}
//# sourceMappingURL=/sm/e43298b98bbfe697d6d388a6e674ae357e80d15527b12fe4ed05dc1e2ce9f3fa.map
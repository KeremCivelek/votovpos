/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/monaco-editor@0.33.0/esm/vs/editor/common/services/semanticTokensProviderStyling.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __decorate=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(s=(o<3?r(s):o>3?r(t,n,s):r(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},__param=this&&this.__param||function(e,t){return function(n,i){t(n,i,e)}};import{TokenMetadata}from"../languages.js";import{IThemeService}from"../../../platform/theme/common/themeService.js";import{ILogService,LogLevel}from"../../../platform/log/common/log.js";import{SparseMultilineTokens}from"../tokens/sparseMultilineTokens.js";import{ILanguageService}from"../languages/language.js";let SemanticTokensProviderStyling=class{constructor(e,t,n,i){this._legend=e,this._themeService=t,this._languageService=n,this._logService=i,this._hashTable=new HashTable,this._hasWarnedOverlappingTokens=!1}getMetadata(e,t,n){const i=this._languageService.languageIdCodec.encodeLanguageId(n),r=this._hashTable.get(e,t,i);let o;if(r)o=r.metadata,this._logService.getLevel()===LogLevel.Trace&&this._logService.trace(`SemanticTokensProviderStyling [CACHED] ${e} / ${t}: foreground ${TokenMetadata.getForeground(o)}, fontStyle ${TokenMetadata.getFontStyle(o).toString(2)}`);else{let r=this._legend.tokenTypes[e];const s=[];if(r){let e=t;for(let t=0;e>0&&t<this._legend.tokenModifiers.length;t++)1&e&&s.push(this._legend.tokenModifiers[t]),e>>=1;e>0&&this._logService.getLevel()===LogLevel.Trace&&(this._logService.trace(`SemanticTokensProviderStyling: unknown token modifier index: ${t.toString(2)} for legend: ${JSON.stringify(this._legend.tokenModifiers)}`),s.push("not-in-legend"));const i=this._themeService.getColorTheme().getTokenStyleMetadata(r,s,n);if(void 0===i)o=2147483647;else{if(o=0,void 0!==i.italic){o|=1|(i.italic?1:0)<<10}if(void 0!==i.bold){o|=2|(i.bold?2:0)<<10}if(void 0!==i.underline){o|=4|(i.underline?4:0)<<10}if(void 0!==i.strikethrough){o|=8|(i.strikethrough?8:0)<<10}if(i.foreground){o|=16|i.foreground<<14}0===o&&(o=2147483647)}}else this._logService.getLevel()===LogLevel.Trace&&this._logService.trace(`SemanticTokensProviderStyling: unknown token type index: ${e} for legend: ${JSON.stringify(this._legend.tokenTypes)}`),o=2147483647,r="not-in-legend";this._hashTable.add(e,t,i,o),this._logService.getLevel()===LogLevel.Trace&&this._logService.trace(`SemanticTokensProviderStyling ${e} (${r}) / ${t} (${s.join(" ")}): foreground ${TokenMetadata.getForeground(o)}, fontStyle ${TokenMetadata.getFontStyle(o).toString(2)}`)}return o}warnOverlappingSemanticTokens(e,t){this._hasWarnedOverlappingTokens||(this._hasWarnedOverlappingTokens=!0,console.warn(`Overlapping semantic tokens detected at lineNumber ${e}, column ${t}`))}};SemanticTokensProviderStyling=__decorate([__param(1,IThemeService),__param(2,ILanguageService),__param(3,ILogService)],SemanticTokensProviderStyling);export{SemanticTokensProviderStyling};export function toMultilineTokens2(e,t,n){const i=e.data,r=e.data.length/5|0,o=Math.max(Math.ceil(r/1024),400),s=[];let a=0,l=1,h=0;for(;a<r;){const e=a;let g=Math.min(e+o,r);if(g<r){let t=g;for(;t-1>e&&0===i[5*t];)t--;if(t-1===e){let e=g;for(;e+1<r&&0===i[5*e];)e++;g=e}else g=t}let c=new Uint32Array(4*(g-e)),d=0,u=0,_=0,S=0,f=0;for(;a<g;){const e=5*a,r=i[e],o=i[e+1],s=l+r|0,g=0===r?h+o|0:o,m=i[e+2],v=i[e+3],T=i[e+4],p=t.getMetadata(v,T,n);2147483647!==p&&(0===u&&(u=s),_===s&&f>g&&(t.warnOverlappingSemanticTokens(s,g+1),S<g?c[d-4+2]=g:d-=4),c[d]=s-u,c[d+1]=g,c[d+2]=g+m,c[d+3]=p,d+=4,_=s,S=g,f=g+m),l=s,h=g,a++}d!==c.length&&(c=c.subarray(0,d));const m=SparseMultilineTokens.create(u,c);s.push(m)}return s}class HashTableEntry{constructor(e,t,n,i){this.tokenTypeIndex=e,this.tokenModifierSet=t,this.languageId=n,this.metadata=i,this.next=null}}class HashTable{constructor(){this._elementsCount=0,this._currentLengthIndex=0,this._currentLength=HashTable._SIZES[this._currentLengthIndex],this._growCount=Math.round(this._currentLengthIndex+1<HashTable._SIZES.length?2/3*this._currentLength:0),this._elements=[],HashTable._nullOutEntries(this._elements,this._currentLength)}static _nullOutEntries(e,t){for(let n=0;n<t;n++)e[n]=null}_hash2(e,t){return(e<<5)-e+t|0}_hashFunc(e,t,n){return this._hash2(this._hash2(e,t),n)%this._currentLength}get(e,t,n){const i=this._hashFunc(e,t,n);let r=this._elements[i];for(;r;){if(r.tokenTypeIndex===e&&r.tokenModifierSet===t&&r.languageId===n)return r;r=r.next}return null}add(e,t,n,i){if(this._elementsCount++,0!==this._growCount&&this._elementsCount>=this._growCount){const e=this._elements;this._currentLengthIndex++,this._currentLength=HashTable._SIZES[this._currentLengthIndex],this._growCount=Math.round(this._currentLengthIndex+1<HashTable._SIZES.length?2/3*this._currentLength:0),this._elements=[],HashTable._nullOutEntries(this._elements,this._currentLength);for(const t of e){let e=t;for(;e;){const t=e.next;e.next=null,this._add(e),e=t}}}this._add(new HashTableEntry(e,t,n,i))}_add(e){const t=this._hashFunc(e.tokenTypeIndex,e.tokenModifierSet,e.languageId);e.next=this._elements[t],this._elements[t]=e}}HashTable._SIZES=[3,7,13,31,61,127,251,509,1021,2039,4093,8191,16381,32749,65521,131071,262139,524287,1048573,2097143];
//# sourceMappingURL=/sm/e6acabd1112f8b7771df6054a0b7dfd86b65589976275f415b757a3da3be665d.map
/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/editor/common/services/webWorker.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{EditorWorkerClient}from"./editorWorkerServiceImpl.js";import*as types from"../../../base/common/types.js";export function createWebWorker(e,o){return new MonacoWebWorkerImpl(e,o)}class MonacoWebWorkerImpl extends EditorWorkerClient{constructor(e,o){super(e,o.keepIdleModels||!1,o.label),this._foreignModuleId=o.moduleId,this._foreignModuleCreateData=o.createData||null,this._foreignModuleHost=o.host||null,this._foreignProxy=null}fhr(e,o){if(!this._foreignModuleHost||"function"!=typeof this._foreignModuleHost[e])return Promise.reject(new Error("Missing method "+e+" or missing main thread foreign host."));try{return Promise.resolve(this._foreignModuleHost[e].apply(this._foreignModuleHost,o))}catch(e){return Promise.reject(e)}}_getForeignProxy(){return this._foreignProxy||(this._foreignProxy=this._getProxy().then((e=>{const o=this._foreignModuleHost?types.getAllMethodNames(this._foreignModuleHost):[];return e.loadForeignModule(this._foreignModuleId,this._foreignModuleCreateData,o).then((o=>{this._foreignModuleCreateData=null;const r=(o,r)=>e.fmr(o,r),t=(e,o)=>function(){const r=Array.prototype.slice.call(arguments,0);return o(e,r)};let i={};for(const e of o)i[e]=t(e,r);return i}))}))),this._foreignProxy}getProxy(){return this._getForeignProxy()}withSyncedResources(e){return this._withSyncedResources(e).then((e=>this.getProxy()))}}
//# sourceMappingURL=/sm/3db6ae530ed5d02291f8b412a7e19c291d5b9ceeda638ec72326cea8f9b454f3.map
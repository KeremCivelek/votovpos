/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/monaco-editor@0.27.0/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonSchemaService.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as Json from"./../../jsonc-parser/main.js";import{URI}from"./../../vscode-uri/index.js";import*as Strings from"../utils/strings.js";import*as Parser from"../parser/jsonParser.js";import*as nls from"./../../../fillers/vscode-nls.js";import{createRegex}from"../utils/glob.js";var localize=nls.loadMessageBundle(),BANG="!",PATH_SEP="/",FilePatternAssociation=function(){function e(e,t){this.globWrappers=[];try{for(var r=0,s=e;r<s.length;r++){var n=s[r],o=n[0]!==BANG;o||(n=n.substring(1)),n.length>0&&(n[0]===PATH_SEP&&(n=n.substring(1)),this.globWrappers.push({regexp:createRegex("**/"+n,{extended:!0,globstar:!0}),include:o}))}this.uris=t}catch(e){this.globWrappers.length=0,this.uris=[]}}return e.prototype.matchesPattern=function(e){for(var t=!1,r=0,s=this.globWrappers;r<s.length;r++){var n=s[r],o=n.regexp,i=n.include;o.test(e)&&(t=i)}return t},e.prototype.getURIs=function(){return this.uris},e}(),SchemaHandle=function(){function e(e,t,r){this.service=e,this.url=t,this.dependencies={},r&&(this.unresolvedSchema=this.service.promise.resolve(new UnresolvedSchema(r)))}return e.prototype.getUnresolvedSchema=function(){return this.unresolvedSchema||(this.unresolvedSchema=this.service.loadSchema(this.url)),this.unresolvedSchema},e.prototype.getResolvedSchema=function(){var e=this;return this.resolvedSchema||(this.resolvedSchema=this.getUnresolvedSchema().then((function(t){return e.service.resolveSchemaContent(t,e.url,e.dependencies)}))),this.resolvedSchema},e.prototype.clearSchema=function(){this.resolvedSchema=void 0,this.unresolvedSchema=void 0,this.dependencies={}},e}(),UnresolvedSchema=function(e,t){void 0===t&&(t=[]),this.schema=e,this.errors=t};export{UnresolvedSchema};var ResolvedSchema=function(){function e(e,t){void 0===t&&(t=[]),this.schema=e,this.errors=t}return e.prototype.getSection=function(e){var t=this.getSectionRecursive(e,this.schema);if(t)return Parser.asSchema(t)},e.prototype.getSectionRecursive=function(e,t){if(!t||"boolean"==typeof t||0===e.length)return t;var r=e.shift();if(t.properties&&(t.properties[r],1))return this.getSectionRecursive(e,t.properties[r]);if(t.patternProperties)for(var s=0,n=Object.keys(t.patternProperties);s<n.length;s++){var o=n[s];if(Strings.extendedRegExp(o).test(r))return this.getSectionRecursive(e,t.patternProperties[o])}else{if("object"==typeof t.additionalProperties)return this.getSectionRecursive(e,t.additionalProperties);if(r.match("[0-9]+"))if(Array.isArray(t.items)){var i=parseInt(r,10);if(!isNaN(i)&&t.items[i])return this.getSectionRecursive(e,t.items[i])}else if(t.items)return this.getSectionRecursive(e,t.items)}},e}();export{ResolvedSchema};var JSONSchemaService=function(){function e(e,t,r){this.contextService=t,this.requestService=e,this.promiseConstructor=r||Promise,this.callOnDispose=[],this.contributionSchemas={},this.contributionAssociations=[],this.schemasById={},this.filePatternAssociations=[],this.registeredSchemasIds={}}return e.prototype.getRegisteredSchemaIds=function(e){return Object.keys(this.registeredSchemasIds).filter((function(t){var r=URI.parse(t).scheme;return"schemaservice"!==r&&(!e||e(r))}))},Object.defineProperty(e.prototype,"promise",{get:function(){return this.promiseConstructor},enumerable:!1,configurable:!0}),e.prototype.dispose=function(){for(;this.callOnDispose.length>0;)this.callOnDispose.pop()()},e.prototype.onResourceChange=function(e){for(var t=this,r=!1,s=[e=normalizeId(e)],n=Object.keys(this.schemasById).map((function(e){return t.schemasById[e]}));s.length;)for(var o=s.pop(),i=0;i<n.length;i++){var a=n[i];a&&(a.url===o||a.dependencies[o])&&(a.url!==o&&s.push(a.url),a.clearSchema(),n[i]=void 0,r=!0)}return r},e.prototype.setSchemaContributions=function(e){if(e.schemas){var t=e.schemas;for(var r in t){var s=normalizeId(r);this.contributionSchemas[s]=this.addSchemaHandle(s,t[r])}}if(Array.isArray(e.schemaAssociations))for(var n=0,o=e.schemaAssociations;n<o.length;n++){var i=o[n],a=i.uris.map(normalizeId),c=this.addFilePatternAssociation(i.pattern,a);this.contributionAssociations.push(c)}},e.prototype.addSchemaHandle=function(e,t){var r=new SchemaHandle(this,e,t);return this.schemasById[e]=r,r},e.prototype.getOrAddSchemaHandle=function(e,t){return this.schemasById[e]||this.addSchemaHandle(e,t)},e.prototype.addFilePatternAssociation=function(e,t){var r=new FilePatternAssociation(e,t);return this.filePatternAssociations.push(r),r},e.prototype.registerExternalSchema=function(e,t,r){var s=normalizeId(e);return this.registeredSchemasIds[s]=!0,this.cachedSchemaForResource=void 0,t&&this.addFilePatternAssociation(t,[e]),r?this.addSchemaHandle(s,r):this.getOrAddSchemaHandle(s)},e.prototype.clearExternalSchemas=function(){for(var e in this.schemasById={},this.filePatternAssociations=[],this.registeredSchemasIds={},this.cachedSchemaForResource=void 0,this.contributionSchemas)this.schemasById[e]=this.contributionSchemas[e],this.registeredSchemasIds[e]=!0;for(var t=0,r=this.contributionAssociations;t<r.length;t++){var s=r[t];this.filePatternAssociations.push(s)}},e.prototype.getResolvedSchema=function(e){var t=normalizeId(e),r=this.schemasById[t];return r?r.getResolvedSchema():this.promise.resolve(void 0)},e.prototype.loadSchema=function(e){if(!this.requestService){var t=localize("json.schema.norequestservice","Unable to load schema from '{0}'. No schema request service available",toDisplayString(e));return this.promise.resolve(new UnresolvedSchema({},[t]))}return this.requestService(e).then((function(t){if(!t){var r=localize("json.schema.nocontent","Unable to load schema from '{0}': No content.",toDisplayString(e));return new UnresolvedSchema({},[r])}var s,n=[];s=Json.parse(t,n);var o=n.length?[localize("json.schema.invalidFormat","Unable to parse content from '{0}': Parse error at offset {1}.",toDisplayString(e),n[0].offset)]:[];return new UnresolvedSchema(s,o)}),(function(t){var r=t.toString(),s=t.toString().split("Error: ");return s.length>1&&(r=s[1]),Strings.endsWith(r,".")&&(r=r.substr(0,r.length-1)),new UnresolvedSchema({},[localize("json.schema.nocontent","Unable to load schema from '{0}': {1}.",toDisplayString(e),r)])}))},e.prototype.resolveSchemaContent=function(e,t,r){var s=this,n=e.errors.slice(0),o=e.schema;if(o.$schema){var i=normalizeId(o.$schema);if("http://json-schema.org/draft-03/schema"===i)return this.promise.resolve(new ResolvedSchema({},[localize("json.schema.draft03.notsupported","Draft-03 schemas are not supported.")]));"https://json-schema.org/draft/2019-09/schema"===i&&n.push(localize("json.schema.draft201909.notsupported","Draft 2019-09 schemas are not yet fully supported."))}var a=this.contextService,c=function(e,t,r,s){var o=s?decodeURIComponent(s):void 0,i=function(e,t){if(!t)return e;var r=e;return"/"===t[0]&&(t=t.substr(1)),t.split("/").some((function(e){return e=e.replace(/~1/g,"/").replace(/~0/g,"~"),!(r=r[e])})),r}(t,o);if(i)for(var a in i)i.hasOwnProperty(a)&&!e.hasOwnProperty(a)&&(e[a]=i[a]);else n.push(localize("json.schema.invalidref","$ref '{0}' in '{1}' can not be resolved.",o,r))},h=function(e,t,r,o,i){a&&!/^[A-Za-z][A-Za-z0-9+\-.+]*:\/\/.*/.test(t)&&(t=a.resolveRelativePath(t,o)),t=normalizeId(t);var h=s.getOrAddSchemaHandle(t);return h.getUnresolvedSchema().then((function(s){if(i[t]=!0,s.errors.length){var o=r?t+"#"+r:t;n.push(localize("json.schema.problemloadingref","Problems loading reference '{0}': {1}",o,s.errors[0]))}return c(e,s.schema,t,r),l(e,s.schema,t,h.dependencies)}))},l=function(e,t,r,n){if(!e||"object"!=typeof e)return Promise.resolve(null);for(var o=[e],i=[],a=[],l=function(e){for(var s=[];e.$ref;){var i=e.$ref,l=i.split("#",2);if(delete e.$ref,l[0].length>0)return void a.push(h(e,l[0],l[1],r,n));-1===s.indexOf(i)&&(c(e,t,r,l[1]),s.push(i))}!function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var r=0,s=e;r<s.length;r++){var n=s[r];"object"==typeof n&&o.push(n)}}(e.items,e.additionalItems,e.additionalProperties,e.not,e.contains,e.propertyNames,e.if,e.then,e.else),function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var r=0,s=e;r<s.length;r++){var n=s[r];if("object"==typeof n)for(var i in n){var a=n[i];"object"==typeof a&&o.push(a)}}}(e.definitions,e.properties,e.patternProperties,e.dependencies),function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var r=0,s=e;r<s.length;r++){var n=s[r];if(Array.isArray(n))for(var i=0,a=n;i<a.length;i++){var c=a[i];"object"==typeof c&&o.push(c)}}}(e.anyOf,e.allOf,e.oneOf,e.items)};o.length;){var u=o.pop();i.indexOf(u)>=0||(i.push(u),l(u))}return s.promise.all(a)};return l(o,o,t,r).then((function(e){return new ResolvedSchema(o,n)}))},e.prototype.getSchemaForResource=function(e,t){if(t&&t.root&&"object"===t.root.type){var r=t.root.properties.filter((function(e){return"$schema"===e.keyNode.value&&e.valueNode&&"string"===e.valueNode.type}));if(r.length>0){var s=r[0].valueNode;if(s&&"string"===s.type){var n=Parser.getNodeValue(s);if(n&&Strings.startsWith(n,".")&&this.contextService&&(n=this.contextService.resolveRelativePath(n,e)),n){var o=normalizeId(n);return this.getOrAddSchemaHandle(o).getResolvedSchema()}}}}if(this.cachedSchemaForResource&&this.cachedSchemaForResource.resource===e)return this.cachedSchemaForResource.resolvedSchema;for(var i=Object.create(null),a=[],c=normalizeResourceForMatching(e),h=0,l=this.filePatternAssociations;h<l.length;h++){var u=l[h];if(u.matchesPattern(c))for(var m=0,d=u.getURIs();m<d.length;m++){var p=d[m];i[p]||(a.push(p),i[p]=!0)}}var f=a.length>0?this.createCombinedSchema(e,a).getResolvedSchema():this.promise.resolve(void 0);return this.cachedSchemaForResource={resource:e,resolvedSchema:f},f},e.prototype.createCombinedSchema=function(e,t){if(1===t.length)return this.getOrAddSchemaHandle(t[0]);var r="schemaservice://combinedSchema/"+encodeURIComponent(e),s={allOf:t.map((function(e){return{$ref:e}}))};return this.addSchemaHandle(r,s)},e.prototype.getMatchingSchemas=function(e,t,r){if(r){var s=r.id||"schemaservice://untitled/matchingSchemas/"+idCounter++;return this.resolveSchemaContent(new UnresolvedSchema(r),s,{}).then((function(e){return t.getMatchingSchemas(e.schema).filter((function(e){return!e.inverted}))}))}return this.getSchemaForResource(e.uri,t).then((function(e){return e?t.getMatchingSchemas(e.schema).filter((function(e){return!e.inverted})):[]}))},e}();export{JSONSchemaService};var idCounter=0;function normalizeId(e){try{return URI.parse(e).toString()}catch(t){return e}}function normalizeResourceForMatching(e){try{return URI.parse(e).with({fragment:null,query:null}).toString()}catch(t){return e}}function toDisplayString(e){try{var t=URI.parse(e);if("file"===t.scheme)return t.fsPath}catch(e){}return e}
//# sourceMappingURL=/sm/56e7021dfb9a94be0951a4df21f4dde1da423b9612d2d7f8c973e1cb810cb2f0.map
/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/monaco-editor@0.33.0/esm/vs/base/common/comparers.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{IdleValue}from"./async.js";const intlFileNameCollatorBaseNumeric=new IdleValue((()=>{const e=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"});return{collator:e,collatorIsNumeric:e.resolvedOptions().numeric}})),intlFileNameCollatorNumeric=new IdleValue((()=>({collator:new Intl.Collator(void 0,{numeric:!0})}))),intlFileNameCollatorNumericCaseInsensitive=new IdleValue((()=>({collator:new Intl.Collator(void 0,{numeric:!0,sensitivity:"accent"})})));export function compareFileNames(e,t,o=!1){const r=e||"",l=t||"",n=intlFileNameCollatorBaseNumeric.value.collator.compare(r,l);return intlFileNameCollatorBaseNumeric.value.collatorIsNumeric&&0===n&&r!==l?r<l?-1:1:n}export function compareAnything(e,t,o){const r=e.toLowerCase(),l=t.toLowerCase(),n=compareByPrefix(e,t,o);if(n)return n;const i=r.endsWith(o);if(i!==l.endsWith(o))return i?-1:1;const a=compareFileNames(r,l);return 0!==a?a:r.localeCompare(l)}export function compareByPrefix(e,t,o){const r=e.toLowerCase(),l=t.toLowerCase(),n=r.startsWith(o),i=l.startsWith(o);if(n!==i)return n?-1:1;if(n&&i){if(r.length<l.length)return-1;if(r.length>l.length)return 1}return 0}
//# sourceMappingURL=/sm/94ed7a5c89eecd8101825c3b1e69b069726229ad77f3ec70588c568b242596eb.map
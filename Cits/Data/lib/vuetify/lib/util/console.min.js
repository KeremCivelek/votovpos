/**
 * Minified by jsDelivr using Terser v5.13.1.
 * Original file: /npm/vuetify@2.6.6/lib/util/console.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Vuetify from"../framework";function createMessage(e,n,o){if(!Vuetify.config.silent){if(o&&(n={_isVue:!0,$parent:o,$options:n}),n){if(n.$_alreadyWarned=n.$_alreadyWarned||[],n.$_alreadyWarned.includes(e))return;n.$_alreadyWarned.push(e)}return`[Vuetify] ${e}`+(n?generateComponentTrace(n):"")}}export function consoleInfo(e,n,o){const t=createMessage(e,n,o);null!=t&&console.info(t)}export function consoleWarn(e,n,o){const t=createMessage(e,n,o);null!=t&&console.warn(t)}export function consoleError(e,n,o){const t=createMessage(e,n,o);null!=t&&console.error(t)}export function deprecate(e,n,o,t){consoleWarn(`[UPGRADE] '${e}' is deprecated, use '${n}' instead.`,o,t)}export function breaking(e,n,o,t){consoleError(`[BREAKING] '${e}' has been removed, use '${n}' instead. For more information, see the upgrade guide https://github.com/vuetifyjs/vuetify/releases/tag/v2.0.0#user-content-upgrade-guide`,o,t)}export function removed(e,n,o){consoleWarn(`[REMOVED] '${e}' has been removed. You can safely omit it.`,n,o)}const classifyRE=/(?:^|[-_])(\w)/g,classify=e=>e.replace(classifyRE,(e=>e.toUpperCase())).replace(/[-_]/g,"");function formatComponentName(e,n){if(e.$root===e)return"<Root>";const o="function"==typeof e&&null!=e.cid?e.options:e._isVue?e.$options||e.constructor.options:e||{};let t=o.name||o._componentTag;const r=o.__file;if(!t&&r){const e=r.match(/([^/\\]+)\.vue$/);t=e&&e[1]}return(t?`<${a=t,a.replace(classifyRE,(e=>e.toUpperCase())).replace(/[-_]/g,"")}>`:"<Anonymous>")+(r&&!1!==n?` at ${r}`:"");var a}function generateComponentTrace(e){if(e._isVue&&e.$parent){const n=[];let o=0;for(;e;){if(n.length>0){const t=n[n.length-1];if(t.constructor===e.constructor){o++,e=e.$parent;continue}o>0&&(n[n.length-1]=[t,o],o=0)}n.push(e),e=e.$parent}return"\n\nfound in\n\n"+n.map(((e,n)=>`${0===n?"---\x3e ":" ".repeat(5+2*n)}${Array.isArray(e)?`${formatComponentName(e[0])}... (${e[1]} recursive calls)`:formatComponentName(e)}`)).join("\n")}return`\n\n(found in ${formatComponentName(e)})`}
//# sourceMappingURL=/sm/b7f8f2b181bfb021966e265e8bed9a6640d1cab4711c521fd62b13f3ffef7a21.map
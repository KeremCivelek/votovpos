/**
 * Minified by jsDelivr using Terser v5.13.1.
 * Original file: /npm/vuetify@2.6.6/lib/services/theme/utils.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{keys}from"../../util/helpers";import{colorToInt,intToHex,colorToHex}from"../../util/colorUtils";import*as sRGB from"../../util/color/transformSRGB";import*as LAB from"../../util/color/transformCIELAB";export function parse(o,r=!1,n=!0){const{anchor:t,...e}=o,a=Object.keys(e),l={};for(let t=0;t<a.length;++t){const e=a[t],i=o[e];null!=i&&(n?r?("base"===e||e.startsWith("lighten")||e.startsWith("darken"))&&(l[e]=colorToHex(i)):l[e]="object"==typeof i?parse(i,!0,n):genVariations(e,colorToInt(i)):l[e]={base:intToHex(colorToInt(i))})}return r||(l.anchor=t||l.base||l.primary.base),l}const genBaseColor=(o,r)=>`\n.v-application .${o} {\n  background-color: ${r} !important;\n  border-color: ${r} !important;\n}\n.v-application .${o}--text {\n  color: ${r} !important;\n  caret-color: ${r} !important;\n}`,genVariantColor=(o,r,n)=>{const[t,e]=r.split(/(\d)/,2);return`\n.v-application .${o}.${t}-${e} {\n  background-color: ${n} !important;\n  border-color: ${n} !important;\n}\n.v-application .${o}--text.text--${t}-${e} {\n  color: ${n} !important;\n  caret-color: ${n} !important;\n}`},genColorVariableName=(o,r="base")=>`--v-${o}-${r}`,genColorVariable=(o,r="base")=>`var(${genColorVariableName(o,r)})`;export function genStyles(o,r=!1){const{anchor:n,...t}=o,e=Object.keys(t);if(!e.length)return"";let a="",l="";l+=`.v-application a { color: ${r?genColorVariable("anchor"):n}; }`,r&&(a+=`  ${genColorVariableName("anchor")}: ${n};\n`);for(let n=0;n<e.length;++n){const t=e[n],i=o[t];l+=genBaseColor(t,r?genColorVariable(t):i.base),r&&(a+=`  ${genColorVariableName(t)}: ${i.base};\n`);const c=keys(i);for(let o=0;o<c.length;++o){const n=c[o],e=i[n];"base"!==n&&(l+=genVariantColor(t,n,r?genColorVariable(t,n):e),r&&(a+=`  ${genColorVariableName(t,n)}: ${e};\n`))}}return r&&(a=`:root {\n${a}}\n\n`),a+l}export function genVariations(o,r){const n={base:intToHex(r)};for(let o=5;o>0;--o)n[`lighten${o}`]=intToHex(lighten(r,o));for(let o=1;o<=4;++o)n[`darken${o}`]=intToHex(darken(r,o));return n}export function lighten(o,r){const n=LAB.fromXYZ(sRGB.toXYZ(o));return n[0]=n[0]+10*r,sRGB.fromXYZ(LAB.toXYZ(n))}export function darken(o,r){const n=LAB.fromXYZ(sRGB.toXYZ(o));return n[0]=n[0]-10*r,sRGB.fromXYZ(LAB.toXYZ(n))}
//# sourceMappingURL=/sm/b8a4ab2fa00f9b4cb93d1de2e6e6100e16d1541dd3e5fab17fcf386eb33d0c91.map
/**
 * Minified by jsDelivr using Terser v5.13.1.
 * Original file: /npm/vuetify@2.6.6/lib/components/VBottomNavigation/VBottomNavigation.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import"../../../src/components/VBottomNavigation/VBottomNavigation.sass";import Applicationable from"../../mixins/applicationable";import ButtonGroup from"../../mixins/button-group";import Colorable from"../../mixins/colorable";import Measurable from"../../mixins/measurable";import Proxyable from"../../mixins/proxyable";import Scrollable from"../../mixins/scrollable";import Themeable from"../../mixins/themeable";import{factory as ToggleableFactory}from"../../mixins/toggleable";import mixins from"../../util/mixins";import{breaking}from"../../util/console";export default mixins(Applicationable("bottom",["height","inputValue"]),Colorable,Measurable,ToggleableFactory("inputValue"),Proxyable,Scrollable,Themeable).extend({name:"v-bottom-navigation",props:{activeClass:{type:String,default:"v-btn--active"},backgroundColor:String,grow:Boolean,height:{type:[Number,String],default:56},hideOnScroll:Boolean,horizontal:Boolean,inputValue:{type:Boolean,default:!0},mandatory:Boolean,shift:Boolean,tag:{type:String,default:"div"}},data(){return{isActive:this.inputValue}},computed:{canScroll(){return Scrollable.options.computed.canScroll.call(this)&&(this.hideOnScroll||!this.inputValue)},classes(){return{"v-bottom-navigation--absolute":this.absolute,"v-bottom-navigation--grow":this.grow,"v-bottom-navigation--fixed":!this.absolute&&(this.app||this.fixed),"v-bottom-navigation--horizontal":this.horizontal,"v-bottom-navigation--shift":this.shift}},styles(){return{...this.measurableStyles,transform:this.isActive?"none":"translateY(100%)"}}},watch:{canScroll:"onScroll"},created(){this.$attrs.hasOwnProperty("active")&&breaking("active.sync","value or v-model",this)},methods:{thresholdMet(){this.hideOnScroll&&(this.isActive=!this.isScrollingUp||this.currentScroll>this.computedScrollThreshold,this.$emit("update:input-value",this.isActive)),this.currentThreshold<this.computedScrollThreshold||(this.savedScroll=this.currentScroll)},updateApplication(){return this.$el?this.$el.clientHeight:0},updateValue(t){this.$emit("change",t)}},render(t){const o=this.setBackgroundColor(this.backgroundColor,{staticClass:"v-bottom-navigation",class:this.classes,style:this.styles,props:{activeClass:this.activeClass,mandatory:Boolean(this.mandatory||void 0!==this.value),tag:this.tag,value:this.internalValue},on:{change:this.updateValue}});return this.canScroll&&(o.directives=o.directives||[],o.directives.push({arg:this.scrollTarget,name:"scroll",value:this.onScroll})),t(ButtonGroup,this.setTextColor(this.color,o),this.$slots.default)}});
//# sourceMappingURL=/sm/b5232da1ceabbcbf774e22b8f79f78791d11de2e67793510507d5a929afcaa8c.map
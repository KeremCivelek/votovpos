/**
 * Minified by jsDelivr using Terser v5.13.1.
 * Original file: /npm/vuetify@2.6.6/lib/components/VColorPicker/VColorPickerEdit.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import"../../../src/components/VColorPicker/VColorPickerEdit.sass";import VBtn from"../VBtn";import VIcon from"../VIcon";import{parseHex}from"../../util/colorUtils";import Vue from"vue";import{fromRGBA,fromHexa,fromHSLA}from"./util";export const modes={rgba:{inputs:[["r",255,"int"],["g",255,"int"],["b",255,"int"],["a",1,"float"]],from:fromRGBA},hsla:{inputs:[["h",360,"int"],["s",1,"float"],["l",1,"float"],["a",1,"float"]],from:fromHSLA},hexa:{from:fromHexa}};export default Vue.extend({name:"v-color-picker-edit",props:{color:Object,disabled:Boolean,hideAlpha:Boolean,hideModeSwitch:Boolean,mode:{type:String,default:"rgba",validator:e=>Object.keys(modes).includes(e)}},data(){return{modes:modes,internalMode:this.mode}},computed:{currentMode(){return this.modes[this.internalMode]}},watch:{mode(e){this.internalMode=e}},created(){this.internalMode=this.mode},methods:{getValue:(e,t)=>"float"===t?Math.round(100*e)/100:"int"===t?Math.round(e):0,parseValue:(e,t)=>"float"===t?parseFloat(e):"int"===t&&parseInt(e,10)||0,changeMode(){const e=Object.keys(this.modes),t=e.indexOf(this.internalMode),o=e[(t+1)%e.length];this.internalMode=o,this.$emit("update:mode",o)},genInput(e,t,o,i){return this.$createElement("div",{staticClass:"v-color-picker__input"},[this.$createElement("input",{key:e,attrs:t,domProps:{value:o},on:i}),this.$createElement("span",e.toUpperCase())])},genInputs(){if("hexa"===this.internalMode){const e=this.color.hexa,t=this.hideAlpha&&e.endsWith("FF")?e.substr(0,7):e;return this.genInput("hex",{maxlength:this.hideAlpha?7:9,disabled:this.disabled},t,{change:e=>{const t=e.target;this.$emit("update:color",this.currentMode.from(parseHex(t.value)))}})}return(this.hideAlpha?this.currentMode.inputs.slice(0,-1):this.currentMode.inputs).map((([e,t,o])=>{const i=this.color[this.internalMode];return this.genInput(e,{type:"number",min:0,max:t,step:"float"===o?"0.01":"int"===o?"1":void 0,disabled:this.disabled},this.getValue(i[e],o),{input:t=>{const r=t.target,s=this.parseValue(r.value||"0",o);this.$emit("update:color",this.currentMode.from(Object.assign({},i,{[e]:s}),this.color.alpha))}})}))},genSwitch(){return this.$createElement(VBtn,{props:{small:!0,icon:!0,disabled:this.disabled},on:{click:this.changeMode}},[this.$createElement(VIcon,"$unfold")])}},render(e){return e("div",{staticClass:"v-color-picker__edit"},[this.genInputs(),!this.hideModeSwitch&&this.genSwitch()])}});
//# sourceMappingURL=/sm/87a5ca7304b1e93f7869afb628d9ef6e5302a10ad78722ee7f6a9795df4ec52f.map
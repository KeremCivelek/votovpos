/**
 * Minified by jsDelivr using Terser v5.13.1.
 * Original file: /npm/vuetify@2.6.6/lib/components/VCalendar/util/timestamp.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{isLeapYear}from"../../../util/dateTimeUtils";export const PARSE_REGEX=/^(\d{4})-(\d{1,2})(-(\d{1,2}))?([^\d]+(\d{1,2}))?(:(\d{1,2}))?(:(\d{1,2}))?$/;export const PARSE_TIME=/(\d\d?)(:(\d\d?)|)(:(\d\d?)|)/;export const DAYS_IN_MONTH=[0,31,28,31,30,31,30,31,31,30,31,30,31];export const DAYS_IN_MONTH_LEAP=[0,31,29,31,30,31,30,31,31,30,31,30,31];export const DAYS_IN_MONTH_MIN=28;export const DAYS_IN_MONTH_MAX=31;export const MONTH_MAX=12;export const MONTH_MIN=1;export const DAY_MIN=1;export const DAYS_IN_WEEK=7;export const MINUTES_IN_HOUR=60;export const MINUTE_MAX=59;export const MINUTES_IN_DAY=1440;export const HOURS_IN_DAY=24;export const HOUR_MAX=23;export const FIRST_HOUR=0;export const OFFSET_YEAR=1e4;export const OFFSET_MONTH=100;export const OFFSET_HOUR=100;export const OFFSET_TIME=1e4;export function getStartOfWeek(e,t,n){const r=copyTimestamp(e);return findWeekday(r,t[0],prevDay),updateFormatted(r),n&&updateRelative(r,n,r.hasTime),r}export function getEndOfWeek(e,t,n){const r=copyTimestamp(e);return findWeekday(r,t[t.length-1]),updateFormatted(r),n&&updateRelative(r,n,r.hasTime),r}export function getStartOfMonth(e){const t=copyTimestamp(e);return t.day=1,updateWeekday(t),updateFormatted(t),t}export function getEndOfMonth(e){const t=copyTimestamp(e);return t.day=daysInMonth(t.year,t.month),updateWeekday(t),updateFormatted(t),t}export function validateTime(e){return"number"==typeof e&&isFinite(e)||!!PARSE_TIME.exec(e)||"object"==typeof e&&isFinite(e.hour)&&isFinite(e.minute)}export function parseTime(e){if("number"==typeof e)return e;if("string"==typeof e){const t=PARSE_TIME.exec(e);return!!t&&60*parseInt(t[1])+parseInt(t[3]||0)}return"object"==typeof e&&("number"==typeof e.hour&&"number"==typeof e.minute&&60*e.hour+e.minute)}export function validateTimestamp(e){return"number"==typeof e&&isFinite(e)||"string"==typeof e&&!!PARSE_REGEX.exec(e)||e instanceof Date}export function parseTimestamp(e,t=!1,n){if("number"==typeof e&&isFinite(e)&&(e=new Date(e)),e instanceof Date){const t=parseDate(e);return n&&updateRelative(t,n,t.hasTime),t}if("string"!=typeof e){if(t)throw new Error(`${e} is not a valid timestamp. It must be a Date, number of milliseconds since Epoch, or a string in the format of YYYY-MM-DD or YYYY-MM-DD hh:mm. Zero-padding is optional and seconds are ignored.`);return null}const r=PARSE_REGEX.exec(e);if(!r){if(t)throw new Error(`${e} is not a valid timestamp. It must be a Date, number of milliseconds since Epoch, or a string in the format of YYYY-MM-DD or YYYY-MM-DD hh:mm. Zero-padding is optional and seconds are ignored.`);return null}const a={date:e,time:"",year:parseInt(r[1]),month:parseInt(r[2]),day:parseInt(r[4])||1,hour:parseInt(r[6])||0,minute:parseInt(r[8])||0,weekday:0,hasDay:!!r[4],hasTime:!(!r[6]||!r[8]),past:!1,present:!1,future:!1};return updateWeekday(a),updateFormatted(a),n&&updateRelative(a,n,a.hasTime),a}export function parseDate(e){return updateFormatted({date:"",time:"",year:e.getFullYear(),month:e.getMonth()+1,day:e.getDate(),weekday:e.getDay(),hour:e.getHours(),minute:e.getMinutes(),hasDay:!0,hasTime:!0,past:!1,present:!0,future:!1})}export function getDayIdentifier(e){return 1e4*e.year+100*e.month+e.day}export function getTimeIdentifier(e){return 100*e.hour+e.minute}export function getTimestampIdentifier(e){return 1e4*getDayIdentifier(e)+getTimeIdentifier(e)}export function updateRelative(e,t,n=!1){let r=getDayIdentifier(t),a=getDayIdentifier(e),o=r===a;return e.hasTime&&n&&o&&(r=getTimeIdentifier(t),a=getTimeIdentifier(e),o=r===a),e.past=a<r,e.present=o,e.future=a>r,e}export function isTimedless(e){return e instanceof Date||"number"==typeof e&&isFinite(e)}export function updateHasTime(e,t,n){return e.hasTime!==t&&(e.hasTime=t,t||(e.hour=23,e.minute=59,e.time=getTime(e)),n&&updateRelative(e,n,e.hasTime)),e}export function updateMinutes(e,t,n){return e.hasTime=!0,e.hour=Math.floor(t/60),e.minute=t%60,e.time=getTime(e),n&&updateRelative(e,n,!0),e}export function updateWeekday(e){return e.weekday=getWeekday(e),e}export function updateFormatted(e){return e.time=getTime(e),e.date=getDate(e),e}export function getWeekday(e){if(e.hasDay){const t=Math.floor,n=e.day,r=(e.month+9)%12+1,a=t(e.year/100),o=e.year%100-(e.month<=2?1:0);return((n+t(2.6*r-.2)-2*a+o+t(o/4)+t(a/4))%7+7)%7}return e.weekday}export function daysInMonth(e,t){return isLeapYear(e)?DAYS_IN_MONTH_LEAP[t]:DAYS_IN_MONTH[t]}export function copyTimestamp(e){const{date:t,time:n,year:r,month:a,day:o,weekday:i,hour:u,minute:p,hasDay:d,hasTime:s,past:m,present:f,future:y}=e;return{date:t,time:n,year:r,month:a,day:o,weekday:i,hour:u,minute:p,hasDay:d,hasTime:s,past:m,present:f,future:y}}export function padNumber(e,t){let n=String(e);for(;n.length<t;)n="0"+n;return n}export function getDate(e){let t=`${padNumber(e.year,4)}-${padNumber(e.month,2)}`;return e.hasDay&&(t+=`-${padNumber(e.day,2)}`),t}export function getTime(e){return e.hasTime?`${padNumber(e.hour,2)}:${padNumber(e.minute,2)}`:""}export function nextMinutes(e,t){for(e.minute+=t;e.minute>60;)e.minute-=60,e.hour++,e.hour>=24&&(nextDay(e),e.hour=0);return e}export function nextDay(e){return e.day++,e.weekday=(e.weekday+1)%7,e.day>28&&e.day>daysInMonth(e.year,e.month)&&(e.day=1,e.month++,e.month>12&&(e.month=1,e.year++)),e}export function prevDay(e){return e.day--,e.weekday=(e.weekday+6)%7,e.day<1&&(e.month--,e.month<1&&(e.year--,e.month=12),e.day=daysInMonth(e.year,e.month)),e}export function relativeDays(e,t=nextDay,n=1){for(;--n>=0;)t(e);return e}export function diffMinutes(e,t){return 525600*(t.year-e.year)+43800*(t.month-e.month)+1440*(t.day-e.day)+60*(t.hour-e.hour)+(t.minute-e.minute)}export function findWeekday(e,t,n=nextDay,r=6){for(;e.weekday!==t&&--r>=0;)n(e);return e}export function getWeekdaySkips(e){const t=[1,1,1,1,1,1,1],n=[0,0,0,0,0,0,0];for(let t=0;t<e.length;t++)n[e[t]]=1;for(let e=0;e<7;e++){let r=1;for(let t=1;t<7;t++){if(n[(e+t)%7])break;r++}t[e]=n[e]*r}return t}export function timestampToDate(e){const t=`${padNumber(e.hour,2)}:${padNumber(e.minute,2)}`,n=e.date;return new Date(`${n}T${t}:00+00:00`)}export function createDayList(e,t,n,r,a=42,o=0){const i=getDayIdentifier(t),u=[];let p=copyTimestamp(e),d=0,s=d===i;if(i<getDayIdentifier(e))throw new Error("End date is earlier than start date.");for(;(!s||u.length<o)&&u.length<a;){if(d=getDayIdentifier(p),s=s||d===i,0===r[p.weekday]){p=nextDay(p);continue}const e=copyTimestamp(p);updateFormatted(e),updateRelative(e,n),u.push(e),p=relativeDays(p,nextDay,r[p.weekday])}if(!u.length)throw new Error("No dates found using specified start date, end date, and weekdays.");return u}export function createIntervalList(e,t,n,r,a){const o=[];for(let i=0;i<r;i++){const r=t+i*n,u=copyTimestamp(e);o.push(updateMinutes(u,r,a))}return o}export function createNativeLocaleFormatter(e,t){const n=(e,t)=>"";return"undefined"==typeof Intl||void 0===Intl.DateTimeFormat?n:(n,r)=>{try{return new Intl.DateTimeFormat(e||void 0,t(n,r)).format(timestampToDate(n))}catch(e){return""}}}
//# sourceMappingURL=/sm/421afbb29788128e7a497cf0abc0c9b6f3d3a051cb06462f7aa24bae14dd49e4.map
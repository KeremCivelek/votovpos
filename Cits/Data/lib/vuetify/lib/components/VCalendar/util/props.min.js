/**
 * Minified by jsDelivr using Terser v5.13.1.
 * Original file: /npm/vuetify@2.6.6/lib/components/VCalendar/util/props.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{validateTimestamp,parseDate,DAYS_IN_WEEK,validateTime}from"./timestamp";import{CalendarEventOverlapModes}from"../modes";export default{base:{start:{type:[String,Number,Date],validate:validateTimestamp,default:()=>parseDate(new Date).date},end:{type:[String,Number,Date],validate:validateTimestamp},weekdays:{type:[Array,String],default:()=>[0,1,2,3,4,5,6],validate:validateWeekdays},hideHeader:{type:Boolean},shortWeekdays:{type:Boolean,default:!0},weekdayFormat:{type:Function,default:null},dayFormat:{type:Function,default:null}},intervals:{maxDays:{type:Number,default:7},shortIntervals:{type:Boolean,default:!0},intervalHeight:{type:[Number,String],default:48,validate:validateNumber},intervalWidth:{type:[Number,String],default:60,validate:validateNumber},intervalMinutes:{type:[Number,String],default:60,validate:validateNumber},firstInterval:{type:[Number,String],default:0,validate:validateNumber},firstTime:{type:[Number,String,Object],validate:validateTime},intervalCount:{type:[Number,String],default:24,validate:validateNumber},intervalFormat:{type:Function,default:null},intervalStyle:{type:Function,default:null},showIntervalLabel:{type:Function,default:null}},weeks:{localeFirstDayOfYear:{type:[String,Number],default:0},minWeeks:{validate:validateNumber,default:1},shortMonths:{type:Boolean,default:!0},showMonthOnFirst:{type:Boolean,default:!0},showWeek:Boolean,monthFormat:{type:Function,default:null}},calendar:{type:{type:String,default:"month"},value:{type:[String,Number,Date],validate:validateTimestamp}},category:{categories:{type:[Array,String],default:""},categoryText:{type:[String,Function]},categoryHideDynamic:{type:Boolean},categoryShowAll:{type:Boolean},categoryForInvalid:{type:String,default:""},categoryDays:{type:[Number,String],default:1,validate:e=>isFinite(parseInt(e))&&parseInt(e)>0}},events:{events:{type:Array,default:()=>[]},eventStart:{type:String,default:"start"},eventEnd:{type:String,default:"end"},eventTimed:{type:[String,Function],default:"timed"},eventCategory:{type:[String,Function],default:"category"},eventHeight:{type:Number,default:20},eventColor:{type:[String,Function],default:"primary"},eventTextColor:{type:[String,Function],default:"white"},eventName:{type:[String,Function],default:"name"},eventOverlapThreshold:{type:[String,Number],default:60},eventOverlapMode:{type:[String,Function],default:"stack",validate:e=>e in CalendarEventOverlapModes||"function"==typeof e},eventMore:{type:Boolean,default:!0},eventMoreText:{type:String,default:"$vuetify.calendar.moreEvents"},eventRipple:{type:[Boolean,Object],default:null},eventMarginBottom:{type:Number,default:1}}};export function validateNumber(e){return isFinite(parseInt(e))}export function validateWeekdays(e){if("string"==typeof e&&(e=e.split(",")),Array.isArray(e)){const t=e.map((e=>parseInt(e)));if(t.length>DAYS_IN_WEEK||0===t.length)return!1;const a={};let n=!1;for(let e=0;e<t.length;e++){const r=t[e];if(!isFinite(r)||r<0||r>=DAYS_IN_WEEK)return!1;if(e>0){const a=r-t[e-1];if(a<0){if(n)return!1;n=!0}else if(0===a)return!1}if(a[r])return!1;a[r]=!0}return!0}return!1}
//# sourceMappingURL=/sm/ad7e092274978b87b1f2e2f6badb634b18be4200d02dd9f56c7b483b544904e1.map
/**
 * Minified by jsDelivr using Terser v5.13.1.
 * Original file: /npm/vuetify@2.6.6/lib/components/VCalendar/mixins/calendar-with-events.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import"../../../../src/components/VCalendar/mixins/calendar-with-events.sass";import ripple from"../../../directives/ripple";import CalendarBase from"./calendar-base";import{escapeHTML}from"../../../util/helpers";import props from"../util/props";import{CalendarEventOverlapModes}from"../modes";import{getDayIdentifier,diffMinutes}from"../util/timestamp";import{parseEvent,isEventStart,isEventOn,isEventOverlapping,isEventHiddenOn}from"../util/events";const WIDTH_FULL=100,WIDTH_START=95,MINUTES_IN_DAY=1440;export default CalendarBase.extend({name:"calendar-with-events",directives:{ripple:ripple},props:{...props.events,...props.calendar,...props.category},computed:{noEvents(){return 0===this.events.length},parsedEvents(){return this.events.map(this.parseEvent)},parsedEventOverlapThreshold(){return parseInt(this.eventOverlapThreshold)},eventTimedFunction(){return"function"==typeof this.eventTimed?this.eventTimed:e=>!!e[this.eventTimed]},eventCategoryFunction(){return"function"==typeof this.eventCategory?this.eventCategory:e=>e[this.eventCategory]},eventTextColorFunction(){return"function"==typeof this.eventTextColor?this.eventTextColor:()=>this.eventTextColor},eventNameFunction(){return"function"==typeof this.eventName?this.eventName:(e,t)=>escapeHTML(e.input[this.eventName]||"")},eventModeFunction(){return"function"==typeof this.eventOverlapMode?this.eventOverlapMode:CalendarEventOverlapModes[this.eventOverlapMode]},eventWeekdays(){return this.parsedWeekdays},categoryMode(){return"category"===this.type}},methods:{eventColorFunction(e){return"function"==typeof this.eventColor?this.eventColor(e):e.color||this.eventColor},parseEvent(e,t=0){return parseEvent(e,t,this.eventStart,this.eventEnd,this.eventTimedFunction(e),!!this.categoryMode&&this.eventCategoryFunction(e))},formatTime(e,t){return this.getFormatter({timeZone:"UTC",hour:"numeric",minute:e.minute>0?"numeric":void 0})(e,!0)},updateEventVisibility(){if(this.noEvents||!this.eventMore)return;const e=this.eventHeight,t=this.getEventsMap();for(const n in t){const{parent:s,events:r,more:i}=t[n];if(!i)break;const o=s.getBoundingClientRect(),a=r.length-1,v=r.map((e=>({event:e,bottom:e.getBoundingClientRect().bottom}))).sort(((e,t)=>e.bottom-t.bottom));let d=0;for(let t=0;t<=a;t++){const n=v[t].bottom;(t===a?n>o.bottom:n+e>o.bottom)&&(v[t].event.style.display="none",d++)}d?(i.style.display="",i.innerHTML=this.$vuetify.lang.t(this.eventMoreText,d)):i.style.display="none"}},getEventsMap(){const e={},t=this.$refs.events;return t&&t.forEach?(t.forEach((t=>{const n=t.getAttribute("data-date");t.parentElement&&n&&(n in e||(e[n]={parent:t.parentElement,more:null,events:[]}),t.getAttribute("data-more")?e[n].more=t:(e[n].events.push(t),t.style.display=""))})),e):e},genDayEvent({event:e},t){const n=this.eventHeight,s=this.eventMarginBottom,r=getDayIdentifier(t),i=t.week,o=r===e.startIdentifier;let a=r===e.endIdentifier,v=95;if(!this.categoryMode)for(let n=t.index+1;n<i.length;n++){const t=getDayIdentifier(i[n]);if(!(e.endIdentifier>=t)){a=!0;break}v+=100,a=a||t===e.endIdentifier}const d={eventParsed:e,day:t,start:o,end:a,timed:!1};return this.genEvent(e,d,!1,{staticClass:"v-event",class:{"v-event-start":o,"v-event-end":a},style:{height:`${n}px`,width:`${v}%`,"margin-bottom":`${s}px`},attrs:{"data-date":t.date},key:e.index,ref:"events",refInFor:!0})},genTimedEvent({event:e,left:t,width:n},s){if(s.timeDelta(e.end)<0||s.timeDelta(e.start)>=1||isEventHiddenOn(e,s))return!1;const r=getDayIdentifier(s),i=e.startIdentifier>=r,o=e.endIdentifier>r,a=i?s.timeToY(e.start):0,v=o?s.timeToY(1440):s.timeToY(e.end),d=Math.max(this.eventHeight,v-a),h={eventParsed:e,day:s,start:i,end:o,timed:!0};return this.genEvent(e,h,!0,{staticClass:"v-event-timed",style:{top:`${a}px`,height:`${d}px`,left:`${t}%`,width:`${n}%`}})},genEvent(e,t,n,s){var r;const i=this.$scopedSlots.event,o=this.eventTextColorFunction(e.input),a=this.eventColorFunction(e.input),v=e.start.hour<12&&e.end.hour>=12,d=diffMinutes(e.start,e.end)<=this.parsedEventOverlapThreshold,h=this.formatTime,l=()=>h(e.start,v)+" - "+h(e.end,!0),p=()=>{const t=this.eventNameFunction(e,n);if(e.start.hasTime){const s="v-event-summary";if(n){const e=l();return`<span class="${s}"><strong>${t}</strong>${d?", ":"<br>"}${e}</span>`}return`<span class="${s}"><strong>${h(e.start,!0)}</strong> ${t}</span>`}return t},c={...t,event:e.input,outside:t.day.outside,singline:d,overlapsNoon:v,formatTime:h,timeSummary:l,eventSummary:p};return this.$createElement("div",this.setTextColor(o,this.setBackgroundColor(a,{on:this.getDefaultMouseEventHandlers(":event",(e=>({...c,nativeEvent:e}))),directives:[{name:"ripple",value:null==(r=this.eventRipple)||r}],...s})),i?i(c):[this.genName(p)])},genName(e){return this.$createElement("div",{staticClass:"pl-1",domProps:{innerHTML:e()}})},genPlaceholder(e){const t=this.eventHeight+this.eventMarginBottom;return this.$createElement("div",{style:{height:`${t}px`},attrs:{"data-date":e.date},ref:"events",refInFor:!0})},genMore(e){var t;const n=this.eventHeight,s=this.eventMarginBottom;return this.$createElement("div",{staticClass:"v-event-more pl-1",class:{"v-outside":e.outside},attrs:{"data-date":e.date,"data-more":1},directives:[{name:"ripple",value:null==(t=this.eventRipple)||t}],on:this.getDefaultMouseEventHandlers(":more",(t=>({nativeEvent:t,...e}))),style:{display:"none",height:`${n}px`,"margin-bottom":`${s}px`},ref:"events",refInFor:!0})},getVisibleEvents(){const e=getDayIdentifier(this.days[0]),t=getDayIdentifier(this.days[this.days.length-1]);return this.parsedEvents.filter((n=>isEventOverlapping(n,e,t)))},isEventForCategory(e,t){return!this.categoryMode||"object"==typeof t&&t.categoryName&&t.categoryName===e.category||"string"==typeof e.category&&t===e.category||"string"!=typeof e.category&&null===t},getEventsForDay(e){const t=getDayIdentifier(e),n=this.eventWeekdays[0];return this.parsedEvents.filter((s=>isEventStart(s,e,t,n)))},getEventsForDayAll(e){const t=getDayIdentifier(e),n=this.eventWeekdays[0];return this.parsedEvents.filter((s=>s.allDay&&(this.categoryMode?isEventOn(s,t):isEventStart(s,e,t,n))&&this.isEventForCategory(s,e.category)))},getEventsForDayTimed(e){const t=getDayIdentifier(e);return this.parsedEvents.filter((n=>!n.allDay&&isEventOn(n,t)&&this.isEventForCategory(n,e.category)))},getScopedSlots(){if(this.noEvents)return{...this.$scopedSlots};const e=this.eventModeFunction(this.parsedEvents,this.eventWeekdays[0],this.parsedEventOverlapThreshold),t=e=>!!e,n=(n,s,r,i)=>{const o=s(n),a=e(n,o,i,this.categoryMode);if(i)return a.map((e=>r(e,n))).filter(t);const v=[];return a.forEach(((e,t)=>{for(;v.length<e.column;)v.push(this.genPlaceholder(n));const s=r(e,n);s&&v.push(s)})),v},s=this.$scopedSlots,r=s.day,i=s["day-header"],o=s["day-body"];return{...s,day:e=>{let t=n(e,this.getEventsForDay,this.genDayEvent,!1);if(t&&t.length>0&&this.eventMore&&t.push(this.genMore(e)),r){const n=r(e);n&&(t=t?t.concat(n):n)}return t},"day-header":e=>{let t=n(e,this.getEventsForDayAll,this.genDayEvent,!1);if(i){const n=i(e);n&&(t=t?t.concat(n):n)}return t},"day-body":e=>{const t=n(e,this.getEventsForDayTimed,this.genTimedEvent,!0);let s=[this.$createElement("div",{staticClass:"v-event-timed-container"},t)];if(o){const t=o(e);t&&(s=s.concat(t))}return s}}}}});
//# sourceMappingURL=/sm/dcb63208e36488392255c5bc8c0e50ecb1dd5ed203e4c3c689dcf05fd2fd53d4.map
/**
 * Minified by jsDelivr using Terser v5.13.1.
 * Original file: /npm/vuetify@2.6.6/lib/components/VCalendar/mixins/calendar-with-intervals.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import CalendarBase from"./calendar-base";import props from"../util/props";import{parseTime,copyTimestamp,updateMinutes,createDayList,createIntervalList,createNativeLocaleFormatter,MINUTES_IN_DAY}from"../util/timestamp";export default CalendarBase.extend({name:"calendar-with-intervals",props:props.intervals,computed:{parsedFirstInterval(){return parseInt(this.firstInterval)},parsedIntervalMinutes(){return parseInt(this.intervalMinutes)},parsedIntervalCount(){return parseInt(this.intervalCount)},parsedIntervalHeight(){return parseFloat(this.intervalHeight)},parsedFirstTime(){return parseTime(this.firstTime)},firstMinute(){const t=this.parsedFirstTime;return!1!==t&&t>=0&&t<=MINUTES_IN_DAY?t:this.parsedFirstInterval*this.parsedIntervalMinutes},bodyHeight(){return this.parsedIntervalCount*this.parsedIntervalHeight},days(){return createDayList(this.parsedStart,this.parsedEnd,this.times.today,this.weekdaySkips,this.maxDays)},intervals(){const t=this.days,e=this.firstMinute,r=this.parsedIntervalMinutes,i=this.parsedIntervalCount,s=this.times.now;return t.map((t=>createIntervalList(t,e,r,i,s)))},intervalFormatter(){if(this.intervalFormat)return this.intervalFormat;const t={timeZone:"UTC",hour:"2-digit",minute:"2-digit"},e={timeZone:"UTC",hour:"numeric",minute:"2-digit"},r={timeZone:"UTC",hour:"numeric"};return createNativeLocaleFormatter(this.currentLocale,((i,s)=>s?0===i.minute?r:e:t))}},methods:{showIntervalLabelDefault(t){const e=this.intervals[0][0];return!(e.hour===t.hour&&e.minute===t.minute)},intervalStyleDefault(t){},getTimestampAtEvent(t,e){const r=copyTimestamp(e),i=t.currentTarget.getBoundingClientRect(),s=this.firstMinute,a=t,n=t,o=a.changedTouches||a.touches,l=((o&&o[0]?o[0].clientY:n.clientY)-i.top)/this.parsedIntervalHeight,u=Math.floor(l*this.parsedIntervalMinutes);return updateMinutes(r,s+u,this.times.now)},getSlotScope(t){const e=copyTimestamp(t);return e.timeToY=this.timeToY,e.timeDelta=this.timeDelta,e.minutesToPixels=this.minutesToPixels,e.week=this.days,e},scrollToTime(t){const e=this.timeToY(t),r=this.$refs.scrollArea;return!(!1===e||!r)&&(r.scrollTop=e,!0)},minutesToPixels(t){return t/this.parsedIntervalMinutes*this.parsedIntervalHeight},timeToY(t,e=!0){let r=this.timeDelta(t);return!1!==r&&(r*=this.bodyHeight,e&&(r<0&&(r=0),r>this.bodyHeight&&(r=this.bodyHeight))),r},timeDelta(t){const e=parseTime(t);if(!1===e)return!1;return(e-this.firstMinute)/(this.parsedIntervalCount*this.parsedIntervalMinutes)}}});
//# sourceMappingURL=/sm/434bdebc4bcb16af4543449b92c6f905b088a6dfceeada65fbcd35647fc602dd.map